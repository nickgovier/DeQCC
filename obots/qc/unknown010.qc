// func000226
// function begins at statement 5091, parm_start=4726
// OP_IFNOT	816	2	0
// OP_RETURN	0	0	0
// OP_LOAD_S	29	129	4728
// OP_NE_S	4728	1236	4729
// OP_IFNOT	4729	5	0
// OP_LOAD_S	29	129	4730
// OP_NE_S	4730	1241	4731
// OP_IFNOT	4731	2	0
// OP_RETURN	0	0	0
// OP_LOAD_S	29	129	4732
// OP_EQ_S	4732	1241	4733
// OP_IFNOT	4733	4	0
// OP_STORE_V	29	4	0
// OP_STORE_V	28	7	0
// OP_CALL2	1131	0	0
// OP_LOAD_F	29	152	4734
// OP_LE	4734	213	4735
// OP_IFNOT	4735	2	0
// OP_RETURN	0	0	0
// OP_STORE_ENT	28	4726	0
// OP_STORE_ENT	29	28	0
// OP_CALL0	4567	0	0
// OP_STORE_F	1	4727	0
// OP_STORE_ENT	4726	28	0
// OP_LOAD_F	28	154	4736
// OP_EQ_F	4736	214	4737
// OP_IFNOT	4737	10	0
// OP_LOAD_F	29	158	4738
// OP_GE	4738	1997	4739
// OP_IFNOT	4739	2	0
// OP_RETURN	0	0	0
// OP_ADDRESS	29	158	4740
// OP_LOAD_F	29	158	4741
// OP_LOAD_F	28	424	4742
// OP_ADD_F	4741	4742	4743
// OP_STOREP_F	4743	4740	0
// OP_LOAD_F	28	154	4744
// OP_EQ_F	4744	216	4745
// OP_IFNOT	4745	10	0
// OP_LOAD_F	29	159	4746
// OP_GE	4746	2044	4747
// OP_IFNOT	4747	2	0
// OP_RETURN	0	0	0
// OP_ADDRESS	29	159	4748
// OP_LOAD_F	29	159	4749
// OP_LOAD_F	28	424	4750
// OP_ADD_F	4749	4750	4751
// OP_STOREP_F	4751	4748	0
// OP_LOAD_F	28	154	4752
// OP_EQ_F	4752	228	4753
// OP_IFNOT	4753	10	0
// OP_LOAD_F	29	160	4754
// OP_GE	4754	1997	4755
// OP_IFNOT	4755	2	0
// OP_RETURN	0	0	0
// OP_ADDRESS	29	160	4756
// OP_LOAD_F	29	160	4757
// OP_LOAD_F	28	424	4758
// OP_ADD_F	4757	4758	4759
// OP_STOREP_F	4759	4756	0
// OP_LOAD_F	28	154	4760
// OP_EQ_F	4760	229	4761
// OP_IFNOT	4761	10	0
// OP_LOAD_F	29	161	4762
// OP_GE	4762	1997	4763
// OP_IFNOT	4763	2	0
// OP_RETURN	0	0	0
// OP_ADDRESS	29	161	4764
// OP_LOAD_F	29	161	4765
// OP_LOAD_F	28	424	4766
// OP_ADD_F	4765	4766	4767
// OP_STOREP_F	4767	4764	0
// OP_CALL0	4538	0	0
// OP_LOAD_S	29	129	4768
// OP_EQ_S	4768	1236	4769
// OP_IFNOT	4769	11	0
// OP_STORE_V	29	4	0
// OP_STORE_V	4651	7	0
// OP_CALL2	928	0	0
// OP_STORE_V	29	4	0
// OP_LOAD_S	28	180	4770
// OP_STORE_V	4770	7	0
// OP_CALL2	928	0	0
// OP_STORE_V	29	4	0
// OP_STORE_V	2127	7	0
// OP_CALL2	928	0	0
// OP_STORE_V	29	4	0
// OP_STORE_V	328	7	0
// OP_STORE_V	4771	10	0
// OP_STORE_V	214	13	0
// OP_STORE_V	331	16	0
// OP_CALL5	458	0	0
// OP_STORE_V	29	4	0
// OP_LOAD_V	28	105	4772
// OP_STORE_V	4772	7	0
// OP_STORE_V	539	10	0
// OP_STORE_V	759	13	0
// OP_CALL4	1120	0	0
// OP_LOAD_S	29	129	4775
// OP_EQ_S	4775	1236	4776
// OP_IFNOT	4776	4	0
// OP_STORE_V	29	4	0
// OP_STORE_V	4416	7	0
// OP_CALL2	839	0	0
// OP_LOAD_F	29	154	4777
// OP_EQ_F	4777	4727	4778
// OP_IFNOT	4778	8	0
// OP_STORE_ENT	28	4726	0
// OP_STORE_ENT	29	28	0
// OP_ADDRESS	28	154	4779
// OP_CALL0	4567	0	0
// OP_STOREP_F	1	4779	0
// OP_CALL0	4295	0	0
// OP_STORE_ENT	4726	28	0
// OP_STORE_ENT	28	4726	0
// OP_STORE_ENT	29	28	0
// OP_CALL0	4295	0	0
// OP_STORE_ENT	4726	28	0
// OP_ADDRESS	28	130	4780
// OP_STOREP_S	348	4780	0
// OP_ADDRESS	28	104	4781
// OP_STOREP_F	237	4781	0
// OP_EQ_F	35	214	4782
// OP_IFNOT	4782	4	0
// OP_ADDRESS	28	150	4783
// OP_ADD_F	31	309	4784
// OP_STOREP_F	4784	4783	0
// OP_EQ_F	35	228	4785
// OP_IFNOT	4785	4	0
// OP_ADDRESS	28	150	4786
// OP_ADD_F	31	309	4787
// OP_STOREP_F	4787	4786	0
// OP_ADDRESS	28	148	4788
// OP_STOREP_FNC	4296	4788	0
// OP_STORE_ENT	29	351	0
// OP_CALL0	520	0	0
// OP_DONE	0	0	0
void () func000226 = 
{
    local entity globaldef001880;
    local float globaldef001881;
    
    if(globaldef000799)
    {
        return;
    }
    
    
    if(other.classname != "player")
    {
        
        if(other.classname != "bot")
        {
            return;
        }
        
    }
    
    
    if(other.classname == "bot")
    {
        func002471(other, self);
    }
    
    
    if(other.health <= FALSE)
    {
        return;
    }
    
    globaldef001880 = self;
    self = other;
    globaldef001881 = func000284();
    self = globaldef001880;
    
    if(self.weapon == TRUE)
    {
        
        if(other.ammo_shells >= 100)
        {
            return;
        }
        
        other.ammo_shells = other.ammo_shells + self.aflag;
    }
    
    
    if(self.weapon == FL_SWIM)
    {
        
        if(other.ammo_nails >= 200)
        {
            return;
        }
        
        other.ammo_nails = other.ammo_nails + self.aflag;
    }
    
    
    if(self.weapon == MOVETYPE_WALK)
    {
        
        if(other.ammo_rockets >= 100)
        {
            return;
        }
        
        other.ammo_rockets = other.ammo_rockets + self.aflag;
    }
    
    
    if(self.weapon == MOVETYPE_STEP)
    {
        
        if(other.ammo_cells >= 100)
        {
            return;
        }
        
        other.ammo_cells = other.ammo_cells + self.aflag;
    }
    
    func000216();
    
    if(other.classname == "player")
    {
        func000092(other, "You got the ");
        func000092(other, self.netname);
        func000092(other, "\n");
    }
    
    sound(other, CHAN_ITEM, "weapons/lock4.wav", TRUE, ATTN_NORM);
    func002453(other, self.origin, globaldef000522, globaldef000742);
    
    if(other.classname == "player")
    {
        func000064(other, "bf\n");
    }
    
    
    if(other.weapon == globaldef001881)
    {
        globaldef001880 = self;
        self = other;
        self.weapon = func000284();
        func000283();
        self = globaldef001880;
    }
    
    globaldef001880 = self;
    self = other;
    func000283();
    self = globaldef001880;
    self.model = string_null;
    self.solid = SOLID_NOT;
    
    if(deathmatch == TRUE)
    {
        self.nextthink = time + SVC_INTERMISSION;
    }
    
    
    if(deathmatch == MOVETYPE_WALK)
    {
        self.nextthink = time + SVC_INTERMISSION;
    }
    
    self.think = func000204;
    activator = other;
    SUB_UseTargets();
};

