// func000402
// function begins at statement 12300, parm_start=8833
// OP_LOAD_F	28	152	8833
// OP_LE	8833	213	8834
// OP_IFNOT	8834	2	0
// OP_RETURN	0	0	0
// OP_LOAD_F	28	381	8835
// OP_IFNOT	8835	72	0
// OP_LOAD_F	28	387	8836
// OP_LT	8836	31	8837
// OP_IFNOT	8837	13	0
// OP_STORE_V	28	4	0
// OP_STORE_V	325	7	0
// OP_STORE_V	5065	10	0
// OP_STORE_V	539	13	0
// OP_STORE_V	332	16	0
// OP_CALL5	458	0	0
// OP_ADDRESS	28	387	8838
// OP_CALL0	457	0	0
// OP_MUL_F	1	228	8839
// OP_ADD_F	31	8839	8840
// OP_ADD_F	8840	214	8841
// OP_STOREP_F	8841	8838	0
// OP_LOAD_F	28	381	8842
// OP_ADD_F	31	228	8843
// OP_LT	8842	8843	8844
// OP_IFNOT	8844	28	0
// OP_LOAD_F	28	386	8845
// OP_EQ_F	8845	214	8846
// OP_IFNOT	8846	16	0
// OP_STORE_V	28	4	0
// OP_STORE_V	8847	7	0
// OP_CALL2	928	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	4416	7	0
// OP_CALL2	839	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	325	7	0
// OP_STORE_V	5064	10	0
// OP_STORE_V	214	13	0
// OP_STORE_V	331	16	0
// OP_CALL5	458	0	0
// OP_ADDRESS	28	386	8848
// OP_ADD_F	31	214	8849
// OP_STOREP_F	8849	8848	0
// OP_LOAD_F	28	386	8850
// OP_LT	8850	31	8851
// OP_IFNOT	8851	7	0
// OP_ADDRESS	28	386	8852
// OP_ADD_F	31	214	8853
// OP_STOREP_F	8853	8852	0
// OP_STORE_V	28	4	0
// OP_STORE_V	4416	7	0
// OP_CALL2	839	0	0
// OP_LOAD_F	28	381	8854
// OP_LT	8854	31	8855
// OP_IFNOT	8855	9	0
// OP_ADDRESS	28	162	8856
// OP_LOAD_F	28	162	8857
// OP_SUB_F	8857	272	8858
// OP_STOREP_F	8858	8856	0
// OP_ADDRESS	28	381	8859
// OP_STOREP_F	213	8859	0
// OP_ADDRESS	28	386	8860
// OP_STOREP_F	213	8860	0
// OP_ADDRESS	28	131	8861
// OP_STOREP_F	213	8861	0
// OP_BITAND	821	777	8862
// OP_IFNOT	8862	6	0
// OP_ADDRESS	28	574	8863
// OP_STOREP_F	213	8863	0
// OP_ADDRESS	28	573	8864
// OP_STOREP_F	525	8864	0
// OP_GOTO	5	0	0
// OP_ADDRESS	28	132	8865
// OP_STOREP_F	213	8865	0
// OP_ADDRESS	28	93	8866
// OP_STOREP_F	525	8866	0
// OP_GOTO	14	0	0
// OP_BITAND	821	777	8867
// OP_IFNOT	8867	7	0
// OP_ADDRESS	28	574	8868
// OP_LOAD_F	28	572	8869
// OP_STOREP_F	8869	8868	0
// OP_ADDRESS	28	573	8870
// OP_STOREP_F	526	8870	0
// OP_GOTO	6	0	0
// OP_ADDRESS	28	132	8871
// OP_LOAD_F	28	572	8872
// OP_STOREP_F	8872	8871	0
// OP_ADDRESS	28	93	8873
// OP_STOREP_F	526	8873	0
// OP_LOAD_F	28	380	8874
// OP_IFNOT	8874	57	0
// OP_LOAD_F	28	380	8875
// OP_ADD_F	31	228	8876
// OP_LT	8875	8876	8877
// OP_IFNOT	8877	28	0
// OP_LOAD_F	28	384	8878
// OP_EQ_F	8878	214	8879
// OP_IFNOT	8879	16	0
// OP_STORE_V	28	4	0
// OP_STORE_V	8880	7	0
// OP_CALL2	928	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	4416	7	0
// OP_CALL2	839	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	325	7	0
// OP_STORE_V	5042	10	0
// OP_STORE_V	214	13	0
// OP_STORE_V	331	16	0
// OP_CALL5	458	0	0
// OP_ADDRESS	28	384	8881
// OP_ADD_F	31	214	8882
// OP_STOREP_F	8882	8881	0
// OP_LOAD_F	28	384	8883
// OP_LT	8883	31	8884
// OP_IFNOT	8884	7	0
// OP_ADDRESS	28	384	8885
// OP_ADD_F	31	214	8886
// OP_STOREP_F	8886	8885	0
// OP_STORE_V	28	4	0
// OP_STORE_V	4416	7	0
// OP_CALL2	839	0	0
// OP_LOAD_F	28	380	8887
// OP_LT	8887	31	8888
// OP_IFNOT	8888	9	0
// OP_ADDRESS	28	162	8889
// OP_LOAD_F	28	162	8890
// OP_SUB_F	8890	273	8891
// OP_STOREP_F	8891	8889	0
// OP_ADDRESS	28	384	8892
// OP_STOREP_F	213	8892	0
// OP_ADDRESS	28	380	8893
// OP_STOREP_F	213	8893	0
// OP_LOAD_F	28	380	8894
// OP_GT	8894	31	8895
// OP_IFNOT	8895	6	0
// OP_ADDRESS	28	133	8896
// OP_LOAD_F	28	133	8897
// OP_BITOR	8897	341	8898
// OP_STOREP_F	8898	8896	0
// OP_GOTO	7	0	0
// OP_ADDRESS	28	133	8899
// OP_LOAD_F	28	133	8900
// OP_LOAD_F	28	133	8901
// OP_BITAND	8901	341	8902
// OP_SUB_F	8900	8902	8903
// OP_STOREP_F	8903	8899	0
// OP_LOAD_F	28	382	8904
// OP_IFNOT	8904	57	0
// OP_LOAD_F	28	382	8905
// OP_ADD_F	31	228	8906
// OP_LT	8905	8906	8907
// OP_IFNOT	8907	28	0
// OP_LOAD_F	28	388	8908
// OP_EQ_F	8908	214	8909
// OP_IFNOT	8909	16	0
// OP_STORE_V	28	4	0
// OP_STORE_V	8910	7	0
// OP_CALL2	928	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	4416	7	0
// OP_CALL2	839	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	325	7	0
// OP_STORE_V	5077	10	0
// OP_STORE_V	214	13	0
// OP_STORE_V	331	16	0
// OP_CALL5	458	0	0
// OP_ADDRESS	28	388	8911
// OP_ADD_F	31	214	8912
// OP_STOREP_F	8912	8911	0
// OP_LOAD_F	28	388	8913
// OP_LT	8913	31	8914
// OP_IFNOT	8914	7	0
// OP_ADDRESS	28	388	8915
// OP_ADD_F	31	214	8916
// OP_STOREP_F	8916	8915	0
// OP_STORE_V	28	4	0
// OP_STORE_V	4416	7	0
// OP_CALL2	839	0	0
// OP_LOAD_F	28	382	8917
// OP_LT	8917	31	8918
// OP_IFNOT	8918	9	0
// OP_ADDRESS	28	162	8919
// OP_LOAD_F	28	162	8920
// OP_SUB_F	8920	275	8921
// OP_STOREP_F	8921	8919	0
// OP_ADDRESS	28	382	8922
// OP_STOREP_F	213	8922	0
// OP_ADDRESS	28	388	8923
// OP_STOREP_F	213	8923	0
// OP_LOAD_F	28	382	8924
// OP_GT	8924	31	8925
// OP_IFNOT	8925	6	0
// OP_ADDRESS	28	133	8926
// OP_LOAD_F	28	133	8927
// OP_BITOR	8927	341	8928
// OP_STOREP_F	8928	8926	0
// OP_GOTO	7	0	0
// OP_ADDRESS	28	133	8929
// OP_LOAD_F	28	133	8930
// OP_LOAD_F	28	133	8931
// OP_BITAND	8931	341	8932
// OP_SUB_F	8930	8932	8933
// OP_STOREP_F	8933	8929	0
// OP_LOAD_F	28	383	8934
// OP_IFNOT	8934	46	0
// OP_ADDRESS	28	396	8935
// OP_ADD_F	31	791	8936
// OP_STOREP_F	8936	8935	0
// OP_LOAD_F	28	383	8937
// OP_ADD_F	31	228	8938
// OP_LT	8937	8938	8939
// OP_IFNOT	8939	28	0
// OP_LOAD_F	28	390	8940
// OP_EQ_F	8940	214	8941
// OP_IFNOT	8941	16	0
// OP_STORE_V	28	4	0
// OP_STORE_V	8942	7	0
// OP_CALL2	928	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	4416	7	0
// OP_CALL2	839	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	325	7	0
// OP_STORE_V	5054	10	0
// OP_STORE_V	214	13	0
// OP_STORE_V	331	16	0
// OP_CALL5	458	0	0
// OP_ADDRESS	28	390	8943
// OP_ADD_F	31	214	8944
// OP_STOREP_F	8944	8943	0
// OP_LOAD_F	28	390	8945
// OP_LT	8945	31	8946
// OP_IFNOT	8946	7	0
// OP_ADDRESS	28	390	8947
// OP_ADD_F	31	214	8948
// OP_STOREP_F	8948	8947	0
// OP_STORE_V	28	4	0
// OP_STORE_V	4416	7	0
// OP_CALL2	839	0	0
// OP_LOAD_F	28	383	8949
// OP_LT	8949	31	8950
// OP_IFNOT	8950	9	0
// OP_ADDRESS	28	162	8951
// OP_LOAD_F	28	162	8952
// OP_SUB_F	8952	274	8953
// OP_STOREP_F	8953	8951	0
// OP_ADDRESS	28	390	8954
// OP_STOREP_F	213	8954	0
// OP_ADDRESS	28	383	8955
// OP_STOREP_F	213	8955	0
// OP_DONE	0	0	0
void () func000402 = 
{
    
    if(self.health <= FALSE)
    {
        return;
    }
    
    if(self.invisible_finished)
    {
        
        if(self.invisible_sound < time)
        {
            sound(self, CHAN_AUTO, "items/inv3.wav", globaldef000522, ATTN_IDLE);
            self.invisible_sound = (time + (random() * MOVETYPE_WALK)) + TRUE;
        }
        
        
        if(self.invisible_finished < (time + MOVETYPE_WALK))
        {
            
            if(self.invisible_time == TRUE)
            {
                func000092(self, "Ring of Shadows magic is fading\n");
                func000064(self, "bf\n");
                sound(self, CHAN_AUTO, "items/inv2.wav", TRUE, ATTN_NORM);
                self.invisible_time = time + TRUE;
            }
            
            
            if(self.invisible_time < time)
            {
                self.invisible_time = time + TRUE;
                func000064(self, "bf\n");
            }
            
        }
        
        
        if(self.invisible_finished < time)
        {
            self.items = self.items - IT_INVISIBILITY;
            self.invisible_finished = FALSE;
            self.invisible_time = FALSE;
        }
        
        self.frame = FALSE;
        if(globaldef000804 & globaldef000760)
        {
            self.field000251 = FALSE;
            self.field000250 = globaldef000508;
        }
        else
        {
            self.skin = FALSE;
            self.modelindex = globaldef000508;
        }
        
    }
    else
    {
        if(globaldef000804 & globaldef000760)
        {
            self.field000251 = self.field000249;
            self.field000250 = globaldef000509;
        }
        else
        {
            self.skin = self.field000249;
            self.modelindex = globaldef000509;
        }
        
    }
    
    
    if(self.invincible_finished)
    {
        
        if(self.invincible_finished < (time + MOVETYPE_WALK))
        {
            
            if(self.invincible_time == TRUE)
            {
                func000092(self, "Protection is almost burned out\n");
                func000064(self, "bf\n");
                sound(self, CHAN_AUTO, "items/protect2.wav", TRUE, ATTN_NORM);
                self.invincible_time = time + TRUE;
            }
            
            
            if(self.invincible_time < time)
            {
                self.invincible_time = time + TRUE;
                func000064(self, "bf\n");
            }
            
        }
        
        
        if(self.invincible_finished < time)
        {
            self.items = self.items - IT_INVULNERABILITY;
            self.invincible_time = FALSE;
            self.invincible_finished = FALSE;
        }
        
        if(self.invincible_finished > time)
        {
            self.effects = self.effects | EF_DIMLIGHT;
        }
        else
        {
            self.effects = self.effects - (self.effects & EF_DIMLIGHT);
        }
        
    }
    
    
    if(self.super_damage_finished)
    {
        
        if(self.super_damage_finished < (time + MOVETYPE_WALK))
        {
            
            if(self.super_time == TRUE)
            {
                func000092(self, "Quad Damage is wearing off\n");
                func000064(self, "bf\n");
                sound(self, CHAN_AUTO, "items/damage2.wav", TRUE, ATTN_NORM);
                self.super_time = time + TRUE;
            }
            
            
            if(self.super_time < time)
            {
                self.super_time = time + TRUE;
                func000064(self, "bf\n");
            }
            
        }
        
        
        if(self.super_damage_finished < time)
        {
            self.items = self.items - IT_QUAD;
            self.super_damage_finished = FALSE;
            self.super_time = FALSE;
        }
        
        if(self.super_damage_finished > time)
        {
            self.effects = self.effects | EF_DIMLIGHT;
        }
        else
        {
            self.effects = self.effects - (self.effects & EF_DIMLIGHT);
        }
        
    }
    
    
    if(self.radsuit_finished)
    {
        self.air_finished = time + globaldef000774;
        
        if(self.radsuit_finished < (time + MOVETYPE_WALK))
        {
            
            if(self.rad_time == TRUE)
            {
                func000092(self, "Air supply in Biosuit expiring\n");
                func000064(self, "bf\n");
                sound(self, CHAN_AUTO, "items/suit2.wav", TRUE, ATTN_NORM);
                self.rad_time = time + TRUE;
            }
            
            
            if(self.rad_time < time)
            {
                self.rad_time = time + TRUE;
                func000064(self, "bf\n");
            }
            
        }
        
        
        if(self.radsuit_finished < time)
        {
            self.items = self.items - IT_SUIT;
            self.rad_time = FALSE;
            self.radsuit_finished = FALSE;
        }
        
    }
    
};

