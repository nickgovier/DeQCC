void () HE_Fall;
// T_HETouch
// function begins at statement 7606, parm_start=5884
// OP_LOAD_F	29	129	5888
// OP_EQ_F	5888	292	5889
// OP_IFNOT	5889	2	0
// OP_RETURN	0	0	0
// OP_LOAD_ENT	28	226	5890
// OP_EQ_E	29	5890	5891
// OP_LOAD_ENT	29	226	5892
// OP_LOAD_ENT	28	226	5893
// OP_EQ_E	5892	5893	5894
// OP_OR	5891	5894	5895
// OP_IFNOT	5895	2	0
// OP_RETURN	0	0	0
// OP_LOAD_ENT	28	226	5896
// OP_LOAD_F	5896	207	5897
// OP_BITAND	5897	274	5898
// OP_IFNOT	5898	2	0
// OP_RETURN	0	0	0
// OP_NE_E	29	30	5899
// OP_IFNOT	5899	8	0
// OP_LOAD_F	29	188	5900
// OP_NOT_F	5900	0	5901
// OP_LOAD_F	29	129	5902
// OP_LT	5902	806	5903
// OP_AND	5901	5903	5904
// OP_IFNOT	5904	2	0
// OP_RETURN	0	0	0
// OP_LOAD_S	29	154	5905
// OP_EQ_S	5905	5906	5907
// OP_IFNOT	5907	2	0
// OP_RETURN	0	0	0
// OP_LOAD_S	29	154	5908
// OP_EQ_S	5908	5708	5909
// OP_LOAD_F	28	177	5910
// OP_GT	5910	619	5911
// OP_AND	5909	5911	5912
// OP_IFNOT	5912	37	0
// OP_LOAD_F	28	143	5913
// OP_STORE_V	5913	4	0
// OP_CALL1	534	0	0
// OP_LT	1	1111	5914
// OP_LOAD_F	28	145	5915
// OP_STORE_V	5915	4	0
// OP_CALL1	534	0	0
// OP_LT	1	1111	5916
// OP_AND	5914	5916	5917
// OP_IFNOT	5917	27	0
// OP_LOAD_F	28	241	5918
// OP_NOT_F	5918	0	5919
// OP_IFNOT	5919	5	0
// OP_LOAD_ENT	28	219	5920
// OP_STORE_V	5920	4	0
// OP_STORE_V	5740	7	0
// OP_CALL2	518	0	0
// OP_ADDRESS	28	241	5921
// OP_STOREP_F	677	5921	0
// OP_ADDRESS	28	176	5922
// OP_STOREP_ENT	29	5922	0
// OP_ADDRESS	28	143	5923
// OP_STOREP_F	619	5923	0
// OP_ADDRESS	28	145	5924
// OP_STOREP_F	619	5924	0
// OP_ADDRESS	28	146	5925
// OP_STOREP_V	607	5925	0
// OP_ADDRESS	28	138	5928
// OP_STOREP_V	607	5928	0
// OP_ADDRESS	28	133	5931
// OP_LOAD_F	29	133	5932
// OP_LOAD_F	29	166	5933
// OP_ADD_F	5932	5933	5934
// OP_ADD_F	5934	812	5935
// OP_STOREP_F	5935	5931	0
// OP_RETURN	0	0	0
// OP_STORE_V	386	4	0
// OP_STORE_V	350	7	0
// OP_CALL2	542	0	0
// OP_STORE_V	386	4	0
// OP_STORE_V	360	7	0
// OP_CALL2	542	0	0
// OP_STORE_V	386	4	0
// OP_LOAD_F	28	131	5936
// OP_STORE_V	5936	7	0
// OP_CALL2	546	0	0
// OP_STORE_V	386	4	0
// OP_LOAD_F	28	132	5937
// OP_STORE_V	5937	7	0
// OP_CALL2	546	0	0
// OP_STORE_V	386	4	0
// OP_LOAD_F	28	133	5938
// OP_STORE_V	5938	7	0
// OP_CALL2	546	0	0
// OP_LOAD_ENT	28	219	5939
// OP_LOAD_F	5939	178	5940
// OP_STORE_F	5940	5885	0
// OP_EQ_E	29	30	5941
// OP_LOAD_F	29	177	5942
// OP_GT	5942	619	5943
// OP_OR	5941	5943	5944
// OP_LOAD_F	28	177	5945
// OP_LT	5945	677	5946
// OP_LOAD_F	28	423	5947
// OP_GT	31	5947	5948
// OP_AND	5946	5948	5949
// OP_OR	5944	5949	5950
// OP_IFNOT	5950	76	0
// OP_ADDRESS	28	130	5951
// OP_LOAD_V	28	130	5954
// OP_LOAD_V	28	138	5957
// OP_STORE_V	5957	4	0
// OP_CALL1	503	0	0
// OP_MUL_VF	1	810	5960
// OP_SUB_V	5954	5960	5963
// OP_STOREP_V	5963	5951	0
// OP_LOAD_ENT	28	219	5966
// OP_STORE_V	5966	4	0
// OP_LOAD_V	28	130	5967
// OP_STORE_V	5967	7	0
// OP_CALL2	497	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	28	7	0
// OP_STORE_V	5970	10	0
// OP_STORE_V	28	13	0
// OP_CALL4	2232	0	0
// OP_LOAD_F	28	177	5971
// OP_GT	5971	619	5972
// OP_IFNOT	5972	37	0
// OP_LOAD_ENT	28	219	5973
// OP_ADDRESS	5973	178	5974
// OP_SUB_F	5885	677	5975
// OP_STOREP_F	5975	5974	0
// OP_LOAD_ENT	28	219	5976
// OP_LOAD_S	5976	205	5977
// OP_STORE_V	5977	4	0
// OP_CALL1	517	0	0
// OP_STORE_V	5796	4	0
// OP_CALL1	517	0	0
// OP_NE_E	29	30	5978
// OP_IFNOT	5978	21	0
// OP_LOAD_S	29	205	5979
// OP_IFNOT	5979	5	0
// OP_LOAD_S	29	205	5980
// OP_STORE_V	5980	4	0
// OP_CALL1	517	0	0
// OP_GOTO	12	0	0
// OP_LOAD_S	29	154	5981
// OP_EQ_S	5981	5801	5982
// OP_IFNOT	5982	4	0
// OP_STORE_V	5803	4	0
// OP_CALL1	517	0	0
// OP_GOTO	6	0	0
// OP_LOAD_S	29	154	5983
// OP_EQ_S	5983	5708	5984
// OP_IFNOT	5984	3	0
// OP_STORE_V	5806	4	0
// OP_CALL1	517	0	0
// OP_STORE_V	2073	4	0
// OP_CALL1	517	0	0
// OP_GOTO	3	0	0
// OP_STORE_V	5807	4	0
// OP_CALL1	517	0	0
// OP_ADDRESS	28	177	5985
// OP_STOREP_F	619	5985	0
// OP_ADDRESS	28	188	5986
// OP_STOREP_F	304	5986	0
// OP_CALL0	2603	0	0
// OP_CALL0	5261	0	0
// OP_CALL0	5261	0	0
// OP_CALL0	5261	0	0
// OP_CALL0	5261	0	0
// OP_LOAD_ENT	28	226	5987
// OP_STORE_V	5987	4	0
// OP_LOAD_ENT	28	226	5988
// OP_STORE_V	5988	7	0
// OP_LOAD_ENT	28	226	5989
// OP_STORE_V	5989	10	0
// OP_STORE_V	1622	13	0
// OP_CALL4	569	0	0
// OP_ADDRESS	28	171	5990
// OP_STOREP_FNC	566	5990	0
// OP_GOTO	50	0	0
// OP_STORE_V	29	4	0
// OP_STORE_V	28	7	0
// OP_STORE_V	28	10	0
// OP_STORE_V	5970	13	0
// OP_CALL4	569	0	0
// OP_LOAD_F	28	177	5991
// OP_GT	5991	619	5992
// OP_IFNOT	5992	35	0
// OP_ADDRESS	28	423	5993
// OP_ADD_F	31	1687	5994
// OP_STOREP_F	5994	5993	0
// OP_LOAD_ENT	28	219	5995
// OP_ADDRESS	5995	178	5996
// OP_SUB_F	5885	677	5997
// OP_STOREP_F	5997	5996	0
// OP_LOAD_ENT	28	219	5998
// OP_LOAD_S	5998	205	5999
// OP_STORE_V	5999	4	0
// OP_CALL1	517	0	0
// OP_STORE_V	5796	4	0
// OP_CALL1	517	0	0
// OP_NE_E	29	30	6000
// OP_IFNOT	6000	20	0
// OP_LOAD_S	29	205	6001
// OP_IFNOT	6001	5	0
// OP_LOAD_S	29	205	6002
// OP_STORE_V	6002	4	0
// OP_CALL1	517	0	0
// OP_GOTO	12	0	0
// OP_LOAD_S	29	154	6003
// OP_EQ_S	6003	5801	6004
// OP_IFNOT	6004	4	0
// OP_STORE_V	5803	4	0
// OP_CALL1	517	0	0
// OP_GOTO	6	0	0
// OP_LOAD_S	29	154	6005
// OP_EQ_S	6005	5708	6006
// OP_IFNOT	6006	3	0
// OP_STORE_V	5806	4	0
// OP_CALL1	517	0	0
// OP_STORE_V	2073	4	0
// OP_CALL1	517	0	0
// OP_ADDRESS	28	177	6007
// OP_STOREP_F	619	6007	0
// OP_ADDRESS	28	411	6008
// OP_STOREP_FNC	566	6008	0
// OP_ADDRESS	28	171	6009
// OP_STOREP_FNC	5883	6009	0
// OP_CALL0	5882	0	0
// OP_DONE	0	0	0
void () T_HETouch = 
{
    local float damg;
    local float temp;
    local entity stemp;
    local entity stemp2;
    
    if(other.solid == SOLID_TRIGGER)
    {
        return;
    }
    
    
    if((other == self.owner) || (other.owner == self.owner))
    {
        return;
    }
    
    
    if(self.owner.flags & FL_GODMODE)
    {
        return;
    }
    
    
    if(other != world)
    {
        
        if(!other.takedamage && (other.solid < 2.000))
        {
            return;
        }
        
    }
    
    
    if(other.classname == "func_button")
    {
        return;
    }
    
    
    if((other.classname == "func_runway") && (self.health > 0.000))
    {
        
        if((fabs(self.angles_x) < 20.000) && (fabs(self.angles_z) < 20.000))
        {
            
            if(!self.landed)
            {
                sprint(self.goalentity, "Landed.\n");
            }
            
            self.landed = 1.000;
            self.groundentity = other;
            self.angles_x = 0.000;
            self.angles_z = 0.000;
            self.avelocity = '0.000 0.000 0.000';
            self.velocity = '0.000 0.000 0.000';
            self.origin_z = (other.origin_z + other.maxs_z) + 16.000;
            return;
        }
        
    }
    
    WriteByte(MSG_BROADCAST, SVC_TEMPENTITY);
    WriteByte(MSG_BROADCAST, TE_EXPLOSION);
    WriteCoord(MSG_BROADCAST, self.origin_x);
    WriteCoord(MSG_BROADCAST, self.origin_y);
    WriteCoord(MSG_BROADCAST, self.origin_z);
    temp = self.goalentity.frags;
    if(((other == world) || (other.health > 0.000)) || ((self.health < 1.000) && (time > self.pain_finished)))
    {
        self.origin = self.origin - (normalize(self.velocity) * 8.000);
        setorigin(self.goalentity, self.origin);
        T_RadiusDamage(self, self, 240.000, self);
        
        if(self.health > 0.000)
        {
            self.goalentity.frags = temp - 1.000;
            bprint(self.goalentity.netname);
            bprint(" crashed into ");
            if(other != world)
            {
                if(other.netname)
                {
                    bprint(other.netname);
                }
                else
                {
                    if(other.classname == "func_xwall")
                    {
                        bprint("a building");
                    }
                    else
                    {
                        
                        if(other.classname == "func_runway")
                        {
                            bprint("a runway");
                        }
                        
                    }
                    
                }
                
                bprint("\n");
            }
            else
            {
                bprint("the ground\n");
            }
            
            self.health = 0.000;
        }
        
        self.takedamage = DAMAGE_NO;
        BecomeExplosion();
        Throw_ACgib();
        Throw_ACgib();
        Throw_ACgib();
        Throw_ACgib();
        T_Damage(self.owner, self.owner, self.owner, 1000.000);
        self.touch = SUB_Null;
    }
    else
    {
        T_Damage(other, self, self, 240.000);
        
        if(self.health > 0.000)
        {
            self.pain_finished = time + 0.300;
            self.goalentity.frags = temp - 1.000;
            bprint(self.goalentity.netname);
            bprint(" crashed into ");
            
            if(other != world)
            {
                if(other.netname)
                {
                    bprint(other.netname);
                }
                else
                {
                    if(other.classname == "func_xwall")
                    {
                        bprint("a building");
                    }
                    else
                    {
                        
                        if(other.classname == "func_runway")
                        {
                            bprint("a runway");
                        }
                        
                    }
                    
                }
                
                bprint("\n");
            }
            
        }
        
        self.health = 0.000;
        self.th_die = SUB_Null;
        self.touch = T_HETouch;
        HE_Fall();
    }
    
};

// HE_Fall
// function begins at statement 7835, parm_start=6010
// OP_STORE_V	607	6010	0
// OP_LOAD_F	28	143	6019
// OP_SUB_F	5845	6019	6020
// OP_STORE_F	6020	6010	0
// OP_STORE_V	5848	6013	0
// OP_LT	6010	619	6021
// OP_IFNOT	6021	2	0
// OP_STORE_F	5852	6013	0
// OP_STORE_V	6010	4	0
// OP_CALL1	534	0	0
// OP_LT	1	806	6022
// OP_IFNOT	6022	4	0
// OP_STORE_F	619	6013	0
// OP_ADDRESS	28	143	6023
// OP_STOREP_F	5845	6023	0
// OP_ADDRESS	28	146	6024
// OP_STOREP_V	6013	6024	0
// OP_ADDRESS	28	138	6027
// OP_LOAD_V	28	138	6030
// OP_STORE_V	6033	4	0
// OP_CALL1	536	0	0
// OP_MUL_VF	595	1	6034
// OP_MUL_VF	6034	655	6037
// OP_ADD_V	6030	6037	6040
// OP_STOREP_V	6040	6027	0
// OP_LOAD_F	28	207	6043
// OP_BITAND	6043	277	6044
// OP_IFNOT	6044	5	0
// OP_ADDRESS	28	207	6045
// OP_LOAD_F	28	207	6046
// OP_SUB_F	6046	277	6047
// OP_STOREP_F	6047	6045	0
// OP_ADDRESS	28	173	6048
// OP_STOREP_FNC	5882	6048	0
// OP_ADDRESS	28	175	6049
// OP_ADD_F	31	655	6050
// OP_STOREP_F	6050	6049	0
// OP_DONE	0	0	0
void () HE_Fall = 
{
    local vector v1;
    local vector v2;
    local vector v3;
    v1 = '0.000 0.000 0.000';
    v1_x = -70.000 - self.angles_x;
    v2 = '0.000 0.000 360.000';
    
    if(v1_x < 0.000)
    {
        v2_x = -20.000;
    }
    
    
    if(fabs(v1_x) < 2.000)
    {
        v2_x = 0.000;
        self.angles_x = -70.000;
    }
    
    self.avelocity = v2;
    self.velocity = self.velocity + (('0.000 0.000 -1.000' * cvar("sv_gravity")) * 0.100);
    
    if(self.flags & FL_ONGROUND)
    {
        self.flags = self.flags - FL_ONGROUND;
    }
    
    self.think = HE_Fall;
    self.nextthink = time + 0.100;
};

// HE_Die
// function begins at statement 7873, parm_start=6052
// OP_STORE_V	386	4	0
// OP_STORE_V	350	7	0
// OP_CALL2	542	0	0
// OP_STORE_V	386	4	0
// OP_STORE_V	360	7	0
// OP_CALL2	542	0	0
// OP_STORE_V	386	4	0
// OP_LOAD_F	28	131	6052
// OP_STORE_V	6052	7	0
// OP_CALL2	546	0	0
// OP_STORE_V	386	4	0
// OP_LOAD_F	28	132	6053
// OP_STORE_V	6053	7	0
// OP_CALL2	546	0	0
// OP_STORE_V	386	4	0
// OP_LOAD_F	28	133	6054
// OP_STORE_V	6054	7	0
// OP_CALL2	546	0	0
// OP_ADDRESS	28	423	6055
// OP_ADD_F	31	1687	6056
// OP_STOREP_F	6056	6055	0
// OP_ADDRESS	28	171	6057
// OP_STOREP_FNC	5883	6057	0
// OP_CALL0	5882	0	0
// OP_DONE	0	0	0
void () HE_Die = 
{
    WriteByte(MSG_BROADCAST, SVC_TEMPENTITY);
    WriteByte(MSG_BROADCAST, TE_EXPLOSION);
    WriteCoord(MSG_BROADCAST, self.origin_x);
    WriteCoord(MSG_BROADCAST, self.origin_y);
    WriteCoord(MSG_BROADCAST, self.origin_z);
    self.pain_finished = time + 0.300;
    self.touch = T_HETouch;
    HE_Fall();
};

