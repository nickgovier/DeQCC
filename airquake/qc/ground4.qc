// gv4_steer
// function begins at statement 16070, parm_start=12113
// OP_LOAD_ENT	28	206	12132
// OP_STORE_ENT	12132	12113	0
// OP_LOAD_F	12113	413	12133
// OP_LOAD_F	12113	240	12134
// OP_ADD_F	12134	677	12135
// OP_MUL_F	12135	816	12136
// OP_DIV_F	12133	12136	12137
// OP_STORE_F	12137	12129	0
// OP_STORE_V	12129	4	0
// OP_CALL1	530	0	0
// OP_STORE_F	1	12129	0
// OP_GT	12129	810	12138
// OP_IFNOT	12138	2	0
// OP_STORE_F	810	12129	0
// OP_LOAD_F	28	435	12139
// OP_GT	31	12139	12140
// OP_LOAD_F	12113	198	12141
// OP_NE_F	12141	12129	12142
// OP_OR	12140	12142	12143
// OP_IFNOT	12143	87	0
// OP_LOAD_F	12113	240	12144
// OP_MUL_F	12144	3649	12145
// OP_STORE_F	12145	12130	0
// OP_EQ_F	12129	619	12146
// OP_IFNOT	12146	8	0
// OP_STORE_V	12113	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	12147	10	0
// OP_STORE_V	12130	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	70	0	0
// OP_EQ_F	12129	677	12148
// OP_IFNOT	12148	8	0
// OP_STORE_V	12113	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	12149	10	0
// OP_STORE_V	12130	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	61	0	0
// OP_EQ_F	12129	806	12150
// OP_IFNOT	12150	8	0
// OP_STORE_V	12113	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	12151	10	0
// OP_STORE_V	12130	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	52	0	0
// OP_EQ_F	12129	788	12152
// OP_IFNOT	12152	8	0
// OP_STORE_V	12113	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	12153	10	0
// OP_STORE_V	12130	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	43	0	0
// OP_EQ_F	12129	808	12154
// OP_IFNOT	12154	8	0
// OP_STORE_V	12113	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	12155	10	0
// OP_STORE_V	12130	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	34	0	0
// OP_EQ_F	12129	813	12156
// OP_IFNOT	12156	8	0
// OP_STORE_V	12113	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	12157	10	0
// OP_STORE_V	12130	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	25	0	0
// OP_EQ_F	12129	816	12158
// OP_IFNOT	12158	8	0
// OP_STORE_V	12113	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	12159	10	0
// OP_STORE_V	12130	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	16	0	0
// OP_EQ_F	12129	819	12160
// OP_IFNOT	12160	8	0
// OP_STORE_V	12113	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	12161	10	0
// OP_STORE_V	12130	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	7	0	0
// OP_STORE_V	12113	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	12162	10	0
// OP_STORE_V	12130	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_ADDRESS	28	435	12163
// OP_ADD_F	31	677	12164
// OP_STOREP_F	12164	12163	0
// OP_ADDRESS	12113	198	12165
// OP_STOREP_F	12129	12165	0
// OP_LOAD_F	28	207	12166
// OP_BITAND	12166	274	12167
// OP_NOT_F	12167	0	12168
// OP_IFNOT	12168	5	0
// OP_STORE_V	2618	4	0
// OP_STORE_V	2618	7	0
// OP_CALL2	7399	0	0
// OP_GOTO	4	0	0
// OP_STORE_V	1622	4	0
// OP_STORE_V	1622	7	0
// OP_CALL2	7399	0	0
// OP_LOAD_V	28	138	12169
// OP_LOAD_V	28	227	12172
// OP_SUB_V	12169	12172	12175
// OP_STORE_V	12175	4	0
// OP_CALL1	506	0	0
// OP_STORE_F	1	12129	0
// OP_ADDRESS	28	227	12178
// OP_LOAD_V	28	138	12181
// OP_STOREP_V	12181	12178	0
// OP_GT	12129	2627	12184
// OP_IFNOT	12184	14	0
// OP_STORE_V	12113	4	0
// OP_STORE_V	371	7	0
// OP_STORE_V	10644	10	0
// OP_STORE_V	677	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_STORE_V	12113	4	0
// OP_STORE_V	30	7	0
// OP_STORE_V	30	10	0
// OP_SUB_F	12129	2627	12185
// OP_MUL_F	12185	655	12186
// OP_STORE_V	12186	13	0
// OP_CALL4	569	0	0
// OP_ADDRESS	12113	207	12187
// OP_LOAD_F	12113	207	12188
// OP_LOAD_F	12113	207	12189
// OP_BITAND	12189	277	12190
// OP_SUB_F	12188	12190	12191
// OP_STOREP_F	12191	12187	0
// OP_LOAD_F	12113	240	12192
// OP_NE_F	12192	619	12193
// OP_IFNOT	12193	7	0
// OP_ADDRESS	28	207	12194
// OP_LOAD_F	28	207	12195
// OP_LOAD_F	28	207	12196
// OP_BITAND	12196	277	12197
// OP_SUB_F	12195	12197	12198
// OP_STOREP_F	12198	12194	0
// OP_LOAD_V	12113	142	12199
// OP_STORE_V	12199	12117	0
// OP_SUB_F	619	12117	12202
// OP_STORE_F	12202	12117	0
// OP_STORE_V	12117	4	0
// OP_CALL1	496	0	0
// OP_STORE_V	59	12123	0
// OP_LOAD_F	28	466	12203
// OP_GE	31	12203	12204
// OP_IFNOT	12204	172	0
// OP_STORE_F	619	12129	0
// OP_LOAD_F	28	197	12205
// OP_IFNOT	12205	21	0
// OP_LOAD_F	28	202	12206
// OP_LOAD_F	12113	144	12207
// OP_SUB_F	12206	12207	12208
// OP_STORE_F	12208	12129	0
// OP_LT	12129	619	12209
// OP_IFNOT	12209	3	0
// OP_ADD_F	12129	1459	12210
// OP_STORE_F	12210	12129	0
// OP_GT	12129	1827	12211
// OP_IFNOT	12211	3	0
// OP_SUB_F	12129	1459	12212
// OP_STORE_F	12212	12129	0
// OP_LOAD_F	12113	240	12213
// OP_MUL_F	1203	12213	12214
// OP_STORE_F	12214	12129	0
// OP_LOAD_F	28	207	12215
// OP_BITAND	12215	274	12216
// OP_IFNOT	12216	3	0
// OP_MUL_F	1111	12129	12217
// OP_STORE_F	12217	12129	0
// OP_LOAD_F	12113	413	12218
// OP_GE	12218	12129	12219
// OP_IFNOT	12219	11	0
// OP_ADDRESS	12113	413	12220
// OP_LOAD_F	12113	413	12221
// OP_SUB_F	12221	810	12222
// OP_STOREP_F	12222	12220	0
// OP_LOAD_F	12113	413	12223
// OP_LT	12223	12129	12224
// OP_IFNOT	12224	3	0
// OP_ADDRESS	12113	413	12225
// OP_STOREP_F	12129	12225	0
// OP_GOTO	10	0	0
// OP_ADDRESS	12113	413	12226
// OP_LOAD_F	12113	413	12227
// OP_ADD_F	12227	810	12228
// OP_STOREP_F	12228	12226	0
// OP_LOAD_F	12113	413	12229
// OP_GT	12229	12129	12230
// OP_IFNOT	12230	3	0
// OP_ADDRESS	12113	413	12231
// OP_STOREP_F	12129	12231	0
// OP_LOAD_F	12113	413	12232
// OP_MUL_VF	12123	12232	12233
// OP_MUL_VF	12233	655	12236
// OP_SUB_V	12236	10220	12239
// OP_STORE_V	12239	12126	0
// OP_LOAD_F	12113	240	12242
// OP_IFNOT	12242	97	0
// OP_LOAD_F	12113	240	12243
// OP_MUL_F	12243	2764	12244
// OP_ADD_F	12244	815	12245
// OP_STORE_F	12245	12129	0
// OP_LOAD_V	12113	130	12246
// OP_MUL_VF	62	812	12249
// OP_SUB_V	12246	12249	12252
// OP_STORE_V	12252	4	0
// OP_LOAD_V	12113	130	12255
// OP_MUL_VF	62	12129	12258
// OP_SUB_V	12255	12258	12261
// OP_STORE_V	12261	7	0
// OP_STORE_V	267	10	0
// OP_STORE_V	28	13	0
// OP_CALL4	510	0	0
// OP_STORE_F	70	12130	0
// OP_IFNOT	80	61	0
// OP_GT	12130	10617	12264
// OP_IFNOT	12264	2	0
// OP_STORE_F	10617	12130	0
// OP_GT	12130	619	12265
// OP_IFNOT	12265	14	0
// OP_LOAD_V	12113	130	12266
// OP_MUL_VF	62	812	12269
// OP_SUB_V	12266	12269	12272
// OP_STORE_V	12272	4	0
// OP_LOAD_V	12113	130	12275
// OP_MUL_VF	62	1136	12278
// OP_SUB_V	12275	12278	12281
// OP_STORE_V	12281	7	0
// OP_STORE_V	267	10	0
// OP_STORE_V	28	13	0
// OP_CALL4	510	0	0
// OP_IFNOT	80	2	0
// OP_STORE_F	619	12130	0
// OP_GT	12130	1350	12284
// OP_IFNOT	12284	20	0
// OP_LOAD_F	12113	240	12285
// OP_STORE_V	12285	4	0
// OP_CALL1	534	0	0
// OP_MUL_F	1	824	12286
// OP_ADD_F	12286	839	12287
// OP_STORE_F	12287	12129	0
// OP_LOAD_V	12113	130	12288
// OP_MUL_VF	62	812	12291
// OP_SUB_V	12288	12291	12294
// OP_STORE_V	12294	4	0
// OP_LOAD_V	12113	130	12297
// OP_MUL_VF	62	12129	12300
// OP_SUB_V	12297	12300	12303
// OP_STORE_V	12303	7	0
// OP_STORE_V	267	10	0
// OP_STORE_V	28	13	0
// OP_CALL4	510	0	0
// OP_IFNOT	80	2	0
// OP_STORE_F	1350	12130	0
// OP_GT	12130	972	12306
// OP_IFNOT	12306	20	0
// OP_LOAD_F	12113	240	12307
// OP_STORE_V	12307	4	0
// OP_CALL1	534	0	0
// OP_MUL_F	1	824	12308
// OP_ADD_F	12308	1126	12309
// OP_STORE_F	12309	12129	0
// OP_LOAD_V	12113	130	12310
// OP_MUL_VF	62	812	12313
// OP_SUB_V	12310	12313	12316
// OP_STORE_V	12316	4	0
// OP_LOAD_V	12113	130	12319
// OP_MUL_VF	62	12129	12322
// OP_SUB_V	12319	12322	12325
// OP_STORE_V	12325	7	0
// OP_STORE_V	267	10	0
// OP_STORE_V	28	13	0
// OP_CALL4	510	0	0
// OP_IFNOT	80	2	0
// OP_STORE_F	972	12130	0
// OP_LT	12130	677	12328
// OP_IFNOT	12328	18	0
// OP_MUL_VF	62	1252	12329
// OP_SUB_F	677	12130	12332
// OP_MUL_VF	12329	12332	12333
// OP_ADD_V	12126	12333	12336
// OP_STORE_V	12336	12126	0
// OP_LOAD_V	28	138	12339
// OP_MUL_V	12339	62	12342
// OP_STORE_F	12342	12130	0
// OP_MUL_VF	62	12130	12343
// OP_STORE_V	12343	12117	0
// OP_LOAD_V	28	138	12346
// OP_SUB_V	12346	12117	12349
// OP_STORE_V	12349	12120	0
// OP_ADDRESS	28	138	12352
// OP_MUL_VF	12117	10247	12355
// OP_ADD_V	12355	12120	12358
// OP_STOREP_V	12358	12352	0
// OP_ADDRESS	28	138	12361
// OP_LOAD_V	28	138	12364
// OP_MUL_VF	12364	1345	12367
// OP_ADD_V	12367	12126	12370
// OP_STOREP_V	12370	12361	0
// OP_LOAD_F	12113	413	12373
// OP_IFNOT	12373	10	0
// OP_ADDRESS	28	213	12374
// OP_LOAD_V	28	138	12375
// OP_STORE_V	12375	4	0
// OP_CALL1	506	0	0
// OP_DIV_F	1	7730	12378
// OP_STOREP_F	12378	12374	0
// OP_ADDRESS	12113	156	12379
// OP_STOREP_F	677	12379	0
// OP_GOTO	5	0	0
// OP_ADDRESS	28	213	12380
// OP_STOREP_F	619	12380	0
// OP_ADDRESS	12113	156	12381
// OP_STOREP_F	619	12381	0
// OP_ADDRESS	28	466	12382
// OP_ADD_F	31	655	12383
// OP_STOREP_F	12383	12382	0
// OP_LOAD_ENT	28	206	12384
// OP_STORE_V	12384	4	0
// OP_LOAD_V	28	130	12385
// OP_STORE_V	12385	7	0
// OP_CALL2	497	0	0
// OP_LOAD_ENT	28	206	12388
// OP_LOAD_ENT	12388	412	12389
// OP_IFNOT	12389	8	0
// OP_LOAD_ENT	28	206	12390
// OP_LOAD_ENT	12390	412	12391
// OP_STORE_V	12391	4	0
// OP_LOAD_ENT	28	206	12392
// OP_LOAD_V	12392	130	12393
// OP_STORE_V	12393	7	0
// OP_CALL2	497	0	0
// OP_LOAD_ENT	28	206	12396
// OP_LOAD_ENT	12396	467	12397
// OP_IFNOT	12397	8	0
// OP_LOAD_ENT	28	206	12398
// OP_LOAD_ENT	12398	467	12399
// OP_STORE_V	12399	4	0
// OP_LOAD_ENT	28	206	12400
// OP_LOAD_V	12400	130	12401
// OP_STORE_V	12401	7	0
// OP_CALL2	497	0	0
// OP_LOAD_F	28	179	12404
// OP_EQ_F	12404	321	12405
// OP_IFNOT	12405	6	0
// OP_STORE_V	7765	4	0
// OP_STORE_V	7766	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	12117	0
// OP_GOTO	29	0	0
// OP_LOAD_F	28	179	12406
// OP_EQ_F	12406	322	12407
// OP_IFNOT	12407	6	0
// OP_STORE_V	7765	4	0
// OP_STORE_V	9690	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	12117	0
// OP_GOTO	21	0	0
// OP_LOAD_F	28	179	12408
// OP_EQ_F	12408	323	12409
// OP_IFNOT	12409	6	0
// OP_STORE_V	10293	4	0
// OP_STORE_V	7770	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	12117	0
// OP_GOTO	13	0	0
// OP_LOAD_F	28	179	12410
// OP_EQ_F	12410	324	12411
// OP_IFNOT	12411	6	0
// OP_STORE_V	7769	4	0
// OP_STORE_V	8233	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	12117	0
// OP_GOTO	5	0	0
// OP_STORE_V	677	4	0
// OP_STORE_V	7776	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	12117	0
// OP_LOAD_ENT	28	464	12412
// OP_NOT_ENT	12412	0	12413
// OP_IFNOT	12413	2	0
// OP_RETURN	0	0	0
// OP_LOAD_ENT	28	206	12414
// OP_LOAD_ENT	12414	464	12415
// OP_EQ_E	12415	30	12416
// OP_IFNOT	12416	20	0
// OP_STORE_V	12117	4	0
// OP_CALL1	503	0	0
// OP_STORE_V	1	12117	0
// OP_LOAD_V	12113	130	12417
// OP_STORE_V	12417	4	0
// OP_LOAD_V	12113	130	12420
// OP_MUL_VF	12117	986	12423
// OP_ADD_V	12420	12423	12426
// OP_STORE_V	12426	7	0
// OP_STORE_V	267	10	0
// OP_STORE_V	12113	13	0
// OP_CALL4	510	0	0
// OP_MUL_VF	12117	810	12429
// OP_SUB_V	71	12429	12432
// OP_STORE_V	12432	12120	0
// OP_LOAD_ENT	28	464	12435
// OP_ADDRESS	12435	156	12436
// OP_STOREP_F	619	12436	0
// OP_GOTO	3	0	0
// OP_CALL0	945	0	0
// OP_STORE_V	1	12120	0
// OP_LOAD_ENT	28	464	12437
// OP_STORE_V	12437	4	0
// OP_STORE_V	12120	7	0
// OP_CALL2	497	0	0
// OP_DONE	0	0	0
void () gv4_steer = 
{
    local entity veh;
    local vector v0;
    local vector v1;
    local vector v2;
    local vector v3;
    local vector sp;
    local float tmp;
    local float f1;
    local float f2;
    veh = self.enemy;
    tmp = veh.speed / ((veh.thru + 1) * 6);
    tmp = floor(tmp);
    
    if(tmp > 8)
    {
        tmp = 8;
    }
    
    
    if((time > self.fly_sound) || (veh.impulse != tmp))
    {
        f1 = veh.thru * 0.25;
        if(tmp == 0)
        {
            sound(veh, CHAN_BODY, "engines/hov0.wav", f1, ATTN_NORM);
        }
        else
        {
            if(tmp == 1)
            {
                sound(veh, CHAN_BODY, "engines/hov1.wav", f1, ATTN_NORM);
            }
            else
            {
                if(tmp == 2)
                {
                    sound(veh, CHAN_BODY, "engines/hov2.wav", f1, ATTN_NORM);
                }
                else
                {
                    if(tmp == 3)
                    {
                        sound(veh, CHAN_BODY, "engines/hov3.wav", f1, ATTN_NORM);
                    }
                    else
                    {
                        if(tmp == 4)
                        {
                            sound(veh, CHAN_BODY, "engines/hov4.wav", f1, ATTN_NORM);
                        }
                        else
                        {
                            if(tmp == 5)
                            {
                                sound(veh, CHAN_BODY, "engines/hov5.wav", f1, ATTN_NORM);
                            }
                            else
                            {
                                if(tmp == 6)
                                {
                                    sound(veh, CHAN_BODY, "engines/hov6.wav", f1, ATTN_NORM);
                                }
                                else
                                {
                                    if(tmp == 7)
                                    {
                                        sound(veh, CHAN_BODY, "engines/hov7.wav", f1, ATTN_NORM);
                                    }
                                    else
                                    {
                                        sound(veh, CHAN_BODY, "engines/hov8.wav", f1, ATTN_NORM);
                                    }
                                    
                                }
                                
                            }
                            
                        }
                        
                    }
                    
                }
                
            }
            
        }
        
        self.fly_sound = time + 1;
        veh.impulse = tmp;
    }
    
    if(!(self.flags & FL_GODMODE))
    {
        Steer_hover(100, 100);
    }
    else
    {
        Steer_hover(1000, 1000);
    }
    
    tmp = vlen(self.velocity - self.movedir);
    self.movedir = self.velocity;
    
    if(tmp > 120)
    {
        sound(veh, CHAN_VOICE, "player/land2.wav", 1, ATTN_NORM);
        T_Damage(veh, world, world, (tmp - 120) * 0.1);
    }
    
    veh.flags = veh.flags - (veh.flags & FL_ONGROUND);
    
    if(veh.thru != 0)
    {
        self.flags = self.flags - (self.flags & FL_ONGROUND);
    }
    
    v1 = veh.angles;
    v1_x = 0 - v1_x;
    makevectors(v1);
    v3 = v_forward;
    
    if(time >= self.pausetime)
    {
        tmp = 0;
        
        if(self.button2)
        {
            tmp = self.v_angle_y - veh.angles_y;
            
            if(tmp < 0)
            {
                tmp = tmp + 360;
            }
            
            
            if(tmp > 180)
            {
                tmp = tmp - 360;
            }
            
            tmp = 60 * veh.thru;
            
            if(self.flags & FL_GODMODE)
            {
                tmp = 20 * tmp;
            }
            
        }
        
        if(veh.speed >= tmp)
        {
            veh.speed = veh.speed - 8;
            
            if(veh.speed < tmp)
            {
                veh.speed = tmp;
            }
            
        }
        else
        {
            veh.speed = veh.speed + 8;
            
            if(veh.speed > tmp)
            {
                veh.speed = tmp;
            }
            
        }
        
        sp = ((v3 * veh.speed) * 0.1) - '0.000 0.000 40.000';
        
        if(veh.thru)
        {
            tmp = (veh.thru * 18) + 32;
            traceline(veh.origin - (v_up * 16), veh.origin - (v_up * tmp), FALSE, self);
            f1 = trace_fraction;
            
            if(trace_inwater)
            {
                
                if(f1 > 0.6)
                {
                    f1 = 0.6;
                }
                
                
                if(f1 > 0)
                {
                    traceline(veh.origin - (v_up * 16), veh.origin - (v_up * 22), FALSE, self);
                    
                    if(trace_inwater)
                    {
                        f1 = 0;
                    }
                    
                }
                
                
                if(f1 > 0.4)
                {
                    tmp = (fabs(veh.thru) * 9) + 14;
                    traceline(veh.origin - (v_up * 16), veh.origin - (v_up * tmp), FALSE, self);
                    
                    if(trace_inwater)
                    {
                        f1 = 0.4;
                    }
                    
                }
                
                
                if(f1 > 0.5)
                {
                    tmp = (fabs(veh.thru) * 9) + 17;
                    traceline(veh.origin - (v_up * 16), veh.origin - (v_up * tmp), FALSE, self);
                    
                    if(trace_inwater)
                    {
                        f1 = 0.5;
                    }
                    
                }
                
            }
            
            
            if(f1 < 1)
            {
                sp = sp + ((v_up * 80) * (1 - f1));
                f1 = self.velocity * v_up;
                v1 = v_up * f1;
                v2 = self.velocity - v1;
                self.velocity = (v1 * 0.8) + v2;
            }
            
        }
        
        self.velocity = (self.velocity * 0.9) + sp;
        if(veh.speed)
        {
            self.armorvalue = vlen(self.velocity) / 3.3;
            veh.frame = 1;
        }
        else
        {
            self.armorvalue = 0;
            veh.frame = 0;
        }
        
        self.pausetime = time + 0.1;
    }
    
    setorigin(self.enemy, self.origin);
    
    if(self.enemy.oldenemy)
    {
        setorigin(self.enemy.oldenemy, self.enemy.origin);
    }
    
    
    if(self.enemy.movetarget)
    {
        setorigin(self.enemy.movetarget, self.enemy.origin);
    }
    
    if(self.weapon == IT_WEP1)
    {
        v1 = GV_aim(0.97, -500);
    }
    else
    {
        if(self.weapon == IT_WEP2)
        {
            v1 = GV_aim(0.97, -800);
        }
        else
        {
            if(self.weapon == IT_WEP3)
            {
                v1 = GV_aim(0.95, -1000);
            }
            else
            {
                if(self.weapon == IT_WEP4)
                {
                    v1 = GV_aim(0.93, 2000);
                }
                else
                {
                    v1 = GV_aim(1, -100);
                }
                
            }
            
        }
        
    }
    
    
    if(!self.trigger_field)
    {
        return;
    }
    
    if(self.enemy.trigger_field == world)
    {
        v1 = normalize(v1);
        traceline(veh.origin, veh.origin + (v1 * 200), FALSE, veh);
        v2 = trace_endpos - (v1 * 8);
        self.trigger_field.frame = 0;
    }
    else
    {
        v2 = place_targetbox();
    }
    
    setorigin(self.trigger_field, v2);
};

// gv4_attack
// function begins at statement 16502, parm_start=12439
// OP_LOAD_ENT	28	206	12447
// OP_STORE_ENT	12447	12445	0
// OP_LOAD_ENT	12445	412	12448
// OP_STORE_ENT	12448	12446	0
// OP_LOAD_V	12446	142	12449
// OP_STORE_V	12449	12439	0
// OP_SUB_F	619	12439	12452
// OP_STORE_F	12452	12439	0
// OP_LOAD_F	28	179	12453
// OP_EQ_F	12453	321	12454
// OP_IFNOT	12454	80	0
// OP_LOAD_F	28	245	12455
// OP_GE	12455	677	12456
// OP_IFNOT	12456	70	0
// OP_STORE_V	7765	4	0
// OP_STORE_V	7766	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	12442	0
// OP_STORE_V	12439	4	0
// OP_CALL1	496	0	0
// OP_LOAD_F	28	245	12457
// OP_BITAND	12457	677	12458
// OP_IFNOT	12458	22	0
// OP_LOAD_F	28	245	12459
// OP_BITAND	12459	806	12460
// OP_IFNOT	12460	10	0
// OP_LOAD_ENT	28	206	12461
// OP_LOAD_V	12461	130	12462
// OP_MUL_VF	65	810	12465
// OP_SUB_V	12462	12465	12468
// OP_STORE_V	12468	4	0
// OP_STORE_V	12442	7	0
// OP_STORE_V	30	10	0
// OP_CALL3	4039	0	0
// OP_GOTO	9	0	0
// OP_LOAD_ENT	28	206	12471
// OP_LOAD_V	12471	130	12472
// OP_MUL_VF	65	810	12475
// OP_SUB_V	12472	12475	12478
// OP_STORE_V	12478	4	0
// OP_STORE_V	12442	7	0
// OP_STORE_V	30	10	0
// OP_CALL3	4006	0	0
// OP_GOTO	21	0	0
// OP_LOAD_F	28	245	12481
// OP_BITAND	12481	806	12482
// OP_IFNOT	12482	10	0
// OP_LOAD_ENT	28	206	12483
// OP_LOAD_V	12483	130	12484
// OP_MUL_VF	65	810	12487
// OP_SUB_V	12484	12487	12490
// OP_STORE_V	12490	4	0
// OP_STORE_V	12442	7	0
// OP_STORE_V	30	10	0
// OP_CALL3	4039	0	0
// OP_GOTO	9	0	0
// OP_LOAD_ENT	28	206	12493
// OP_LOAD_V	12493	130	12494
// OP_MUL_VF	65	810	12497
// OP_ADD_V	12494	12497	12500
// OP_STORE_V	12500	4	0
// OP_STORE_V	12442	7	0
// OP_STORE_V	30	10	0
// OP_CALL3	4006	0	0
// OP_LOAD_ENT	28	206	12503
// OP_ADDRESS	12503	158	12504
// OP_LOAD_ENT	28	206	12505
// OP_LOAD_F	12505	158	12506
// OP_BITOR	12506	383	12507
// OP_STOREP_F	12507	12504	0
// OP_ADDRESS	28	182	12508
// OP_ADDRESS	28	183	12509
// OP_ADDRESS	28	245	12510
// OP_LOAD_F	28	245	12511
// OP_SUB_F	12511	677	12512
// OP_STOREP_F	12512	12510	0
// OP_STOREP_F	12512	12509	0
// OP_STOREP_F	12512	12508	0
// OP_LOAD_ENT	28	206	12513
// OP_ADDRESS	12513	437	12514
// OP_ADD_F	31	677	12515
// OP_STOREP_F	12515	12514	0
// OP_GOTO	4	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	2826	7	0
// OP_CALL2	518	0	0
// OP_ADDRESS	28	422	12516
// OP_ADD_F	31	655	12517
// OP_STOREP_F	12517	12516	0
// OP_GOTO	176	0	0
// OP_LOAD_F	28	179	12518
// OP_EQ_F	12518	322	12519
// OP_IFNOT	12519	56	0
// OP_LOAD_F	28	251	12520
// OP_GE	12520	677	12521
// OP_IFNOT	12521	46	0
// OP_STORE_V	7765	4	0
// OP_STORE_V	9690	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	12442	0
// OP_STORE_V	12439	4	0
// OP_CALL1	496	0	0
// OP_LOAD_F	28	251	12522
// OP_BITAND	12522	677	12523
// OP_IFNOT	12523	10	0
// OP_LOAD_ENT	28	206	12524
// OP_LOAD_V	12524	130	12525
// OP_MUL_VF	65	810	12528
// OP_SUB_V	12525	12528	12531
// OP_STORE_V	12531	4	0
// OP_STORE_V	12442	7	0
// OP_STORE_V	30	10	0
// OP_CALL3	5084	0	0
// OP_GOTO	9	0	0
// OP_LOAD_ENT	28	206	12534
// OP_LOAD_V	12534	130	12535
// OP_MUL_VF	65	810	12538
// OP_ADD_V	12535	12538	12541
// OP_STORE_V	12541	4	0
// OP_STORE_V	12442	7	0
// OP_STORE_V	30	10	0
// OP_CALL3	5084	0	0
// OP_LOAD_ENT	28	206	12544
// OP_ADDRESS	12544	158	12545
// OP_LOAD_ENT	28	206	12546
// OP_LOAD_F	12546	158	12547
// OP_BITOR	12547	383	12548
// OP_STOREP_F	12548	12545	0
// OP_ADDRESS	28	182	12549
// OP_ADDRESS	28	184	12550
// OP_ADDRESS	28	251	12551
// OP_LOAD_F	28	251	12552
// OP_SUB_F	12552	677	12553
// OP_STOREP_F	12553	12551	0
// OP_STOREP_F	12553	12550	0
// OP_STOREP_F	12553	12549	0
// OP_LOAD_ENT	28	206	12554
// OP_ADDRESS	12554	437	12555
// OP_ADD_F	31	677	12556
// OP_STOREP_F	12556	12555	0
// OP_GOTO	4	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	2826	7	0
// OP_CALL2	518	0	0
// OP_ADDRESS	28	422	12557
// OP_ADD_F	31	1687	12558
// OP_STOREP_F	12558	12557	0
// OP_GOTO	118	0	0
// OP_LOAD_F	28	179	12559
// OP_EQ_F	12559	323	12560
// OP_IFNOT	12560	56	0
// OP_LOAD_F	28	246	12561
// OP_GE	12561	677	12562
// OP_IFNOT	12562	46	0
// OP_STORE_V	10293	4	0
// OP_STORE_V	7770	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	12442	0
// OP_STORE_V	12439	4	0
// OP_CALL1	496	0	0
// OP_LOAD_F	28	246	12563
// OP_BITAND	12563	677	12564
// OP_IFNOT	12564	10	0
// OP_LOAD_ENT	28	206	12565
// OP_LOAD_V	12565	130	12566
// OP_MUL_VF	65	810	12569
// OP_SUB_V	12566	12569	12572
// OP_STORE_V	12572	4	0
// OP_STORE_V	12442	7	0
// OP_STORE_V	30	10	0
// OP_CALL3	4169	0	0
// OP_GOTO	9	0	0
// OP_LOAD_ENT	28	206	12575
// OP_LOAD_V	12575	130	12576
// OP_MUL_VF	65	810	12579
// OP_ADD_V	12576	12579	12582
// OP_STORE_V	12582	4	0
// OP_STORE_V	12442	7	0
// OP_STORE_V	30	10	0
// OP_CALL3	4169	0	0
// OP_LOAD_ENT	28	206	12585
// OP_ADDRESS	12585	158	12586
// OP_LOAD_ENT	28	206	12587
// OP_LOAD_F	12587	158	12588
// OP_BITOR	12588	383	12589
// OP_STOREP_F	12589	12586	0
// OP_ADDRESS	28	182	12590
// OP_ADDRESS	28	185	12591
// OP_ADDRESS	28	246	12592
// OP_LOAD_F	28	246	12593
// OP_SUB_F	12593	677	12594
// OP_STOREP_F	12594	12592	0
// OP_STOREP_F	12594	12591	0
// OP_STOREP_F	12594	12590	0
// OP_LOAD_ENT	28	206	12595
// OP_ADDRESS	12595	437	12596
// OP_ADD_F	31	677	12597
// OP_STOREP_F	12597	12596	0
// OP_GOTO	4	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	2826	7	0
// OP_CALL2	518	0	0
// OP_ADDRESS	28	422	12598
// OP_ADD_F	31	972	12599
// OP_STOREP_F	12599	12598	0
// OP_GOTO	60	0	0
// OP_LOAD_F	28	179	12600
// OP_EQ_F	12600	324	12601
// OP_IFNOT	12601	57	0
// OP_LOAD_F	28	249	12602
// OP_GE	12602	677	12603
// OP_IFNOT	12603	48	0
// OP_STORE_V	7769	4	0
// OP_STORE_V	8233	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	12442	0
// OP_STORE_V	12439	4	0
// OP_CALL1	496	0	0
// OP_LOAD_F	28	249	12604
// OP_BITAND	12604	677	12605
// OP_IFNOT	12605	11	0
// OP_LOAD_V	12446	130	12606
// OP_MUL_VF	65	810	12609
// OP_ADD_V	12606	12609	12612
// OP_STORE_V	12612	4	0
// OP_STORE_V	59	7	0
// OP_LOAD_ENT	28	206	12615
// OP_LOAD_ENT	12615	464	12616
// OP_STORE_V	12616	10	0
// OP_CALL3	4996	0	0
// OP_GOTO	10	0	0
// OP_LOAD_V	12446	130	12617
// OP_MUL_VF	65	810	12620
// OP_SUB_V	12617	12620	12623
// OP_STORE_V	12623	4	0
// OP_STORE_V	59	7	0
// OP_LOAD_ENT	28	206	12626
// OP_LOAD_ENT	12626	464	12627
// OP_STORE_V	12627	10	0
// OP_CALL3	4996	0	0
// OP_LOAD_ENT	28	206	12628
// OP_ADDRESS	12628	158	12629
// OP_LOAD_ENT	28	206	12630
// OP_LOAD_F	12630	158	12631
// OP_BITOR	12631	383	12632
// OP_STOREP_F	12632	12629	0
// OP_ADDRESS	28	182	12633
// OP_ADDRESS	28	186	12634
// OP_ADDRESS	28	249	12635
// OP_LOAD_F	28	249	12636
// OP_SUB_F	12636	677	12637
// OP_STOREP_F	12637	12635	0
// OP_STOREP_F	12637	12634	0
// OP_STOREP_F	12637	12633	0
// OP_LOAD_ENT	28	206	12638
// OP_ADDRESS	12638	437	12639
// OP_ADD_F	31	677	12640
// OP_STOREP_F	12640	12639	0
// OP_GOTO	4	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	2826	7	0
// OP_CALL2	518	0	0
// OP_ADDRESS	28	422	12641
// OP_ADD_F	31	12642	12643
// OP_STOREP_F	12643	12641	0
// OP_DONE	0	0	0
void () gv4_attack = 
{
    local vector v1;
    local vector v2;
    local entity stemp;
    local entity e;
    stemp = self.enemy;
    e = stemp.oldenemy;
    v1 = e.angles;
    v1_x = 0 - v1_x;
    if(self.weapon == IT_WEP1)
    {
        if(self.ammo_auto >= 1)
        {
            v2 = GV_aim(0.97, -500);
            makevectors(v1);
            if(self.ammo_auto & 1)
            {
                if(self.ammo_auto & 2)
                {
                    AC_bullet(self.enemy.origin - (v_right * 8), v2, world);
                }
                else
                {
                    AC_spike(self.enemy.origin - (v_right * 8), v2, world);
                }
                
            }
            else
            {
                if(self.ammo_auto & 2)
                {
                    AC_bullet(self.enemy.origin - (v_right * 8), v2, world);
                }
                else
                {
                    AC_spike(self.enemy.origin + (v_right * 8), v2, world);
                }
                
            }
            
            self.enemy.effects = self.enemy.effects | EF_MUZZLEFLASH;
            self.currentammo = self.ammo_shells = self.ammo_auto = self.ammo_auto - 1;
            self.enemy.show_hostile = time + 1;
        }
        else
        {
            sprint(self, "not enough ammo.\n");
        }
        
        self.attack_finished = time + 0.1;
    }
    else
    {
        if(self.weapon == IT_WEP2)
        {
            if(self.ammo_cell >= 1)
            {
                v2 = GV_aim(0.97, -800);
                makevectors(v1);
                if(self.ammo_cell & 1)
                {
                    AC_plasma(self.enemy.origin - (v_right * 8), v2, world);
                }
                else
                {
                    AC_plasma(self.enemy.origin + (v_right * 8), v2, world);
                }
                
                self.enemy.effects = self.enemy.effects | EF_MUZZLEFLASH;
                self.currentammo = self.ammo_nails = self.ammo_cell = self.ammo_cell - 1;
                self.enemy.show_hostile = time + 1;
            }
            else
            {
                sprint(self, "not enough ammo.\n");
            }
            
            self.attack_finished = time + 0.3;
        }
        else
        {
            if(self.weapon == IT_WEP3)
            {
                if(self.ammo_rock >= 1)
                {
                    v2 = GV_aim(0.95, -1000);
                    makevectors(v1);
                    if(self.ammo_rock & 1)
                    {
                        AC_rocket(self.enemy.origin - (v_right * 8), v2, world);
                    }
                    else
                    {
                        AC_rocket(self.enemy.origin + (v_right * 8), v2, world);
                    }
                    
                    self.enemy.effects = self.enemy.effects | EF_MUZZLEFLASH;
                    self.currentammo = self.ammo_rockets = self.ammo_rock = self.ammo_rock - 1;
                    self.enemy.show_hostile = time + 1;
                }
                else
                {
                    sprint(self, "not enough ammo.\n");
                }
                
                self.attack_finished = time + 0.5;
            }
            else
            {
                
                if(self.weapon == IT_WEP4)
                {
                    if(self.ammo_smsl >= 1)
                    {
                        v2 = GV_aim(0.93, 2000);
                        makevectors(v1);
                        if(self.ammo_smsl & 1)
                        {
                            AC_hellfire(e.origin + (v_right * 8), v_forward, self.enemy.trigger_field);
                        }
                        else
                        {
                            AC_hellfire(e.origin - (v_right * 8), v_forward, self.enemy.trigger_field);
                        }
                        
                        self.enemy.effects = self.enemy.effects | EF_MUZZLEFLASH;
                        self.currentammo = self.ammo_cells = self.ammo_smsl = self.ammo_smsl - 1;
                        self.enemy.show_hostile = time + 1;
                    }
                    else
                    {
                        sprint(self, "not enough ammo.\n");
                    }
                    
                    self.attack_finished = time + 1.3;
                }
                
            }
            
        }
        
    }
    
};

// gv4_currentammo
// function begins at statement 16768, parm_start=12645
// OP_ADDRESS	28	183	12645
// OP_LOAD_F	28	245	12646
// OP_STOREP_F	12646	12645	0
// OP_ADDRESS	28	184	12647
// OP_LOAD_F	28	251	12648
// OP_STOREP_F	12648	12647	0
// OP_ADDRESS	28	185	12649
// OP_LOAD_F	28	246	12650
// OP_STOREP_F	12650	12649	0
// OP_ADDRESS	28	186	12651
// OP_LOAD_F	28	249	12652
// OP_STOREP_F	12652	12651	0
// OP_LOAD_F	28	179	12653
// OP_EQ_F	12653	321	12654
// OP_IFNOT	12654	4	0
// OP_ADDRESS	28	180	12655
// OP_STOREP_S	7632	12655	0
// OP_GOTO	18	0	0
// OP_LOAD_F	28	179	12656
// OP_EQ_F	12656	322	12657
// OP_IFNOT	12657	4	0
// OP_ADDRESS	28	180	12658
// OP_STOREP_S	9573	12658	0
// OP_GOTO	12	0	0
// OP_LOAD_F	28	179	12659
// OP_EQ_F	12659	323	12660
// OP_IFNOT	12660	4	0
// OP_ADDRESS	28	180	12661
// OP_STOREP_S	7636	12661	0
// OP_GOTO	6	0	0
// OP_LOAD_F	28	179	12662
// OP_EQ_F	12662	324	12663
// OP_IFNOT	12663	3	0
// OP_ADDRESS	28	180	12664
// OP_STOREP_S	10020	12664	0
// OP_DONE	0	0	0
void () gv4_currentammo = 
{
    self.ammo_shells = self.ammo_auto;
    self.ammo_nails = self.ammo_cell;
    self.ammo_rockets = self.ammo_rock;
    self.ammo_cells = self.ammo_smsl;
    if(self.weapon == IT_WEP1)
    {
        self.weaponmodel = "progs/v_auto.mdl";
    }
    else
    {
        if(self.weapon == IT_WEP2)
        {
            self.weaponmodel = "progs/v_plas.mdl";
        }
        else
        {
            if(self.weapon == IT_WEP3)
            {
                self.weaponmodel = "progs/v_rock.mdl";
            }
            else
            {
                
                if(self.weapon == IT_WEP4)
                {
                    self.weaponmodel = "progs/v_hell.mdl";
                }
                
            }
            
        }
        
    }
    
};

// start_groundveh4
// function begins at statement 16804, parm_start=12666
// OP_ADDRESS	28	188	12668
// OP_STOREP_F	304	12668	0
// OP_STORE_V	28	4	0
// OP_STORE_V	10915	7	0
// OP_STORE_V	10918	10	0
// OP_CALL3	499	0	0
// OP_ADDRESS	28	128	12669
// OP_STOREP_F	284	12669	0
// OP_CALL0	508	0	0
// OP_STORE_ENT	1	12666	0
// OP_STORE_V	12666	4	0
// OP_STORE_V	12670	7	0
// OP_CALL2	498	0	0
// OP_LOAD_ENT	28	219	12671
// OP_STORE_ENT	12671	12667	0
// OP_STORE_V	28	4	0
// OP_LOAD_V	12667	130	12672
// OP_STORE_V	12672	7	0
// OP_CALL2	497	0	0
// OP_STORE_V	12666	4	0
// OP_LOAD_V	12667	130	12675
// OP_STORE_V	12675	7	0
// OP_CALL2	497	0	0
// OP_ADDRESS	12666	142	12678
// OP_LOAD_V	12667	142	12681
// OP_STOREP_V	12681	12678	0
// OP_ADDRESS	12666	154	12684
// OP_STOREP_S	1550	12684	0
// OP_ADDRESS	12666	138	12685
// OP_STOREP_V	607	12685	0
// OP_ADDRESS	12666	128	12688
// OP_STOREP_F	284	12688	0
// OP_STORE_V	12666	4	0
// OP_STORE_V	10915	7	0
// OP_STORE_V	10918	10	0
// OP_CALL3	499	0	0
// OP_ADDRESS	12666	129	12689
// OP_STOREP_F	294	12689	0
// OP_ADDRESS	12666	177	12690
// OP_STOREP_F	4412	12690	0
// OP_ADDRESS	12666	210	12691
// OP_LOAD_F	12666	177	12692
// OP_STOREP_F	12692	12691	0
// OP_ADDRESS	12666	188	12693
// OP_STOREP_F	306	12693	0
// OP_ADDRESS	12666	411	12694
// OP_STOREP_FNC	7609	12694	0
// OP_ADDRESS	12666	205	12695
// OP_LOAD_S	28	205	12696
// OP_STOREP_S	12696	12695	0
// OP_ADDRESS	12666	413	12697
// OP_STOREP_F	619	12697	0
// OP_ADDRESS	12666	240	12698
// OP_STOREP_F	619	12698	0
// OP_ADDRESS	28	206	12699
// OP_STOREP_ENT	12666	12699	0
// OP_ADDRESS	12666	219	12700
// OP_STOREP_ENT	28	12700	0
// OP_ADDRESS	12666	226	12701
// OP_STOREP_ENT	28	12701	0
// OP_ADDRESS	12666	191	12702
// OP_STOREP_V	582	12702	0
// OP_ADDRESS	12666	208	12705
// OP_LOAD_F	28	208	12706
// OP_STOREP_F	12706	12705	0
// OP_ADDRESS	12666	213	12707
// OP_STOREP_F	827	12707	0
// OP_ADDRESS	28	238	12708
// OP_STOREP_F	619	12708	0
// OP_CALL0	508	0	0
// OP_STORE_ENT	1	12666	0
// OP_STORE_V	12666	4	0
// OP_STORE_V	12709	7	0
// OP_CALL2	498	0	0
// OP_STORE_V	12666	4	0
// OP_LOAD_ENT	28	206	12710
// OP_LOAD_V	12710	130	12711
// OP_STORE_V	12711	7	0
// OP_CALL2	497	0	0
// OP_ADDRESS	12666	226	12714
// OP_STOREP_ENT	28	12714	0
// OP_LOAD_ENT	28	206	12715
// OP_ADDRESS	12715	412	12716
// OP_STOREP_ENT	12666	12716	0
// OP_ADDRESS	12666	208	12717
// OP_LOAD_F	28	208	12718
// OP_STOREP_F	12718	12717	0
// OP_CALL0	508	0	0
// OP_STORE_ENT	1	12666	0
// OP_STORE_V	12666	4	0
// OP_STORE_V	12719	7	0
// OP_CALL2	498	0	0
// OP_STORE_V	12666	4	0
// OP_LOAD_ENT	28	206	12720
// OP_LOAD_V	12720	130	12721
// OP_STORE_V	12721	7	0
// OP_CALL2	497	0	0
// OP_ADDRESS	12666	226	12724
// OP_STOREP_ENT	28	12724	0
// OP_LOAD_ENT	28	206	12725
// OP_ADDRESS	12725	467	12726
// OP_STOREP_ENT	12666	12726	0
// OP_ADDRESS	12666	208	12727
// OP_LOAD_F	28	208	12728
// OP_STOREP_F	12728	12727	0
// OP_ADDRESS	28	408	12729
// OP_STOREP_FNC	12438	12729	0
// OP_ADDRESS	28	407	12730
// OP_STOREP_FNC	12112	12730	0
// OP_ADDRESS	28	409	12731
// OP_STOREP_FNC	12644	12731	0
// OP_ADDRESS	28	183	12732
// OP_ADDRESS	28	245	12733
// OP_STOREP_F	2618	12733	0
// OP_STOREP_F	2618	12732	0
// OP_ADDRESS	28	184	12734
// OP_ADDRESS	28	251	12735
// OP_MUL_F	1155	113	12736
// OP_STOREP_F	12736	12735	0
// OP_STOREP_F	12736	12734	0
// OP_ADDRESS	28	185	12737
// OP_ADDRESS	28	246	12738
// OP_MUL_F	827	113	12739
// OP_STOREP_F	12739	12738	0
// OP_STOREP_F	12739	12737	0
// OP_ADDRESS	28	186	12740
// OP_ADDRESS	28	249	12741
// OP_MUL_F	816	113	12742
// OP_STOREP_F	12742	12741	0
// OP_STOREP_F	12742	12740	0
// OP_CALL0	527	0	0
// OP_STORE_V	28	4	0
// OP_CALL1	532	0	0
// OP_NOT_F	1	0	12743
// OP_IFNOT	12743	12	0
// OP_LOAD_V	28	130	12744
// OP_STORE_V	12744	4	0
// OP_LOAD_V	28	130	12747
// OP_ADD_V	12747	10990	12750
// OP_STORE_V	12750	7	0
// OP_STORE_V	268	10	0
// OP_STORE_V	28	13	0
// OP_CALL4	510	0	0
// OP_ADDRESS	28	133	12753
// OP_ADD_F	73	1130	12754
// OP_STOREP_F	12754	12753	0
// OP_LOAD_ENT	28	206	12755
// OP_STORE_V	12755	4	0
// OP_LOAD_V	28	130	12756
// OP_STORE_V	12756	7	0
// OP_CALL2	497	0	0
// OP_LOAD_ENT	28	206	12759
// OP_LOAD_ENT	12759	412	12760
// OP_STORE_V	12760	4	0
// OP_LOAD_V	28	130	12761
// OP_STORE_V	12761	7	0
// OP_CALL2	497	0	0
// OP_LOAD_ENT	28	206	12764
// OP_LOAD_ENT	12764	467	12765
// OP_STORE_V	12765	4	0
// OP_LOAD_V	28	130	12766
// OP_STORE_V	12766	7	0
// OP_CALL2	497	0	0
// OP_ADDRESS	28	138	12769
// OP_STOREP_V	607	12769	0
// OP_ADDRESS	28	227	12772
// OP_STOREP_V	607	12772	0
// OP_LOAD_ENT	28	412	12775
// OP_ADDRESS	12775	404	12776
// OP_STOREP_F	815	12776	0
// OP_DONE	0	0	0
void () start_groundveh4 = 
{
    local entity e;
    local entity e2;
    self.takedamage = DAMAGE_NO;
    setsize(self, '-16.000 -16.000 -24.000', '16.000 16.000 24.000');
    self.movetype = MOVETYPE_FLY;
    e = spawn();
    setmodel(e, "progs/hovba.mdl");
    e2 = self.goalentity;
    setorigin(self, e2.origin);
    setorigin(e, e2.origin);
    e.angles = e2.angles;
    e.classname = "tank";
    e.velocity = '0.000 0.000 0.000';
    e.movetype = MOVETYPE_FLY;
    setsize(e, '-16.000 -16.000 -24.000', '16.000 16.000 24.000');
    e.solid = SOLID_SLIDEBOX;
    e.health = 300;
    e.max_health = e.health;
    e.takedamage = DAMAGE_AIM;
    e.th_die = GV_Die;
    e.netname = self.netname;
    e.speed = 0;
    e.thru = 0;
    self.enemy = e;
    e.goalentity = self;
    e.owner = self;
    e.view_ofs = '0.000 0.000 1.000';
    e.colormap = self.colormap;
    e.armorvalue = 10;
    self.toyview = 0;
    e = spawn();
    setmodel(e, "progs/hovtb.mdl");
    setorigin(e, self.enemy.origin);
    e.owner = self;
    self.enemy.oldenemy = e;
    e.colormap = self.colormap;
    e = spawn();
    setmodel(e, "progs/hovtr.mdl");
    setorigin(e, self.enemy.origin);
    e.owner = self;
    self.enemy.movetarget = e;
    e.colormap = self.colormap;
    self.th_missile = gv4_attack;
    self.th_run = gv4_steer;
    self.th_melee = gv4_currentammo;
    self.ammo_auto = 100;
    self.ammo_shells = 100;
    self.ammo_nails = self.ammo_cell = 40 * wepmulti;
    self.ammo_rockets = self.ammo_rock = 10 * wepmulti;
    self.ammo_cells = self.ammo_smsl = 6 * wepmulti;
    droptofloor();
    
    if(!checkbottom(self))
    {
        traceline(self.origin, self.origin + '0.000 0.000 -10000.000', TRUE, self);
        self.origin_z = 0 + 30;
    }
    
    setorigin(self.enemy, self.origin);
    setorigin(self.enemy.oldenemy, self.origin);
    setorigin(self.enemy.movetarget, self.origin);
    self.velocity = '0.000 0.000 0.000';
    self.movedir = '0.000 0.000 0.000';
    self.oldenemy.style = 32;
};

