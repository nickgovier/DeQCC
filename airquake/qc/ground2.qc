// gv2_steer
// function begins at statement 14423, parm_start=11016
// OP_LOAD_ENT	28	206	11030
// OP_STORE_ENT	11030	11016	0
// OP_LOAD_V	28	138	11031
// OP_STORE_V	11031	4	0
// OP_CALL1	506	0	0
// OP_MUL_F	1	10599	11034
// OP_STORE_F	11034	11029	0
// OP_STORE_V	11029	4	0
// OP_CALL1	530	0	0
// OP_STORE_F	1	11029	0
// OP_GT	11029	810	11035
// OP_IFNOT	11035	2	0
// OP_STORE_F	810	11029	0
// OP_LOAD_F	28	435	11036
// OP_GT	31	11036	11037
// OP_LOAD_F	11016	198	11038
// OP_NE_F	11038	11029	11039
// OP_OR	11037	11039	11040
// OP_IFNOT	11040	84	0
// OP_EQ_F	11029	619	11041
// OP_IFNOT	11041	8	0
// OP_STORE_V	11016	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	10608	10	0
// OP_STORE_V	1349	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	70	0	0
// OP_EQ_F	11029	677	11042
// OP_IFNOT	11042	8	0
// OP_STORE_V	11016	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	10610	10	0
// OP_STORE_V	1687	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	61	0	0
// OP_EQ_F	11029	806	11043
// OP_IFNOT	11043	8	0
// OP_STORE_V	11016	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	10612	10	0
// OP_STORE_V	1350	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	52	0	0
// OP_EQ_F	11029	788	11044
// OP_IFNOT	11044	8	0
// OP_STORE_V	11016	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	10614	10	0
// OP_STORE_V	972	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	43	0	0
// OP_EQ_F	11029	808	11045
// OP_IFNOT	11045	8	0
// OP_STORE_V	11016	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	10616	10	0
// OP_STORE_V	10617	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	34	0	0
// OP_EQ_F	11029	813	11046
// OP_IFNOT	11046	8	0
// OP_STORE_V	11016	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	10619	10	0
// OP_STORE_V	2571	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	25	0	0
// OP_EQ_F	11029	816	11047
// OP_IFNOT	11047	8	0
// OP_STORE_V	11016	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	10621	10	0
// OP_STORE_V	10247	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	16	0	0
// OP_EQ_F	11029	819	11048
// OP_IFNOT	11048	8	0
// OP_STORE_V	11016	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	10623	10	0
// OP_STORE_V	1345	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_GOTO	7	0	0
// OP_STORE_V	11016	4	0
// OP_STORE_V	373	7	0
// OP_STORE_V	10624	10	0
// OP_STORE_V	677	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_ADDRESS	28	435	11049
// OP_ADD_F	31	677	11050
// OP_STOREP_F	11050	11049	0
// OP_ADDRESS	11016	198	11051
// OP_STOREP_F	11029	11051	0
// OP_LOAD_V	28	138	11052
// OP_LOAD_V	28	227	11055
// OP_SUB_V	11052	11055	11058
// OP_STORE_V	11058	4	0
// OP_CALL1	506	0	0
// OP_STORE_F	1	11029	0
// OP_ADDRESS	28	227	11061
// OP_LOAD_V	28	138	11064
// OP_STOREP_V	11064	11061	0
// OP_GT	11029	2627	11067
// OP_IFNOT	11067	16	0
// OP_STORE_V	11016	4	0
// OP_STORE_V	371	7	0
// OP_STORE_V	10644	10	0
// OP_STORE_V	677	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_STORE_V	11016	4	0
// OP_LOAD_ENT	28	265	11068
// OP_STORE_V	11068	7	0
// OP_LOAD_ENT	28	265	11069
// OP_STORE_V	11069	10	0
// OP_SUB_F	11029	2627	11070
// OP_MUL_F	11070	972	11071
// OP_STORE_V	11071	13	0
// OP_CALL4	569	0	0
// OP_LOAD_F	28	207	11072
// OP_BITAND	11072	277	11073
// OP_IFNOT	11073	3	0
// OP_ADDRESS	28	265	11074
// OP_STOREP_ENT	30	11074	0
// OP_LOAD_F	28	207	11075
// OP_BITAND	11075	274	11076
// OP_NOT_F	11076	0	11077
// OP_IFNOT	11077	5	0
// OP_STORE_V	2618	4	0
// OP_STORE_V	1228	7	0
// OP_CALL2	7062	0	0
// OP_GOTO	4	0	0
// OP_STORE_V	1622	4	0
// OP_STORE_V	1622	7	0
// OP_CALL2	7062	0	0
// OP_ADDRESS	11016	207	11078
// OP_LOAD_F	11016	207	11079
// OP_LOAD_F	11016	207	11080
// OP_BITAND	11080	277	11081
// OP_SUB_F	11079	11081	11082
// OP_STOREP_F	11082	11078	0
// OP_LOAD_F	28	207	11083
// OP_BITAND	11083	277	11084
// OP_IFNOT	11084	21	0
// OP_LOAD_F	11016	143	11085
// OP_GT	11085	1193	11086
// OP_IFNOT	11086	3	0
// OP_ADDRESS	11016	143	11087
// OP_STOREP_F	1193	11087	0
// OP_LOAD_F	11016	143	11088
// OP_LT	11088	10094	11089
// OP_IFNOT	11089	3	0
// OP_ADDRESS	11016	143	11090
// OP_STOREP_F	10094	11090	0
// OP_LOAD_F	11016	145	11091
// OP_GT	11091	1203	11092
// OP_IFNOT	11092	3	0
// OP_ADDRESS	11016	145	11093
// OP_STOREP_F	1203	11093	0
// OP_LOAD_F	11016	145	11094
// OP_LT	11094	10672	11095
// OP_IFNOT	11095	3	0
// OP_ADDRESS	11016	145	11096
// OP_STOREP_F	10672	11096	0
// OP_LOAD_V	11016	142	11097
// OP_STORE_V	11097	11020	0
// OP_SUB_F	619	11020	11100
// OP_STORE_F	11100	11020	0
// OP_STORE_V	11020	4	0
// OP_CALL1	496	0	0
// OP_STORE_V	59	11026	0
// OP_LOAD_F	28	466	11101
// OP_GE	31	11101	11102
// OP_IFNOT	11102	60	0
// OP_ADDRESS	11016	413	11103
// OP_LOAD_F	11016	413	11104
// OP_MUL_F	11028	819	11105
// OP_SUB_F	11104	11105	11106
// OP_STOREP_F	11106	11103	0
// OP_LOAD_F	11016	240	11107
// OP_MUL_F	11107	1130	11108
// OP_STORE_F	11108	11029	0
// OP_LOAD_F	28	197	11109
// OP_IFNOT	11109	25	0
// OP_LOAD_F	28	202	11110
// OP_LOAD_F	11016	144	11111
// OP_SUB_F	11110	11111	11112
// OP_STORE_F	11112	11029	0
// OP_LT	11029	619	11113
// OP_IFNOT	11113	3	0
// OP_ADD_F	11029	1459	11114
// OP_STORE_F	11114	11029	0
// OP_GT	11029	1827	11115
// OP_IFNOT	11115	3	0
// OP_SUB_F	11029	1459	11116
// OP_STORE_F	11116	11029	0
// OP_STORE_V	11029	4	0
// OP_CALL1	534	0	0
// OP_LE	1	1268	11117
// OP_IFNOT	11117	3	0
// OP_STORE_F	2627	11029	0
// OP_GOTO	2	0	0
// OP_STORE_F	10696	11029	0
// OP_LOAD_F	28	207	11118
// OP_BITAND	11118	274	11119
// OP_IFNOT	11119	3	0
// OP_MUL_F	1111	11029	11120
// OP_STORE_F	11120	11029	0
// OP_LOAD_F	11016	413	11121
// OP_GE	11121	11029	11122
// OP_IFNOT	11122	11	0
// OP_ADDRESS	11016	413	11123
// OP_LOAD_F	11016	413	11124
// OP_SUB_F	11124	813	11125
// OP_STOREP_F	11125	11123	0
// OP_LOAD_F	11016	413	11126
// OP_LT	11126	11029	11127
// OP_IFNOT	11127	3	0
// OP_ADDRESS	11016	413	11128
// OP_STOREP_F	11029	11128	0
// OP_GOTO	10	0	0
// OP_ADDRESS	11016	413	11129
// OP_LOAD_F	11016	413	11130
// OP_ADD_F	11130	813	11131
// OP_STOREP_F	11131	11129	0
// OP_LOAD_F	11016	413	11132
// OP_GT	11132	11029	11133
// OP_IFNOT	11133	3	0
// OP_ADDRESS	11016	413	11134
// OP_STOREP_F	11029	11134	0
// OP_ADDRESS	28	466	11135
// OP_ADD_F	31	655	11136
// OP_STOREP_F	11136	11135	0
// OP_ADDRESS	28	213	11137
// OP_LOAD_V	28	138	11138
// OP_STORE_V	11138	4	0
// OP_CALL1	506	0	0
// OP_DIV_F	1	7730	11141
// OP_STOREP_F	11141	11137	0
// OP_LOAD_F	28	207	11142
// OP_BITAND	11142	277	11143
// OP_IFNOT	11143	9	0
// OP_ADDRESS	28	138	11144
// OP_LOAD_V	28	138	11147
// OP_MUL_VF	11147	972	11150
// OP_LOAD_F	11016	413	11153
// OP_MUL_VF	11026	11153	11154
// OP_MUL_VF	11154	972	11157
// OP_ADD_V	11150	11157	11160
// OP_STOREP_V	11160	11144	0
// OP_LOAD_ENT	28	464	11163
// OP_IFNOT	11163	98	0
// OP_LOAD_F	28	179	11164
// OP_EQ_F	11164	321	11165
// OP_IFNOT	11165	5	0
// OP_STORE_V	7765	4	0
// OP_STORE_V	7766	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	11020	0
// OP_LOAD_F	28	179	11166
// OP_EQ_F	11166	322	11167
// OP_IFNOT	11167	5	0
// OP_STORE_V	7765	4	0
// OP_STORE_V	9690	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	11020	0
// OP_LOAD_F	28	179	11168
// OP_EQ_F	11168	323	11169
// OP_IFNOT	11169	6	0
// OP_STORE_V	7765	4	0
// OP_STORE_V	6997	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	11020	0
// OP_GOTO	13	0	0
// OP_LOAD_F	28	179	11170
// OP_EQ_F	11170	324	11171
// OP_IFNOT	11171	6	0
// OP_STORE_V	7769	4	0
// OP_STORE_V	5116	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	11020	0
// OP_GOTO	5	0	0
// OP_STORE_V	677	4	0
// OP_STORE_V	7776	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	11020	0
// OP_LOAD_ENT	28	464	11172
// OP_NOT_ENT	11172	0	11173
// OP_IFNOT	11173	2	0
// OP_RETURN	0	0	0
// OP_LOAD_F	28	179	11174
// OP_EQ_F	11174	323	11175
// OP_IFNOT	11175	14	0
// OP_LOAD_ENT	28	464	11176
// OP_ADDRESS	11176	156	11177
// OP_STOREP_F	619	11177	0
// OP_LOAD_ENT	28	464	11178
// OP_LOAD_S	11178	155	11179
// OP_NE_S	11179	5219	11180
// OP_IFNOT	11180	5	0
// OP_LOAD_ENT	28	464	11181
// OP_STORE_V	11181	4	0
// OP_STORE_V	5219	7	0
// OP_CALL2	498	0	0
// OP_RETURN	0	0	0
// OP_GOTO	9	0	0
// OP_LOAD_ENT	28	464	11182
// OP_LOAD_S	11182	155	11183
// OP_EQ_S	11183	5219	11184
// OP_IFNOT	11184	5	0
// OP_LOAD_ENT	28	464	11185
// OP_STORE_V	11185	4	0
// OP_STORE_V	8248	7	0
// OP_CALL2	498	0	0
// OP_LOAD_V	11016	142	11186
// OP_STORE_V	11186	11023	0
// OP_SUB_F	619	11023	11189
// OP_STORE_F	11189	11023	0
// OP_STORE_V	11023	4	0
// OP_CALL1	496	0	0
// OP_STORE_V	11020	4	0
// OP_CALL1	503	0	0
// OP_STORE_V	1	11020	0
// OP_LOAD_V	11016	130	11190
// OP_STORE_V	11190	4	0
// OP_LOAD_V	11016	130	11193
// OP_MUL_VF	11020	986	11196
// OP_ADD_V	11193	11196	11199
// OP_STORE_V	11199	7	0
// OP_STORE_V	267	10	0
// OP_STORE_V	11016	13	0
// OP_CALL4	510	0	0
// OP_LOAD_ENT	28	206	11202
// OP_LOAD_ENT	11202	464	11203
// OP_EQ_E	11203	30	11204
// OP_IFNOT	11204	8	0
// OP_MUL_VF	11020	810	11205
// OP_SUB_V	71	11205	11208
// OP_STORE_V	11208	11023	0
// OP_LOAD_ENT	28	464	11211
// OP_ADDRESS	11211	156	11212
// OP_STOREP_F	619	11212	0
// OP_GOTO	3	0	0
// OP_CALL0	945	0	0
// OP_STORE_V	1	11023	0
// OP_LOAD_ENT	28	464	11213
// OP_STORE_V	11213	4	0
// OP_STORE_V	11023	7	0
// OP_CALL2	497	0	0
// OP_DONE	0	0	0
void () gv2_steer = 
{
    local entity veh;
    local vector v0;
    local vector v1;
    local vector v2;
    local vector v3;
    local float tmp;
    veh = self.enemy;
    tmp = vlen(self.velocity) * 0.060;
    tmp = floor(tmp);
    
    if(tmp > 8.000)
    {
        tmp = 8.000;
    }
    
    
    if((time > self.fly_sound) || (veh.impulse != tmp))
    {
        if(tmp == 0.000)
        {
            sound(veh, CHAN_BODY, "engines/tank0.wav", 0.200, ATTN_NORM);
        }
        else
        {
            if(tmp == 1.000)
            {
                sound(veh, CHAN_BODY, "engines/tank1.wav", 0.300, ATTN_NORM);
            }
            else
            {
                if(tmp == 2.000)
                {
                    sound(veh, CHAN_BODY, "engines/tank2.wav", 0.400, ATTN_NORM);
                }
                else
                {
                    if(tmp == 3.000)
                    {
                        sound(veh, CHAN_BODY, "engines/tank3.wav", 0.500, ATTN_NORM);
                    }
                    else
                    {
                        if(tmp == 4.000)
                        {
                            sound(veh, CHAN_BODY, "engines/tank4.wav", 0.600, ATTN_NORM);
                        }
                        else
                        {
                            if(tmp == 5.000)
                            {
                                sound(veh, CHAN_BODY, "engines/tank5.wav", 0.700, ATTN_NORM);
                            }
                            else
                            {
                                if(tmp == 6.000)
                                {
                                    sound(veh, CHAN_BODY, "engines/tank6.wav", 0.800, ATTN_NORM);
                                }
                                else
                                {
                                    if(tmp == 7.000)
                                    {
                                        sound(veh, CHAN_BODY, "engines/tank7.wav", 0.900, ATTN_NORM);
                                    }
                                    else
                                    {
                                        sound(veh, CHAN_BODY, "engines/tank8.wav", 1.000, ATTN_NORM);
                                    }
                                    
                                }
                                
                            }
                            
                        }
                        
                    }
                    
                }
                
            }
            
        }
        
        self.fly_sound = time + 1.000;
        veh.impulse = tmp;
    }
    
    tmp = vlen(self.velocity - self.movedir);
    self.movedir = self.velocity;
    
    if(tmp > 120.000)
    {
        sound(veh, CHAN_VOICE, "player/land2.wav", 1.000, ATTN_NORM);
        T_Damage(veh, self.radiuskiller, self.radiuskiller, (tmp - 120.000) * 0.500);
    }
    
    
    if(self.flags & FL_ONGROUND)
    {
        self.radiuskiller = world;
    }
    
    if(!(self.flags & FL_GODMODE))
    {
        Steer_groundveh(100.000, 70.000);
    }
    else
    {
        Steer_groundveh(1000.000, 1000.000);
    }
    
    veh.flags = veh.flags - (veh.flags & FL_ONGROUND);
    
    if(self.flags & FL_ONGROUND)
    {
        
        if(veh.angles_x > 45.000)
        {
            veh.angles_x = 45.000;
        }
        
        
        if(veh.angles_x < -45.000)
        {
            veh.angles_x = -45.000;
        }
        
        
        if(veh.angles_z > 60.000)
        {
            veh.angles_z = 60.000;
        }
        
        
        if(veh.angles_z < -60.000)
        {
            veh.angles_z = -60.000;
        }
        
    }
    
    v1 = veh.angles;
    v1_x = 0.000 - v1_x;
    makevectors(v1);
    v3 = v_forward;
    
    if(time >= self.pausetime)
    {
        veh.speed = veh.speed - (v3_z * 7.000);
        tmp = veh.thru * 30.000;
        
        if(self.button2)
        {
            tmp = self.v_angle_y - veh.angles_y;
            
            if(tmp < 0.000)
            {
                tmp = tmp + 360.000;
            }
            
            
            if(tmp > 180.000)
            {
                tmp = tmp - 360.000;
            }
            
            if(fabs(tmp) <= 90.000)
            {
                tmp = 120.000;
            }
            else
            {
                tmp = -120.000;
            }
            
            
            if(self.flags & FL_GODMODE)
            {
                tmp = 20.000 * tmp;
            }
            
        }
        
        if(veh.speed >= tmp)
        {
            veh.speed = veh.speed - 5.000;
            
            if(veh.speed < tmp)
            {
                veh.speed = tmp;
            }
            
        }
        else
        {
            veh.speed = veh.speed + 5.000;
            
            if(veh.speed > tmp)
            {
                veh.speed = tmp;
            }
            
        }
        
        self.pausetime = time + 0.100;
    }
    
    self.armorvalue = vlen(self.velocity) / 3.300;
    
    if(self.flags & FL_ONGROUND)
    {
        self.velocity = (self.velocity * 0.500) + ((v3 * veh.speed) * 0.500);
    }
    
    
    if(self.trigger_field)
    {
        
        if(self.weapon == IT_WEP1)
        {
            v1 = GV_aim(0.970, -500.000);
        }
        
        
        if(self.weapon == IT_WEP2)
        {
            v1 = GV_aim(0.970, -800.000);
        }
        
        if(self.weapon == IT_WEP3)
        {
            v1 = GV_aim(0.970, -10.000);
        }
        else
        {
            if(self.weapon == IT_WEP4)
            {
                v1 = GV_aim(0.930, 1200.000);
            }
            else
            {
                v1 = GV_aim(1.000, -100.000);
            }
            
        }
        
        
        if(!self.trigger_field)
        {
            return;
        }
        
        if(self.weapon == IT_WEP3)
        {
            self.trigger_field.frame = 0.000;
            
            if(self.trigger_field.model != "progs/null.spr")
            {
                setmodel(self.trigger_field, "progs/null.spr");
            }
            
            return;
        }
        else
        {
            
            if(self.trigger_field.model == "progs/null.spr")
            {
                setmodel(self.trigger_field, "progs/s_target.spr");
            }
            
        }
        
        v2 = veh.angles;
        v2_x = 0.000 - v2_x;
        makevectors(v2);
        v1 = normalize(v1);
        traceline(veh.origin, veh.origin + (v1 * 200.000), FALSE, veh);
        if(self.enemy.trigger_field == world)
        {
            v2 = trace_endpos - (v1 * 8.000);
            self.trigger_field.frame = 0.000;
        }
        else
        {
            v2 = place_targetbox();
        }
        
        setorigin(self.trigger_field, v2);
    }
    
};

// gv2_attack
// function begins at statement 14782, parm_start=11215
// OP_LOAD_ENT	28	206	11223
// OP_STORE_ENT	11223	11221	0
// OP_LOAD_ENT	11221	412	11224
// OP_STORE_ENT	11224	11222	0
// OP_LOAD_V	11222	142	11225
// OP_STORE_V	11225	11215	0
// OP_SUB_F	619	11215	11228
// OP_STORE_F	11228	11215	0
// OP_LOAD_F	28	179	11229
// OP_EQ_F	11229	321	11230
// OP_IFNOT	11230	59	0
// OP_LOAD_F	28	245	11231
// OP_GE	11231	677	11232
// OP_IFNOT	11232	50	0
// OP_STORE_V	7765	4	0
// OP_STORE_V	7766	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	11218	0
// OP_STORE_V	11215	4	0
// OP_CALL1	496	0	0
// OP_LOAD_F	28	245	11233
// OP_BITAND	11233	677	11234
// OP_IFNOT	11234	12	0
// OP_LOAD_ENT	28	206	11235
// OP_LOAD_V	11235	130	11236
// OP_MUL_VF	59	827	11239
// OP_ADD_V	11236	11239	11242
// OP_MUL_VF	65	810	11245
// OP_SUB_V	11242	11245	11248
// OP_STORE_V	11248	4	0
// OP_STORE_V	11218	7	0
// OP_STORE_V	30	10	0
// OP_CALL3	4006	0	0
// OP_GOTO	11	0	0
// OP_LOAD_ENT	28	206	11251
// OP_LOAD_V	11251	130	11252
// OP_MUL_VF	59	827	11255
// OP_ADD_V	11252	11255	11258
// OP_MUL_VF	65	810	11261
// OP_ADD_V	11258	11261	11264
// OP_STORE_V	11264	4	0
// OP_STORE_V	11218	7	0
// OP_STORE_V	30	10	0
// OP_CALL3	4006	0	0
// OP_LOAD_ENT	28	206	11267
// OP_ADDRESS	11267	158	11268
// OP_LOAD_ENT	28	206	11269
// OP_LOAD_F	11269	158	11270
// OP_BITOR	11270	383	11271
// OP_STOREP_F	11271	11268	0
// OP_ADDRESS	28	182	11272
// OP_ADDRESS	28	183	11273
// OP_ADDRESS	28	245	11274
// OP_LOAD_F	28	245	11275
// OP_SUB_F	11275	677	11276
// OP_STOREP_F	11276	11274	0
// OP_STOREP_F	11276	11273	0
// OP_STOREP_F	11276	11272	0
// OP_LOAD_ENT	28	206	11277
// OP_ADDRESS	11277	437	11278
// OP_ADD_F	31	677	11279
// OP_STOREP_F	11279	11278	0
// OP_GOTO	4	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	2826	7	0
// OP_CALL2	518	0	0
// OP_ADDRESS	28	422	11280
// OP_ADD_F	31	655	11281
// OP_STOREP_F	11281	11280	0
// OP_LOAD_F	28	179	11282
// OP_EQ_F	11282	322	11283
// OP_IFNOT	11283	59	0
// OP_LOAD_F	28	251	11284
// OP_GE	11284	677	11285
// OP_IFNOT	11285	50	0
// OP_STORE_V	7765	4	0
// OP_STORE_V	9690	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	11218	0
// OP_STORE_V	11215	4	0
// OP_CALL1	496	0	0
// OP_LOAD_F	28	251	11286
// OP_BITAND	11286	677	11287
// OP_IFNOT	11287	12	0
// OP_LOAD_ENT	28	206	11288
// OP_LOAD_V	11288	130	11289
// OP_MUL_VF	59	827	11292
// OP_ADD_V	11289	11292	11295
// OP_MUL_VF	65	810	11298
// OP_ADD_V	11295	11298	11301
// OP_STORE_V	11301	4	0
// OP_STORE_V	11218	7	0
// OP_STORE_V	30	10	0
// OP_CALL3	5084	0	0
// OP_GOTO	11	0	0
// OP_LOAD_ENT	28	206	11304
// OP_LOAD_V	11304	130	11305
// OP_MUL_VF	59	827	11308
// OP_ADD_V	11305	11308	11311
// OP_MUL_VF	65	810	11314
// OP_SUB_V	11311	11314	11317
// OP_STORE_V	11317	4	0
// OP_STORE_V	11218	7	0
// OP_STORE_V	30	10	0
// OP_CALL3	5084	0	0
// OP_LOAD_ENT	28	206	11320
// OP_ADDRESS	11320	158	11321
// OP_LOAD_ENT	28	206	11322
// OP_LOAD_F	11322	158	11323
// OP_BITOR	11323	383	11324
// OP_STOREP_F	11324	11321	0
// OP_ADDRESS	28	182	11325
// OP_ADDRESS	28	184	11326
// OP_ADDRESS	28	251	11327
// OP_LOAD_F	28	251	11328
// OP_SUB_F	11328	677	11329
// OP_STOREP_F	11329	11327	0
// OP_STOREP_F	11329	11326	0
// OP_STOREP_F	11329	11325	0
// OP_LOAD_ENT	28	206	11330
// OP_ADDRESS	11330	437	11331
// OP_ADD_F	31	677	11332
// OP_STOREP_F	11332	11331	0
// OP_GOTO	4	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	2826	7	0
// OP_CALL2	518	0	0
// OP_ADDRESS	28	422	11333
// OP_ADD_F	31	1687	11334
// OP_STOREP_F	11334	11333	0
// OP_LOAD_F	28	179	11335
// OP_EQ_F	11335	323	11336
// OP_IFNOT	11336	62	0
// OP_LOAD_F	28	247	11337
// OP_GE	11337	677	11338
// OP_IFNOT	11338	52	0
// OP_STORE_V	7765	4	0
// OP_STORE_V	6997	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	11218	0
// OP_STORE_V	11215	4	0
// OP_CALL1	496	0	0
// OP_LOAD_F	28	247	11339
// OP_BITAND	11339	677	11340
// OP_IFNOT	11340	13	0
// OP_LOAD_ENT	28	206	11341
// OP_LOAD_V	11341	130	11342
// OP_MUL_VF	59	827	11345
// OP_ADD_V	11342	11345	11348
// OP_MUL_VF	65	810	11351
// OP_ADD_V	11348	11351	11354
// OP_STORE_V	11354	4	0
// OP_MUL_VF	11218	11357	11358
// OP_STORE_V	11358	7	0
// OP_STORE_V	30	10	0
// OP_CALL3	4281	0	0
// OP_GOTO	12	0	0
// OP_LOAD_ENT	28	206	11361
// OP_LOAD_V	11361	130	11362
// OP_MUL_VF	59	827	11365
// OP_ADD_V	11362	11365	11368
// OP_MUL_VF	65	810	11371
// OP_SUB_V	11368	11371	11374
// OP_STORE_V	11374	4	0
// OP_MUL_VF	11218	11357	11377
// OP_STORE_V	11377	7	0
// OP_STORE_V	30	10	0
// OP_CALL3	4281	0	0
// OP_LOAD_ENT	28	206	11380
// OP_ADDRESS	11380	158	11381
// OP_LOAD_ENT	28	206	11382
// OP_LOAD_F	11382	158	11383
// OP_BITOR	11383	383	11384
// OP_STOREP_F	11384	11381	0
// OP_ADDRESS	28	182	11385
// OP_ADDRESS	28	185	11386
// OP_ADDRESS	28	247	11387
// OP_LOAD_F	28	247	11388
// OP_SUB_F	11388	677	11389
// OP_STOREP_F	11389	11387	0
// OP_STOREP_F	11389	11386	0
// OP_STOREP_F	11389	11385	0
// OP_LOAD_ENT	28	206	11390
// OP_ADDRESS	11390	437	11391
// OP_ADD_F	31	677	11392
// OP_STOREP_F	11392	11391	0
// OP_GOTO	4	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	2826	7	0
// OP_CALL2	518	0	0
// OP_ADDRESS	28	422	11393
// OP_ADD_F	31	972	11394
// OP_STOREP_F	11394	11393	0
// OP_GOTO	60	0	0
// OP_LOAD_F	28	179	11395
// OP_EQ_F	11395	324	11396
// OP_IFNOT	11396	57	0
// OP_LOAD_F	28	248	11397
// OP_GE	11397	677	11398
// OP_IFNOT	11398	48	0
// OP_STORE_V	7769	4	0
// OP_STORE_V	5116	7	0
// OP_CALL2	7470	0	0
// OP_STORE_V	1	11218	0
// OP_STORE_V	11215	4	0
// OP_CALL1	496	0	0
// OP_LOAD_F	28	248	11399
// OP_BITAND	11399	677	11400
// OP_IFNOT	11400	11	0
// OP_LOAD_V	11222	130	11401
// OP_MUL_VF	65	810	11404
// OP_ADD_V	11401	11404	11407
// OP_STORE_V	11407	4	0
// OP_STORE_V	59	7	0
// OP_LOAD_ENT	28	206	11410
// OP_LOAD_ENT	11410	464	11411
// OP_STORE_V	11411	10	0
// OP_CALL3	4829	0	0
// OP_GOTO	10	0	0
// OP_LOAD_V	11222	130	11412
// OP_MUL_VF	65	810	11415
// OP_SUB_V	11412	11415	11418
// OP_STORE_V	11418	4	0
// OP_STORE_V	59	7	0
// OP_LOAD_ENT	28	206	11421
// OP_LOAD_ENT	11421	464	11422
// OP_STORE_V	11422	10	0
// OP_CALL3	4829	0	0
// OP_LOAD_ENT	28	206	11423
// OP_ADDRESS	11423	158	11424
// OP_LOAD_ENT	28	206	11425
// OP_LOAD_F	11425	158	11426
// OP_BITOR	11426	383	11427
// OP_STOREP_F	11427	11424	0
// OP_ADDRESS	28	182	11428
// OP_ADDRESS	28	186	11429
// OP_ADDRESS	28	248	11430
// OP_LOAD_F	28	248	11431
// OP_SUB_F	11431	677	11432
// OP_STOREP_F	11432	11430	0
// OP_STOREP_F	11432	11429	0
// OP_STOREP_F	11432	11428	0
// OP_LOAD_ENT	28	206	11433
// OP_ADDRESS	11433	437	11434
// OP_ADD_F	31	677	11435
// OP_STOREP_F	11435	11434	0
// OP_GOTO	4	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	2826	7	0
// OP_CALL2	518	0	0
// OP_ADDRESS	28	422	11436
// OP_ADD_F	31	10247	11437
// OP_STOREP_F	11437	11436	0
// OP_DONE	0	0	0
void () gv2_attack = 
{
    local vector v1;
    local vector v2;
    local entity stemp;
    local entity e;
    stemp = self.enemy;
    e = stemp.oldenemy;
    v1 = e.angles;
    v1_x = 0.000 - v1_x;
    
    if(self.weapon == IT_WEP1)
    {
        if(self.ammo_auto >= 1.000)
        {
            v2 = GV_aim(0.970, -500.000);
            makevectors(v1);
            if(self.ammo_auto & 1.000)
            {
                AC_spike((self.enemy.origin + (v_forward * 10.000)) - (v_right * 8.000), v2, world);
            }
            else
            {
                AC_spike((self.enemy.origin + (v_forward * 10.000)) + (v_right * 8.000), v2, world);
            }
            
            self.enemy.effects = self.enemy.effects | EF_MUZZLEFLASH;
            self.ammo_auto = self.ammo_auto - 1.000;
            self.ammo_shells = self.ammo_auto - 1.000;
            self.currentammo = self.ammo_auto - 1.000;
            self.enemy.show_hostile = time + 1.000;
        }
        else
        {
            sprint(self, "not enough ammo.\n");
        }
        
        self.attack_finished = time + 0.100;
    }
    
    
    if(self.weapon == IT_WEP2)
    {
        if(self.ammo_cell >= 1.000)
        {
            v2 = GV_aim(0.970, -800.000);
            makevectors(v1);
            if(self.ammo_cell & 1.000)
            {
                AC_plasma((self.enemy.origin + (v_forward * 10.000)) + (v_right * 8.000), v2, world);
            }
            else
            {
                AC_plasma((self.enemy.origin + (v_forward * 10.000)) - (v_right * 8.000), v2, world);
            }
            
            self.enemy.effects = self.enemy.effects | EF_MUZZLEFLASH;
            self.ammo_cell = self.ammo_cell - 1.000;
            self.ammo_nails = self.ammo_cell - 1.000;
            self.currentammo = self.ammo_cell - 1.000;
            self.enemy.show_hostile = time + 1.000;
        }
        else
        {
            sprint(self, "not enough ammo.\n");
        }
        
        self.attack_finished = time + 0.300;
    }
    
    if(self.weapon == IT_WEP3)
    {
        if(self.ammo_shel >= 1.000)
        {
            v2 = GV_aim(0.970, -10.000);
            makevectors(v1);
            if(self.ammo_shel & 1.000)
            {
                AC_bomb((self.enemy.origin + (v_forward * 10.000)) + (v_right * 8.000), v2 * 900.000, world);
            }
            else
            {
                AC_bomb((self.enemy.origin + (v_forward * 10.000)) - (v_right * 8.000), v2 * 900.000, world);
            }
            
            self.enemy.effects = self.enemy.effects | EF_MUZZLEFLASH;
            self.ammo_shel = self.ammo_shel - 1.000;
            self.ammo_rockets = self.ammo_shel - 1.000;
            self.currentammo = self.ammo_shel - 1.000;
            self.enemy.show_hostile = time + 1.000;
        }
        else
        {
            sprint(self, "not enough ammo.\n");
        }
        
        self.attack_finished = time + 0.500;
    }
    else
    {
        
        if(self.weapon == IT_WEP4)
        {
            if(self.ammo_amsl >= 1.000)
            {
                v2 = GV_aim(0.930, 1200.000);
                makevectors(v1);
                if(self.ammo_amsl & 1.000)
                {
                    AC_heatseeker(e.origin + (v_right * 8.000), v_forward, self.enemy.trigger_field);
                }
                else
                {
                    AC_heatseeker(e.origin - (v_right * 8.000), v_forward, self.enemy.trigger_field);
                }
                
                self.enemy.effects = self.enemy.effects | EF_MUZZLEFLASH;
                self.ammo_amsl = self.ammo_amsl - 1.000;
                self.ammo_cells = self.ammo_amsl - 1.000;
                self.currentammo = self.ammo_amsl - 1.000;
                self.enemy.show_hostile = time + 1.000;
            }
            else
            {
                sprint(self, "not enough ammo.\n");
            }
            
            self.attack_finished = time + 0.800;
        }
        
    }
    
};

// gv2_currentammo
// function begins at statement 15036, parm_start=11439
// OP_ADDRESS	28	183	11439
// OP_LOAD_F	28	245	11440
// OP_STOREP_F	11440	11439	0
// OP_ADDRESS	28	184	11441
// OP_LOAD_F	28	251	11442
// OP_STOREP_F	11442	11441	0
// OP_ADDRESS	28	185	11443
// OP_LOAD_F	28	247	11444
// OP_STOREP_F	11444	11443	0
// OP_ADDRESS	28	186	11445
// OP_LOAD_F	28	248	11446
// OP_STOREP_F	11446	11445	0
// OP_LOAD_F	28	179	11447
// OP_EQ_F	11447	321	11448
// OP_IFNOT	11448	4	0
// OP_ADDRESS	28	180	11449
// OP_STOREP_S	7632	11449	0
// OP_GOTO	18	0	0
// OP_LOAD_F	28	179	11450
// OP_EQ_F	11450	322	11451
// OP_IFNOT	11451	4	0
// OP_ADDRESS	28	180	11452
// OP_STOREP_S	9573	11452	0
// OP_GOTO	12	0	0
// OP_LOAD_F	28	179	11453
// OP_EQ_F	11453	323	11454
// OP_IFNOT	11454	4	0
// OP_ADDRESS	28	180	11455
// OP_STOREP_S	11456	11455	0
// OP_GOTO	6	0	0
// OP_LOAD_F	28	179	11457
// OP_EQ_F	11457	324	11458
// OP_IFNOT	11458	3	0
// OP_ADDRESS	28	180	11459
// OP_STOREP_S	10905	11459	0
// OP_DONE	0	0	0
void () gv2_currentammo = 
{
    self.ammo_shells = self.ammo_auto;
    self.ammo_nails = self.ammo_cell;
    self.ammo_rockets = self.ammo_shel;
    self.ammo_cells = self.ammo_amsl;
    if(self.weapon == IT_WEP1)
    {
        self.weaponmodel = "progs/v_auto.mdl";
    }
    else
    {
        if(self.weapon == IT_WEP2)
        {
            self.weaponmodel = "progs/v_plas.mdl";
        }
        else
        {
            if(self.weapon == IT_WEP3)
            {
                self.weaponmodel = "progs/v_cann.mdl";
            }
            else
            {
                
                if(self.weapon == IT_WEP4)
                {
                    self.weaponmodel = "progs/v_sam.mdl";
                }
                
            }
            
        }
        
    }
    
};

// start_groundveh2
// function begins at statement 15072, parm_start=11461
// OP_STORE_V	28	4	0
// OP_STORE_V	10915	7	0
// OP_STORE_V	10918	10	0
// OP_CALL3	499	0	0
// OP_ADDRESS	28	188	11463
// OP_STOREP_F	304	11463	0
// OP_CALL0	508	0	0
// OP_STORE_ENT	1	11461	0
// OP_STORE_V	11461	4	0
// OP_STORE_V	11464	7	0
// OP_CALL2	498	0	0
// OP_LOAD_ENT	28	219	11465
// OP_STORE_ENT	11465	11462	0
// OP_STORE_V	28	4	0
// OP_LOAD_V	11462	130	11466
// OP_STORE_V	11466	7	0
// OP_CALL2	497	0	0
// OP_STORE_V	11461	4	0
// OP_LOAD_V	11462	130	11469
// OP_STORE_V	11469	7	0
// OP_CALL2	497	0	0
// OP_ADDRESS	11461	142	11472
// OP_LOAD_V	11462	142	11475
// OP_STOREP_V	11475	11472	0
// OP_ADDRESS	11461	154	11478
// OP_STOREP_S	1550	11478	0
// OP_ADDRESS	11461	138	11479
// OP_STOREP_V	607	11479	0
// OP_ADDRESS	11461	128	11482
// OP_STOREP_F	284	11482	0
// OP_STORE_V	11461	4	0
// OP_STORE_V	10915	7	0
// OP_STORE_V	3565	10	0
// OP_CALL3	499	0	0
// OP_ADDRESS	11461	129	11483
// OP_STOREP_F	294	11483	0
// OP_ADDRESS	11461	177	11484
// OP_STOREP_F	4155	11484	0
// OP_ADDRESS	11461	210	11485
// OP_LOAD_F	11461	177	11486
// OP_STOREP_F	11486	11485	0
// OP_ADDRESS	11461	188	11487
// OP_STOREP_F	306	11487	0
// OP_ADDRESS	11461	411	11488
// OP_STOREP_FNC	7609	11488	0
// OP_ADDRESS	11461	205	11489
// OP_LOAD_S	28	205	11490
// OP_STOREP_S	11490	11489	0
// OP_ADDRESS	11461	413	11491
// OP_STOREP_F	619	11491	0
// OP_ADDRESS	11461	240	11492
// OP_STOREP_F	619	11492	0
// OP_ADDRESS	28	206	11493
// OP_STOREP_ENT	11461	11493	0
// OP_ADDRESS	11461	219	11494
// OP_STOREP_ENT	28	11494	0
// OP_ADDRESS	11461	226	11495
// OP_STOREP_ENT	28	11495	0
// OP_ADDRESS	11461	191	11496
// OP_STOREP_V	582	11496	0
// OP_ADDRESS	11461	208	11499
// OP_LOAD_F	28	208	11500
// OP_STOREP_F	11500	11499	0
// OP_ADDRESS	11461	213	11501
// OP_STOREP_F	1111	11501	0
// OP_ADDRESS	28	238	11502
// OP_STOREP_F	619	11502	0
// OP_CALL0	508	0	0
// OP_STORE_ENT	1	11461	0
// OP_STORE_V	11461	4	0
// OP_STORE_V	11503	7	0
// OP_CALL2	498	0	0
// OP_STORE_V	11461	4	0
// OP_LOAD_ENT	28	206	11504
// OP_LOAD_V	11504	130	11505
// OP_STORE_V	11505	7	0
// OP_CALL2	497	0	0
// OP_ADDRESS	11461	226	11508
// OP_STOREP_ENT	28	11508	0
// OP_LOAD_ENT	28	206	11509
// OP_ADDRESS	11509	412	11510
// OP_STOREP_ENT	11461	11510	0
// OP_ADDRESS	11461	208	11511
// OP_LOAD_F	28	208	11512
// OP_STOREP_F	11512	11511	0
// OP_CALL0	508	0	0
// OP_STORE_ENT	1	11461	0
// OP_STORE_V	11461	4	0
// OP_STORE_V	11513	7	0
// OP_CALL2	498	0	0
// OP_STORE_V	11461	4	0
// OP_LOAD_ENT	28	206	11514
// OP_LOAD_V	11514	130	11515
// OP_STORE_V	11515	7	0
// OP_CALL2	497	0	0
// OP_ADDRESS	11461	226	11518
// OP_STOREP_ENT	28	11518	0
// OP_LOAD_ENT	28	206	11519
// OP_ADDRESS	11519	467	11520
// OP_STOREP_ENT	11461	11520	0
// OP_ADDRESS	11461	208	11521
// OP_LOAD_F	28	208	11522
// OP_STOREP_F	11522	11521	0
// OP_ADDRESS	28	408	11523
// OP_STOREP_FNC	11214	11523	0
// OP_ADDRESS	28	407	11524
// OP_STOREP_FNC	11015	11524	0
// OP_ADDRESS	28	409	11525
// OP_STOREP_FNC	11438	11525	0
// OP_ADDRESS	28	183	11526
// OP_ADDRESS	28	245	11527
// OP_STOREP_F	3338	11527	0
// OP_STOREP_F	3338	11526	0
// OP_ADDRESS	28	184	11528
// OP_ADDRESS	28	251	11529
// OP_MUL_F	1130	113	11530
// OP_STOREP_F	11530	11529	0
// OP_STOREP_F	11530	11528	0
// OP_ADDRESS	28	185	11531
// OP_ADDRESS	28	247	11532
// OP_MUL_F	1203	113	11533
// OP_STOREP_F	11533	11532	0
// OP_STOREP_F	11533	11531	0
// OP_ADDRESS	28	186	11534
// OP_ADDRESS	28	248	11535
// OP_MUL_F	816	113	11536
// OP_STOREP_F	11536	11535	0
// OP_STOREP_F	11536	11534	0
// OP_CALL0	527	0	0
// OP_STORE_V	28	4	0
// OP_CALL1	532	0	0
// OP_NOT_F	1	0	11537
// OP_IFNOT	11537	12	0
// OP_LOAD_V	28	130	11538
// OP_STORE_V	11538	4	0
// OP_LOAD_V	28	130	11541
// OP_ADD_V	11541	10990	11544
// OP_STORE_V	11544	7	0
// OP_STORE_V	268	10	0
// OP_STORE_V	28	13	0
// OP_CALL4	510	0	0
// OP_ADDRESS	28	133	11547
// OP_ADD_F	73	1130	11548
// OP_STOREP_F	11548	11547	0
// OP_LOAD_ENT	28	206	11549
// OP_STORE_V	11549	4	0
// OP_LOAD_V	28	130	11550
// OP_STORE_V	11550	7	0
// OP_CALL2	497	0	0
// OP_LOAD_ENT	28	206	11553
// OP_LOAD_ENT	11553	412	11554
// OP_STORE_V	11554	4	0
// OP_LOAD_V	28	130	11555
// OP_STORE_V	11555	7	0
// OP_CALL2	497	0	0
// OP_LOAD_ENT	28	206	11558
// OP_LOAD_ENT	11558	467	11559
// OP_STORE_V	11559	4	0
// OP_LOAD_V	28	130	11560
// OP_STORE_V	11560	7	0
// OP_CALL2	497	0	0
// OP_ADDRESS	28	138	11563
// OP_STOREP_V	607	11563	0
// OP_ADDRESS	28	227	11566
// OP_STOREP_V	607	11566	0
// OP_LOAD_ENT	28	412	11569
// OP_ADDRESS	11569	404	11570
// OP_STOREP_F	815	11570	0
// OP_DONE	0	0	0
void () start_groundveh2 = 
{
    local entity e;
    local entity e2;
    setsize(self, '-16.000 -16.000 -24.000', '16.000 16.000 24.000');
    self.takedamage = DAMAGE_NO;
    e = spawn();
    setmodel(e, "progs/tankba.mdl");
    e2 = self.goalentity;
    setorigin(self, e2.origin);
    setorigin(e, e2.origin);
    e.angles = e2.angles;
    e.classname = "tank";
    e.velocity = '0.000 0.000 0.000';
    e.movetype = MOVETYPE_FLY;
    setsize(e, '-16.000 -16.000 -24.000', '16.000 16.000 16.000');
    e.solid = SOLID_SLIDEBOX;
    e.health = 600.000;
    e.max_health = e.health;
    e.takedamage = DAMAGE_AIM;
    e.th_die = GV_Die;
    e.netname = self.netname;
    e.speed = 0.000;
    e.thru = 0.000;
    self.enemy = e;
    e.goalentity = self;
    e.owner = self;
    e.view_ofs = '0.000 0.000 1.000';
    e.colormap = self.colormap;
    e.armorvalue = 20.000;
    self.toyview = 0.000;
    e = spawn();
    setmodel(e, "progs/tanktb.mdl");
    setorigin(e, self.enemy.origin);
    e.owner = self;
    self.enemy.oldenemy = e;
    e.colormap = self.colormap;
    e = spawn();
    setmodel(e, "progs/tanktr.mdl");
    setorigin(e, self.enemy.origin);
    e.owner = self;
    self.enemy.movetarget = e;
    e.colormap = self.colormap;
    self.th_missile = gv2_attack;
    self.th_run = gv2_steer;
    self.th_melee = gv2_currentammo;
    self.ammo_auto = 150.000;
    self.ammo_shells = 150.000;
    self.ammo_cell = 30.000 * wepmulti;
    self.ammo_nails = 30.000 * wepmulti;
    self.ammo_shel = 60.000 * wepmulti;
    self.ammo_rockets = 60.000 * wepmulti;
    self.ammo_amsl = 6.000 * wepmulti;
    self.ammo_cells = 6.000 * wepmulti;
    droptofloor();
    
    if(!checkbottom(self))
    {
        traceline(self.origin, self.origin + '0.000 0.000 -10000.000', TRUE, self);
        self.origin_z = trace_endpos_z + 30.000;
    }
    
    setorigin(self.enemy, self.origin);
    setorigin(self.enemy.oldenemy, self.origin);
    setorigin(self.enemy.movetarget, self.origin);
    self.velocity = '0.000 0.000 0.000';
    self.movedir = '0.000 0.000 0.000';
    self.oldenemy.style = 32.000;
};

