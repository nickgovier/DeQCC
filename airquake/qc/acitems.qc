// check_ammo
// function begins at statement 3345, parm_start=3069
// OP_LOAD_S	3069	154	3071
// OP_NE_S	3071	766	3072
// OP_IFNOT	3072	2	0
// OP_RETURN	619	0	0
// OP_LOAD_F	3069	404	3073
// OP_EQ_F	3073	677	3074
// OP_IFNOT	3074	57	0
// OP_EQ_F	3070	677	3075
// OP_LOAD_F	3069	245	3076
// OP_LT	3076	986	3077
// OP_AND	3075	3077	3078
// OP_IFNOT	3078	2	0
// OP_RETURN	1155	0	0
// OP_EQ_F	3070	806	3079
// OP_LOAD_F	3069	246	3080
// OP_MUL_F	827	113	3081
// OP_LT	3080	3081	3082
// OP_AND	3079	3082	3083
// OP_IFNOT	3083	2	0
// OP_RETURN	806	0	0
// OP_EQ_F	3070	808	3084
// OP_LOAD_F	3069	248	3085
// OP_MUL_F	808	113	3086
// OP_LT	3085	3086	3087
// OP_AND	3084	3087	3088
// OP_IFNOT	3088	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	813	3089
// OP_LOAD_F	3069	249	3090
// OP_MUL_F	808	113	3091
// OP_LT	3090	3091	3092
// OP_AND	3089	3092	3093
// OP_IFNOT	3093	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	619	3094
// OP_IFNOT	3094	27	0
// OP_LOAD_F	3069	246	3095
// OP_MUL_F	827	113	3096
// OP_GT	3095	3096	3097
// OP_IFNOT	3097	4	0
// OP_ADDRESS	3069	246	3098
// OP_MUL_F	827	113	3099
// OP_STOREP_F	3099	3098	0
// OP_LOAD_F	3069	245	3100
// OP_GT	3100	986	3101
// OP_IFNOT	3101	3	0
// OP_ADDRESS	3069	245	3102
// OP_STOREP_F	986	3102	0
// OP_LOAD_F	3069	248	3103
// OP_MUL_F	808	113	3104
// OP_GT	3103	3104	3105
// OP_IFNOT	3105	4	0
// OP_ADDRESS	3069	248	3106
// OP_MUL_F	808	113	3107
// OP_STOREP_F	3107	3106	0
// OP_LOAD_F	3069	249	3108
// OP_MUL_F	808	113	3109
// OP_GT	3108	3109	3110
// OP_IFNOT	3110	4	0
// OP_ADDRESS	3069	249	3111
// OP_MUL_F	808	113	3112
// OP_STOREP_F	3112	3111	0
// OP_GOTO	503	0	0
// OP_LOAD_F	3069	404	3113
// OP_EQ_F	3113	806	3114
// OP_IFNOT	3114	57	0
// OP_EQ_F	3070	677	3115
// OP_LOAD_F	3069	245	3116
// OP_LT	3116	2618	3117
// OP_AND	3115	3117	3118
// OP_IFNOT	3118	2	0
// OP_RETURN	827	0	0
// OP_EQ_F	3070	808	3119
// OP_LOAD_F	3069	248	3120
// OP_MUL_F	808	113	3121
// OP_LT	3120	3121	3122
// OP_AND	3119	3122	3123
// OP_IFNOT	3123	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	813	3124
// OP_LOAD_F	3069	249	3125
// OP_MUL_F	808	113	3126
// OP_LT	3125	3126	3127
// OP_AND	3124	3127	3128
// OP_IFNOT	3128	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	816	3129
// OP_LOAD_F	3069	250	3130
// OP_MUL_F	808	113	3131
// OP_LT	3130	3131	3132
// OP_AND	3129	3132	3133
// OP_IFNOT	3133	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	619	3134
// OP_IFNOT	3134	27	0
// OP_LOAD_F	3069	245	3135
// OP_GT	3135	2618	3136
// OP_IFNOT	3136	3	0
// OP_ADDRESS	3069	245	3137
// OP_STOREP_F	2618	3137	0
// OP_LOAD_F	3069	248	3138
// OP_MUL_F	808	113	3139
// OP_GT	3138	3139	3140
// OP_IFNOT	3140	4	0
// OP_ADDRESS	3069	248	3141
// OP_MUL_F	808	113	3142
// OP_STOREP_F	3142	3141	0
// OP_LOAD_F	3069	249	3143
// OP_MUL_F	808	113	3144
// OP_GT	3143	3144	3145
// OP_IFNOT	3145	4	0
// OP_ADDRESS	3069	249	3146
// OP_MUL_F	808	113	3147
// OP_STOREP_F	3147	3146	0
// OP_LOAD_F	3069	250	3148
// OP_MUL_F	808	113	3149
// OP_GT	3148	3149	3150
// OP_IFNOT	3150	4	0
// OP_ADDRESS	3069	250	3151
// OP_MUL_F	808	113	3152
// OP_STOREP_F	3152	3151	0
// OP_GOTO	444	0	0
// OP_LOAD_F	3069	404	3153
// OP_EQ_F	3153	788	3154
// OP_IFNOT	3154	57	0
// OP_EQ_F	3070	677	3155
// OP_LOAD_F	3069	245	3156
// OP_LT	3156	2618	3157
// OP_AND	3155	3157	3158
// OP_IFNOT	3158	2	0
// OP_RETURN	827	0	0
// OP_EQ_F	3070	808	3159
// OP_LOAD_F	3069	248	3160
// OP_MUL_F	808	113	3161
// OP_LT	3160	3161	3162
// OP_AND	3159	3162	3163
// OP_IFNOT	3163	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	813	3164
// OP_LOAD_F	3069	249	3165
// OP_MUL_F	808	113	3166
// OP_LT	3165	3166	3167
// OP_AND	3164	3167	3168
// OP_IFNOT	3168	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	816	3169
// OP_LOAD_F	3069	250	3170
// OP_MUL_F	808	113	3171
// OP_LT	3170	3171	3172
// OP_AND	3169	3172	3173
// OP_IFNOT	3173	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	619	3174
// OP_IFNOT	3174	27	0
// OP_LOAD_F	3069	245	3175
// OP_GT	3175	2618	3176
// OP_IFNOT	3176	3	0
// OP_ADDRESS	3069	245	3177
// OP_STOREP_F	2618	3177	0
// OP_LOAD_F	3069	248	3178
// OP_MUL_F	808	113	3179
// OP_GT	3178	3179	3180
// OP_IFNOT	3180	4	0
// OP_ADDRESS	3069	248	3181
// OP_MUL_F	808	113	3182
// OP_STOREP_F	3182	3181	0
// OP_LOAD_F	3069	249	3183
// OP_MUL_F	808	113	3184
// OP_GT	3183	3184	3185
// OP_IFNOT	3185	4	0
// OP_ADDRESS	3069	249	3186
// OP_MUL_F	808	113	3187
// OP_STOREP_F	3187	3186	0
// OP_LOAD_F	3069	250	3188
// OP_MUL_F	808	113	3189
// OP_GT	3188	3189	3190
// OP_IFNOT	3190	4	0
// OP_ADDRESS	3069	250	3191
// OP_MUL_F	808	113	3192
// OP_STOREP_F	3192	3191	0
// OP_GOTO	385	0	0
// OP_LOAD_F	3069	404	3193
// OP_EQ_F	3193	808	3194
// OP_IFNOT	3194	57	0
// OP_EQ_F	3070	677	3195
// OP_LOAD_F	3069	245	3196
// OP_LT	3196	2618	3197
// OP_AND	3195	3197	3198
// OP_IFNOT	3198	2	0
// OP_RETURN	827	0	0
// OP_EQ_F	3070	808	3199
// OP_LOAD_F	3069	248	3200
// OP_MUL_F	806	113	3201
// OP_LT	3200	3201	3202
// OP_AND	3199	3202	3203
// OP_IFNOT	3203	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	813	3204
// OP_LOAD_F	3069	249	3205
// OP_MUL_F	816	113	3206
// OP_LT	3205	3206	3207
// OP_AND	3204	3207	3208
// OP_IFNOT	3208	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	816	3209
// OP_LOAD_F	3069	250	3210
// OP_MUL_F	816	113	3211
// OP_LT	3210	3211	3212
// OP_AND	3209	3212	3213
// OP_IFNOT	3213	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	619	3214
// OP_IFNOT	3214	27	0
// OP_LOAD_F	3069	245	3215
// OP_GT	3215	2618	3216
// OP_IFNOT	3216	3	0
// OP_ADDRESS	3069	245	3217
// OP_STOREP_F	2618	3217	0
// OP_LOAD_F	3069	248	3218
// OP_MUL_F	806	113	3219
// OP_GT	3218	3219	3220
// OP_IFNOT	3220	4	0
// OP_ADDRESS	3069	248	3221
// OP_MUL_F	806	113	3222
// OP_STOREP_F	3222	3221	0
// OP_LOAD_F	3069	249	3223
// OP_MUL_F	816	113	3224
// OP_GT	3223	3224	3225
// OP_IFNOT	3225	4	0
// OP_ADDRESS	3069	249	3226
// OP_MUL_F	816	113	3227
// OP_STOREP_F	3227	3226	0
// OP_LOAD_F	3069	250	3228
// OP_MUL_F	816	113	3229
// OP_GT	3228	3229	3230
// OP_IFNOT	3230	4	0
// OP_ADDRESS	3069	250	3231
// OP_MUL_F	816	113	3232
// OP_STOREP_F	3232	3231	0
// OP_GOTO	326	0	0
// OP_LOAD_F	3069	404	3233
// OP_EQ_F	3233	813	3234
// OP_IFNOT	3234	57	0
// OP_EQ_F	3070	677	3235
// OP_LOAD_F	3069	245	3236
// OP_LT	3236	3237	3238
// OP_AND	3235	3238	3239
// OP_IFNOT	3239	2	0
// OP_RETURN	1111	0	0
// OP_EQ_F	3070	806	3240
// OP_LOAD_F	3069	246	3241
// OP_MUL_F	810	113	3242
// OP_LT	3241	3242	3243
// OP_AND	3240	3243	3244
// OP_IFNOT	3244	2	0
// OP_RETURN	806	0	0
// OP_EQ_F	3070	808	3245
// OP_LOAD_F	3069	248	3246
// OP_MUL_F	808	113	3247
// OP_LT	3246	3247	3248
// OP_AND	3245	3248	3249
// OP_IFNOT	3249	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	819	3250
// OP_LOAD_F	3069	251	3251
// OP_MUL_F	1155	113	3252
// OP_LT	3251	3252	3253
// OP_AND	3250	3253	3254
// OP_IFNOT	3254	2	0
// OP_RETURN	810	0	0
// OP_EQ_F	3070	619	3255
// OP_IFNOT	3255	27	0
// OP_LOAD_F	3069	245	3256
// OP_GT	3256	3237	3257
// OP_IFNOT	3257	3	0
// OP_ADDRESS	3069	245	3258
// OP_STOREP_F	3237	3258	0
// OP_LOAD_F	3069	246	3259
// OP_MUL_F	810	113	3260
// OP_GT	3259	3260	3261
// OP_IFNOT	3261	4	0
// OP_ADDRESS	3069	246	3262
// OP_MUL_F	810	113	3263
// OP_STOREP_F	3263	3262	0
// OP_LOAD_F	3069	248	3264
// OP_MUL_F	808	113	3265
// OP_GT	3264	3265	3266
// OP_IFNOT	3266	4	0
// OP_ADDRESS	3069	248	3267
// OP_MUL_F	808	113	3268
// OP_STOREP_F	3268	3267	0
// OP_LOAD_F	3069	251	3269
// OP_MUL_F	1155	113	3270
// OP_GT	3269	3270	3271
// OP_IFNOT	3271	4	0
// OP_ADDRESS	3069	251	3272
// OP_MUL_F	1155	113	3273
// OP_STOREP_F	3273	3272	0
// OP_GOTO	267	0	0
// OP_LOAD_F	3069	404	3274
// OP_EQ_F	3274	816	3275
// OP_IFNOT	3275	57	0
// OP_EQ_F	3070	677	3276
// OP_LOAD_F	3069	245	3277
// OP_LT	3277	2618	3278
// OP_AND	3276	3278	3279
// OP_IFNOT	3279	2	0
// OP_RETURN	827	0	0
// OP_EQ_F	3070	806	3280
// OP_LOAD_F	3069	246	3281
// OP_MUL_F	812	113	3282
// OP_LT	3281	3282	3283
// OP_AND	3280	3283	3284
// OP_IFNOT	3284	2	0
// OP_RETURN	808	0	0
// OP_EQ_F	3070	808	3285
// OP_LOAD_F	3069	248	3286
// OP_MUL_F	808	113	3287
// OP_LT	3286	3287	3288
// OP_AND	3285	3288	3289
// OP_IFNOT	3289	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	813	3290
// OP_LOAD_F	3069	249	3291
// OP_MUL_F	808	113	3292
// OP_LT	3291	3292	3293
// OP_AND	3290	3293	3294
// OP_IFNOT	3294	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	619	3295
// OP_IFNOT	3295	27	0
// OP_LOAD_F	3069	246	3296
// OP_MUL_F	812	113	3297
// OP_GT	3296	3297	3298
// OP_IFNOT	3298	4	0
// OP_ADDRESS	3069	246	3299
// OP_MUL_F	812	113	3300
// OP_STOREP_F	3300	3299	0
// OP_LOAD_F	3069	245	3301
// OP_GT	3301	2618	3302
// OP_IFNOT	3302	3	0
// OP_ADDRESS	3069	245	3303
// OP_STOREP_F	2618	3303	0
// OP_LOAD_F	3069	248	3304
// OP_MUL_F	808	113	3305
// OP_GT	3304	3305	3306
// OP_IFNOT	3306	4	0
// OP_ADDRESS	3069	248	3307
// OP_MUL_F	808	113	3308
// OP_STOREP_F	3308	3307	0
// OP_LOAD_F	3069	249	3309
// OP_MUL_F	808	113	3310
// OP_GT	3309	3310	3311
// OP_IFNOT	3311	4	0
// OP_ADDRESS	3069	249	3312
// OP_MUL_F	808	113	3313
// OP_STOREP_F	3313	3312	0
// OP_GOTO	208	0	0
// OP_LOAD_F	3069	404	3314
// OP_EQ_F	3314	819	3315
// OP_IFNOT	3315	29	0
// OP_EQ_F	3070	677	3316
// OP_LOAD_F	3069	245	3317
// OP_LT	3317	986	3318
// OP_AND	3316	3318	3319
// OP_IFNOT	3319	2	0
// OP_RETURN	1155	0	0
// OP_EQ_F	3070	808	3320
// OP_LOAD_F	3069	248	3321
// OP_MUL_F	812	113	3322
// OP_LT	3321	3322	3323
// OP_AND	3320	3323	3324
// OP_IFNOT	3324	2	0
// OP_RETURN	808	0	0
// OP_EQ_F	3070	619	3325
// OP_IFNOT	3325	13	0
// OP_LOAD_F	3069	245	3326
// OP_GT	3326	986	3327
// OP_IFNOT	3327	3	0
// OP_ADDRESS	3069	245	3328
// OP_STOREP_F	986	3328	0
// OP_LOAD_F	3069	248	3329
// OP_MUL_F	812	113	3330
// OP_GT	3329	3330	3331
// OP_IFNOT	3331	4	0
// OP_ADDRESS	3069	248	3332
// OP_MUL_F	812	113	3333
// OP_STOREP_F	3333	3332	0
// OP_GOTO	177	0	0
// OP_LOAD_F	3069	404	3334
// OP_EQ_F	3334	810	3335
// OP_IFNOT	3335	57	0
// OP_EQ_F	3070	677	3336
// OP_LOAD_F	3069	245	3337
// OP_LT	3337	3338	3339
// OP_AND	3336	3339	3340
// OP_IFNOT	3340	2	0
// OP_RETURN	1111	0	0
// OP_EQ_F	3070	788	3341
// OP_LOAD_F	3069	247	3342
// OP_MUL_F	1203	113	3343
// OP_LT	3342	3343	3344
// OP_AND	3341	3344	3345
// OP_IFNOT	3345	2	0
// OP_RETURN	827	0	0
// OP_EQ_F	3070	808	3346
// OP_LOAD_F	3069	248	3347
// OP_MUL_F	816	113	3348
// OP_LT	3347	3348	3349
// OP_AND	3346	3349	3350
// OP_IFNOT	3350	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	819	3351
// OP_LOAD_F	3069	251	3352
// OP_MUL_F	1130	113	3353
// OP_LT	3352	3353	3354
// OP_AND	3351	3354	3355
// OP_IFNOT	3355	2	0
// OP_RETURN	813	0	0
// OP_EQ_F	3070	619	3356
// OP_IFNOT	3356	27	0
// OP_LOAD_F	3069	247	3357
// OP_MUL_F	1203	113	3358
// OP_GT	3357	3358	3359
// OP_IFNOT	3359	4	0
// OP_ADDRESS	3069	247	3360
// OP_MUL_F	1203	113	3361
// OP_STOREP_F	3361	3360	0
// OP_LOAD_F	3069	245	3362
// OP_GT	3362	3338	3363
// OP_IFNOT	3363	3	0
// OP_ADDRESS	3069	245	3364
// OP_STOREP_F	3338	3364	0
// OP_LOAD_F	3069	248	3365
// OP_MUL_F	816	113	3366
// OP_GT	3365	3366	3367
// OP_IFNOT	3367	4	0
// OP_ADDRESS	3069	248	3368
// OP_MUL_F	816	113	3369
// OP_STOREP_F	3369	3368	0
// OP_LOAD_F	3069	251	3370
// OP_MUL_F	1130	113	3371
// OP_GT	3370	3371	3372
// OP_IFNOT	3372	4	0
// OP_ADDRESS	3069	251	3373
// OP_MUL_F	1130	113	3374
// OP_STOREP_F	3374	3373	0
// OP_GOTO	118	0	0
// OP_LOAD_F	3069	404	3375
// OP_EQ_F	3375	824	3376
// OP_IFNOT	3376	57	0
// OP_EQ_F	3070	677	3377
// OP_LOAD_F	3069	245	3378
// OP_LT	3378	3338	3379
// OP_AND	3377	3379	3380
// OP_IFNOT	3380	2	0
// OP_RETURN	1111	0	0
// OP_EQ_F	3070	808	3381
// OP_LOAD_F	3069	248	3382
// OP_MUL_F	810	113	3383
// OP_LT	3382	3383	3384
// OP_AND	3381	3384	3385
// OP_IFNOT	3385	2	0
// OP_RETURN	806	0	0
// OP_EQ_F	3070	816	3386
// OP_LOAD_F	3069	250	3387
// OP_MUL_F	806	113	3388
// OP_LT	3387	3388	3389
// OP_AND	3386	3389	3390
// OP_IFNOT	3390	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	810	3391
// OP_LOAD_F	3069	252	3392
// OP_MUL_F	816	113	3393
// OP_LT	3392	3393	3394
// OP_AND	3391	3394	3395
// OP_IFNOT	3395	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	619	3396
// OP_IFNOT	3396	27	0
// OP_LOAD_F	3069	245	3397
// OP_GT	3397	3338	3398
// OP_IFNOT	3398	3	0
// OP_ADDRESS	3069	245	3399
// OP_STOREP_F	3338	3399	0
// OP_LOAD_F	3069	248	3400
// OP_MUL_F	810	113	3401
// OP_GT	3400	3401	3402
// OP_IFNOT	3402	4	0
// OP_ADDRESS	3069	248	3403
// OP_MUL_F	810	113	3404
// OP_STOREP_F	3404	3403	0
// OP_LOAD_F	3069	250	3405
// OP_MUL_F	806	113	3406
// OP_GT	3405	3406	3407
// OP_IFNOT	3407	4	0
// OP_ADDRESS	3069	250	3408
// OP_MUL_F	806	113	3409
// OP_STOREP_F	3409	3408	0
// OP_LOAD_F	3069	252	3410
// OP_MUL_F	816	113	3411
// OP_GT	3410	3411	3412
// OP_IFNOT	3412	4	0
// OP_ADDRESS	3069	252	3413
// OP_MUL_F	816	113	3414
// OP_STOREP_F	3414	3413	0
// OP_GOTO	59	0	0
// OP_LOAD_F	3069	404	3415
// OP_EQ_F	3415	827	3416
// OP_IFNOT	3416	56	0
// OP_EQ_F	3070	677	3417
// OP_LOAD_F	3069	245	3418
// OP_LT	3418	2618	3419
// OP_AND	3417	3419	3420
// OP_IFNOT	3420	2	0
// OP_RETURN	1111	0	0
// OP_EQ_F	3070	806	3421
// OP_LOAD_F	3069	246	3422
// OP_MUL_F	827	113	3423
// OP_LT	3422	3423	3424
// OP_AND	3421	3424	3425
// OP_IFNOT	3425	2	0
// OP_RETURN	806	0	0
// OP_EQ_F	3070	813	3426
// OP_LOAD_F	3069	249	3427
// OP_MUL_F	816	113	3428
// OP_LT	3427	3428	3429
// OP_AND	3426	3429	3430
// OP_IFNOT	3430	2	0
// OP_RETURN	677	0	0
// OP_EQ_F	3070	819	3431
// OP_LOAD_F	3069	251	3432
// OP_MUL_F	1155	113	3433
// OP_LT	3432	3433	3434
// OP_AND	3431	3434	3435
// OP_IFNOT	3435	2	0
// OP_RETURN	810	0	0
// OP_EQ_F	3070	619	3436
// OP_IFNOT	3436	27	0
// OP_LOAD_F	3069	245	3437
// OP_GT	3437	2618	3438
// OP_IFNOT	3438	3	0
// OP_ADDRESS	3069	245	3439
// OP_STOREP_F	2618	3439	0
// OP_LOAD_F	3069	246	3440
// OP_MUL_F	827	113	3441
// OP_GT	3440	3441	3442
// OP_IFNOT	3442	4	0
// OP_ADDRESS	3069	246	3443
// OP_MUL_F	827	113	3444
// OP_STOREP_F	3444	3443	0
// OP_LOAD_F	3069	249	3445
// OP_MUL_F	816	113	3446
// OP_GT	3445	3446	3447
// OP_IFNOT	3447	4	0
// OP_ADDRESS	3069	249	3448
// OP_MUL_F	816	113	3449
// OP_STOREP_F	3449	3448	0
// OP_LOAD_F	3069	251	3450
// OP_MUL_F	1155	113	3451
// OP_GT	3450	3451	3452
// OP_IFNOT	3452	4	0
// OP_ADDRESS	3069	251	3453
// OP_MUL_F	1155	113	3454
// OP_STOREP_F	3454	3453	0
// OP_RETURN	619	0	0
// OP_DONE	0	0	0
float (entity e, float atype) check_ammo = 
{
    
    if(e.classname != "player")
    {
        return 0.000;
    }
    
    if(e.style == 1.000)
    {
        
        if((atype == 1.000) && (e.ammo_auto < 200.000))
        {
            return 40.000;
        }
        
        
        if((atype == 2.000) && (e.ammo_rock < (10.000 * wepmulti)))
        {
            return 2.000;
        }
        
        
        if((atype == 4.000) && (e.ammo_amsl < (4.000 * wepmulti)))
        {
            return 1.000;
        }
        
        
        if((atype == 5.000) && (e.ammo_smsl < (4.000 * wepmulti)))
        {
            return 1.000;
        }
        
        
        if(atype == 0.000)
        {
            
            if(e.ammo_rock > (10.000 * wepmulti))
            {
                e.ammo_rock = 10.000 * wepmulti;
            }
            
            
            if(e.ammo_auto > 200.000)
            {
                e.ammo_auto = 200.000;
            }
            
            
            if(e.ammo_amsl > (4.000 * wepmulti))
            {
                e.ammo_amsl = 4.000 * wepmulti;
            }
            
            
            if(e.ammo_smsl > (4.000 * wepmulti))
            {
                e.ammo_smsl = 4.000 * wepmulti;
            }
            
        }
        
    }
    else
    {
        if(e.style == 2.000)
        {
            
            if((atype == 1.000) && (e.ammo_auto < 100.000))
            {
                return 10.000;
            }
            
            
            if((atype == 4.000) && (e.ammo_amsl < (4.000 * wepmulti)))
            {
                return 1.000;
            }
            
            
            if((atype == 5.000) && (e.ammo_smsl < (4.000 * wepmulti)))
            {
                return 1.000;
            }
            
            
            if((atype == 6.000) && (e.ammo_bomb < (4.000 * wepmulti)))
            {
                return 1.000;
            }
            
            
            if(atype == 0.000)
            {
                
                if(e.ammo_auto > 100.000)
                {
                    e.ammo_auto = 100.000;
                }
                
                
                if(e.ammo_amsl > (4.000 * wepmulti))
                {
                    e.ammo_amsl = 4.000 * wepmulti;
                }
                
                
                if(e.ammo_smsl > (4.000 * wepmulti))
                {
                    e.ammo_smsl = 4.000 * wepmulti;
                }
                
                
                if(e.ammo_bomb > (4.000 * wepmulti))
                {
                    e.ammo_bomb = 4.000 * wepmulti;
                }
                
            }
            
        }
        else
        {
            if(e.style == 3.000)
            {
                
                if((atype == 1.000) && (e.ammo_auto < 100.000))
                {
                    return 10.000;
                }
                
                
                if((atype == 4.000) && (e.ammo_amsl < (4.000 * wepmulti)))
                {
                    return 1.000;
                }
                
                
                if((atype == 5.000) && (e.ammo_smsl < (4.000 * wepmulti)))
                {
                    return 1.000;
                }
                
                
                if((atype == 6.000) && (e.ammo_bomb < (4.000 * wepmulti)))
                {
                    return 1.000;
                }
                
                
                if(atype == 0.000)
                {
                    
                    if(e.ammo_auto > 100.000)
                    {
                        e.ammo_auto = 100.000;
                    }
                    
                    
                    if(e.ammo_amsl > (4.000 * wepmulti))
                    {
                        e.ammo_amsl = 4.000 * wepmulti;
                    }
                    
                    
                    if(e.ammo_smsl > (4.000 * wepmulti))
                    {
                        e.ammo_smsl = 4.000 * wepmulti;
                    }
                    
                    
                    if(e.ammo_bomb > (4.000 * wepmulti))
                    {
                        e.ammo_bomb = 4.000 * wepmulti;
                    }
                    
                }
                
            }
            else
            {
                if(e.style == 4.000)
                {
                    
                    if((atype == 1.000) && (e.ammo_auto < 100.000))
                    {
                        return 10.000;
                    }
                    
                    
                    if((atype == 4.000) && (e.ammo_amsl < (2.000 * wepmulti)))
                    {
                        return 1.000;
                    }
                    
                    
                    if((atype == 5.000) && (e.ammo_smsl < (6.000 * wepmulti)))
                    {
                        return 1.000;
                    }
                    
                    
                    if((atype == 6.000) && (e.ammo_bomb < (6.000 * wepmulti)))
                    {
                        return 1.000;
                    }
                    
                    
                    if(atype == 0.000)
                    {
                        
                        if(e.ammo_auto > 100.000)
                        {
                            e.ammo_auto = 100.000;
                        }
                        
                        
                        if(e.ammo_amsl > (2.000 * wepmulti))
                        {
                            e.ammo_amsl = 2.000 * wepmulti;
                        }
                        
                        
                        if(e.ammo_smsl > (6.000 * wepmulti))
                        {
                            e.ammo_smsl = 6.000 * wepmulti;
                        }
                        
                        
                        if(e.ammo_bomb > (6.000 * wepmulti))
                        {
                            e.ammo_bomb = 6.000 * wepmulti;
                        }
                        
                    }
                    
                }
                else
                {
                    if(e.style == 5.000)
                    {
                        
                        if((atype == 1.000) && (e.ammo_auto < 130.000))
                        {
                            return 20.000;
                        }
                        
                        
                        if((atype == 2.000) && (e.ammo_rock < (8.000 * wepmulti)))
                        {
                            return 2.000;
                        }
                        
                        
                        if((atype == 4.000) && (e.ammo_amsl < (4.000 * wepmulti)))
                        {
                            return 1.000;
                        }
                        
                        
                        if((atype == 7.000) && (e.ammo_cell < (40.000 * wepmulti)))
                        {
                            return 8.000;
                        }
                        
                        
                        if(atype == 0.000)
                        {
                            
                            if(e.ammo_auto > 130.000)
                            {
                                e.ammo_auto = 130.000;
                            }
                            
                            
                            if(e.ammo_rock > (8.000 * wepmulti))
                            {
                                e.ammo_rock = 8.000 * wepmulti;
                            }
                            
                            
                            if(e.ammo_amsl > (4.000 * wepmulti))
                            {
                                e.ammo_amsl = 4.000 * wepmulti;
                            }
                            
                            
                            if(e.ammo_cell > (40.000 * wepmulti))
                            {
                                e.ammo_cell = 40.000 * wepmulti;
                            }
                            
                        }
                        
                    }
                    else
                    {
                        if(e.style == 6.000)
                        {
                            
                            if((atype == 1.000) && (e.ammo_auto < 100.000))
                            {
                                return 10.000;
                            }
                            
                            
                            if((atype == 2.000) && (e.ammo_rock < (16.000 * wepmulti)))
                            {
                                return 4.000;
                            }
                            
                            
                            if((atype == 4.000) && (e.ammo_amsl < (4.000 * wepmulti)))
                            {
                                return 1.000;
                            }
                            
                            
                            if((atype == 5.000) && (e.ammo_smsl < (4.000 * wepmulti)))
                            {
                                return 1.000;
                            }
                            
                            
                            if(atype == 0.000)
                            {
                                
                                if(e.ammo_rock > (16.000 * wepmulti))
                                {
                                    e.ammo_rock = 16.000 * wepmulti;
                                }
                                
                                
                                if(e.ammo_auto > 100.000)
                                {
                                    e.ammo_auto = 100.000;
                                }
                                
                                
                                if(e.ammo_amsl > (4.000 * wepmulti))
                                {
                                    e.ammo_amsl = 4.000 * wepmulti;
                                }
                                
                                
                                if(e.ammo_smsl > (4.000 * wepmulti))
                                {
                                    e.ammo_smsl = 4.000 * wepmulti;
                                }
                                
                            }
                            
                        }
                        else
                        {
                            if(e.style == 7.000)
                            {
                                
                                if((atype == 1.000) && (e.ammo_auto < 200.000))
                                {
                                    return 40.000;
                                }
                                
                                
                                if((atype == 4.000) && (e.ammo_amsl < (16.000 * wepmulti)))
                                {
                                    return 4.000;
                                }
                                
                                
                                if(atype == 0.000)
                                {
                                    
                                    if(e.ammo_auto > 200.000)
                                    {
                                        e.ammo_auto = 200.000;
                                    }
                                    
                                    
                                    if(e.ammo_amsl > (16.000 * wepmulti))
                                    {
                                        e.ammo_amsl = 16.000 * wepmulti;
                                    }
                                    
                                }
                                
                            }
                            else
                            {
                                if(e.style == 8.000)
                                {
                                    
                                    if((atype == 1.000) && (e.ammo_auto < 150.000))
                                    {
                                        return 20.000;
                                    }
                                    
                                    
                                    if((atype == 3.000) && (e.ammo_shel < (60.000 * wepmulti)))
                                    {
                                        return 10.000;
                                    }
                                    
                                    
                                    if((atype == 4.000) && (e.ammo_amsl < (6.000 * wepmulti)))
                                    {
                                        return 1.000;
                                    }
                                    
                                    
                                    if((atype == 7.000) && (e.ammo_cell < (30.000 * wepmulti)))
                                    {
                                        return 5.000;
                                    }
                                    
                                    
                                    if(atype == 0.000)
                                    {
                                        
                                        if(e.ammo_shel > (60.000 * wepmulti))
                                        {
                                            e.ammo_shel = 60.000 * wepmulti;
                                        }
                                        
                                        
                                        if(e.ammo_auto > 150.000)
                                        {
                                            e.ammo_auto = 150.000;
                                        }
                                        
                                        
                                        if(e.ammo_amsl > (6.000 * wepmulti))
                                        {
                                            e.ammo_amsl = 6.000 * wepmulti;
                                        }
                                        
                                        
                                        if(e.ammo_cell > (30.000 * wepmulti))
                                        {
                                            e.ammo_cell = 30.000 * wepmulti;
                                        }
                                        
                                    }
                                    
                                }
                                else
                                {
                                    if(e.style == 9.000)
                                    {
                                        
                                        if((atype == 1.000) && (e.ammo_auto < 150.000))
                                        {
                                            return 20.000;
                                        }
                                        
                                        
                                        if((atype == 4.000) && (e.ammo_amsl < (8.000 * wepmulti)))
                                        {
                                            return 2.000;
                                        }
                                        
                                        
                                        if((atype == 6.000) && (e.ammo_bomb < (2.000 * wepmulti)))
                                        {
                                            return 1.000;
                                        }
                                        
                                        
                                        if((atype == 8.000) && (e.ammo_mine < (6.000 * wepmulti)))
                                        {
                                            return 1.000;
                                        }
                                        
                                        
                                        if(atype == 0.000)
                                        {
                                            
                                            if(e.ammo_auto > 150.000)
                                            {
                                                e.ammo_auto = 150.000;
                                            }
                                            
                                            
                                            if(e.ammo_amsl > (8.000 * wepmulti))
                                            {
                                                e.ammo_amsl = 8.000 * wepmulti;
                                            }
                                            
                                            
                                            if(e.ammo_bomb > (2.000 * wepmulti))
                                            {
                                                e.ammo_bomb = 2.000 * wepmulti;
                                            }
                                            
                                            
                                            if(e.ammo_mine > (6.000 * wepmulti))
                                            {
                                                e.ammo_mine = 6.000 * wepmulti;
                                            }
                                            
                                        }
                                        
                                    }
                                    else
                                    {
                                        
                                        if(e.style == 10.000)
                                        {
                                            
                                            if((atype == 1.000) && (e.ammo_auto < 100.000))
                                            {
                                                return 20.000;
                                            }
                                            
                                            
                                            if((atype == 2.000) && (e.ammo_rock < (10.000 * wepmulti)))
                                            {
                                                return 2.000;
                                            }
                                            
                                            
                                            if((atype == 5.000) && (e.ammo_smsl < (6.000 * wepmulti)))
                                            {
                                                return 1.000;
                                            }
                                            
                                            
                                            if((atype == 7.000) && (e.ammo_cell < (40.000 * wepmulti)))
                                            {
                                                return 8.000;
                                            }
                                            
                                            
                                            if(atype == 0.000)
                                            {
                                                
                                                if(e.ammo_auto > 100.000)
                                                {
                                                    e.ammo_auto = 100.000;
                                                }
                                                
                                                
                                                if(e.ammo_rock > (10.000 * wepmulti))
                                                {
                                                    e.ammo_rock = 10.000 * wepmulti;
                                                }
                                                
                                                
                                                if(e.ammo_smsl > (6.000 * wepmulti))
                                                {
                                                    e.ammo_smsl = 6.000 * wepmulti;
                                                }
                                                
                                                
                                                if(e.ammo_cell > (40.000 * wepmulti))
                                                {
                                                    e.ammo_cell = 40.000 * wepmulti;
                                                }
                                                
                                            }
                                            
                                        }
                                        
                                    }
                                    
                                }
                                
                            }
                            
                        }
                        
                    }
                    
                }
                
            }
            
        }
        
    }
    
    return 0.000;
};

// SUB_regen
// function begins at statement 3912, parm_start=3456
// OP_ADDRESS	28	155	3456
// OP_LOAD_S	28	443	3457
// OP_STOREP_S	3457	3456	0
// OP_ADDRESS	28	129	3458
// OP_STOREP_F	292	3458	0
// OP_STORE_V	28	4	0
// OP_STORE_V	371	7	0
// OP_STORE_V	3459	10	0
// OP_STORE_V	677	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_STORE_V	28	4	0
// OP_LOAD_V	28	130	3460
// OP_STORE_V	3460	7	0
// OP_CALL2	497	0	0
// OP_DONE	0	0	0
void () SUB_regen = 
{
    self.model = self.mdl;
    self.solid = SOLID_TRIGGER;
    sound(self, CHAN_VOICE, "items/itembk2.wav", 1.000, ATTN_NORM);
    setorigin(self, self.origin);
};

// ACPlaceItem
// function begins at statement 3928, parm_start=3464
// OP_ADDRESS	28	443	3465
// OP_LOAD_S	28	155	3466
// OP_STOREP_S	3466	3465	0
// OP_ADDRESS	28	207	3467
// OP_STOREP_F	276	3467	0
// OP_ADDRESS	28	129	3468
// OP_STOREP_F	292	3468	0
// OP_ADDRESS	28	128	3469
// OP_STOREP_F	284	3469	0
// OP_ADDRESS	28	138	3470
// OP_STOREP_V	607	3470	0
// OP_DONE	0	0	0
void () ACPlaceItem = 
{
    local float oldz;
    self.mdl = self.model;
    self.flags = FL_ITEM;
    self.solid = SOLID_TRIGGER;
    self.movetype = MOVETYPE_FLY;
    self.velocity = '0.000 0.000 0.000';
};

// ACStartItem
// function begins at statement 3940, parm_start=3474
// OP_ADDRESS	28	175	3474
// OP_ADD_F	31	1349	3475
// OP_STOREP_F	3475	3474	0
// OP_ADDRESS	28	173	3476
// OP_STOREP_FNC	3463	3476	0
// OP_DONE	0	0	0
void () ACStartItem = 
{
    self.nextthink = time + 0.200;
    self.think = ACPlaceItem;
};

// ACammo_touch
// function begins at statement 3946, parm_start=3478
// OP_LOAD_ENT	29	226	3481
// OP_LOAD_S	3481	154	3482
// OP_NE_S	3482	766	3483
// OP_IFNOT	3483	2	0
// OP_RETURN	0	0	0
// OP_LOAD_F	29	177	3484
// OP_LE	3484	619	3485
// OP_IFNOT	3485	2	0
// OP_RETURN	0	0	0
// OP_LOAD_ENT	29	219	3486
// OP_STORE_ENT	3486	3479	0
// OP_STORE_ENT	28	3478	0
// OP_STORE_V	3479	4	0
// OP_LOAD_F	28	179	3487
// OP_STORE_V	3487	7	0
// OP_CALL2	2369	0	0
// OP_NOT_F	1	0	3488
// OP_IFNOT	3488	2	0
// OP_RETURN	0	0	0
// OP_LOAD_F	28	179	3489
// OP_EQ_F	3489	677	3490
// OP_IFNOT	3490	7	0
// OP_ADDRESS	3479	245	3491
// OP_LOAD_F	3479	245	3492
// OP_LOAD_F	28	468	3493
// OP_MUL_F	3493	113	3494
// OP_ADD_F	3492	3494	3495
// OP_STOREP_F	3495	3491	0
// OP_LOAD_F	28	179	3496
// OP_EQ_F	3496	806	3497
// OP_IFNOT	3497	7	0
// OP_ADDRESS	3479	246	3498
// OP_LOAD_F	3479	246	3499
// OP_LOAD_F	28	468	3500
// OP_MUL_F	3500	113	3501
// OP_ADD_F	3499	3501	3502
// OP_STOREP_F	3502	3498	0
// OP_LOAD_F	28	179	3503
// OP_EQ_F	3503	788	3504
// OP_IFNOT	3504	7	0
// OP_ADDRESS	3479	247	3505
// OP_LOAD_F	3479	247	3506
// OP_LOAD_F	28	468	3507
// OP_MUL_F	3507	113	3508
// OP_ADD_F	3506	3508	3509
// OP_STOREP_F	3509	3505	0
// OP_LOAD_F	28	179	3510
// OP_EQ_F	3510	808	3511
// OP_IFNOT	3511	7	0
// OP_ADDRESS	3479	248	3512
// OP_LOAD_F	3479	248	3513
// OP_LOAD_F	28	468	3514
// OP_MUL_F	3514	113	3515
// OP_ADD_F	3513	3515	3516
// OP_STOREP_F	3516	3512	0
// OP_LOAD_F	28	179	3517
// OP_EQ_F	3517	813	3518
// OP_IFNOT	3518	7	0
// OP_ADDRESS	3479	249	3519
// OP_LOAD_F	3479	249	3520
// OP_LOAD_F	28	468	3521
// OP_MUL_F	3521	113	3522
// OP_ADD_F	3520	3522	3523
// OP_STOREP_F	3523	3519	0
// OP_LOAD_F	28	179	3524
// OP_EQ_F	3524	816	3525
// OP_IFNOT	3525	7	0
// OP_ADDRESS	3479	250	3526
// OP_LOAD_F	3479	250	3527
// OP_LOAD_F	28	468	3528
// OP_MUL_F	3528	113	3529
// OP_ADD_F	3527	3529	3530
// OP_STOREP_F	3530	3526	0
// OP_LOAD_F	28	179	3531
// OP_EQ_F	3531	819	3532
// OP_IFNOT	3532	7	0
// OP_ADDRESS	3479	251	3533
// OP_LOAD_F	3479	251	3534
// OP_LOAD_F	28	468	3535
// OP_MUL_F	3535	113	3536
// OP_ADD_F	3534	3536	3537
// OP_STOREP_F	3537	3533	0
// OP_LOAD_F	28	179	3538
// OP_EQ_F	3538	810	3539
// OP_IFNOT	3539	7	0
// OP_ADDRESS	3479	252	3540
// OP_LOAD_F	3479	252	3541
// OP_LOAD_F	28	468	3542
// OP_MUL_F	3542	113	3543
// OP_ADD_F	3541	3543	3544
// OP_STOREP_F	3544	3540	0
// OP_STORE_V	3479	4	0
// OP_STORE_V	619	7	0
// OP_CALL2	2369	0	0
// OP_STORE_V	3479	4	0
// OP_STORE_V	3545	7	0
// OP_CALL2	518	0	0
// OP_STORE_V	3479	4	0
// OP_LOAD_S	28	205	3546
// OP_STORE_V	3546	7	0
// OP_CALL2	518	0	0
// OP_STORE_V	3479	4	0
// OP_STORE_V	2073	7	0
// OP_CALL2	518	0	0
// OP_STORE_V	29	4	0
// OP_STORE_V	372	7	0
// OP_STORE_V	3547	10	0
// OP_STORE_V	677	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_STORE_V	3479	4	0
// OP_STORE_V	3548	7	0
// OP_CALL2	515	0	0
// OP_STORE_ENT	28	3478	0
// OP_STORE_ENT	3479	28	0
// OP_CALL0	2769	0	0
// OP_STORE_ENT	3478	28	0
// OP_ADDRESS	28	155	3549
// OP_STOREP_S	392	3549	0
// OP_ADDRESS	28	129	3550
// OP_STOREP_F	291	3550	0
// OP_IFNOT	35	4	0
// OP_ADDRESS	28	175	3551
// OP_ADD_F	31	1130	3552
// OP_STOREP_F	3552	3551	0
// OP_ADDRESS	28	173	3553
// OP_STOREP_FNC	3455	3553	0
// OP_STORE_ENT	29	395	0
// OP_CALL0	567	0	0
// OP_DONE	0	0	0
void () ACammo_touch = 
{
    local entity stemp;
    local entity pler;
    local float best;
    
    if(other.owner.classname != "player")
    {
        return;
    }
    
    
    if(other.health <= 0.000)
    {
        return;
    }
    
    pler = other.goalentity;
    stemp = self;
    
    if(!check_ammo(pler, self.weapon))
    {
        return;
    }
    
    
    if(self.weapon == 1.000)
    {
        pler.ammo_auto = pler.ammo_auto + (self.aflag * wepmulti);
    }
    
    
    if(self.weapon == 2.000)
    {
        pler.ammo_rock = pler.ammo_rock + (self.aflag * wepmulti);
    }
    
    
    if(self.weapon == 3.000)
    {
        pler.ammo_shel = pler.ammo_shel + (self.aflag * wepmulti);
    }
    
    
    if(self.weapon == 4.000)
    {
        pler.ammo_amsl = pler.ammo_amsl + (self.aflag * wepmulti);
    }
    
    
    if(self.weapon == 5.000)
    {
        pler.ammo_smsl = pler.ammo_smsl + (self.aflag * wepmulti);
    }
    
    
    if(self.weapon == 6.000)
    {
        pler.ammo_bomb = pler.ammo_bomb + (self.aflag * wepmulti);
    }
    
    
    if(self.weapon == 7.000)
    {
        pler.ammo_cell = pler.ammo_cell + (self.aflag * wepmulti);
    }
    
    
    if(self.weapon == 8.000)
    {
        pler.ammo_mine = pler.ammo_mine + (self.aflag * wepmulti);
    }
    
    check_ammo(pler, 0.000);
    sprint(pler, "You got the ");
    sprint(pler, self.netname);
    sprint(pler, "\n");
    sound(other, CHAN_ITEM, "weapons/lock4.wav", 1.000, ATTN_NORM);
    stuffcmd(pler, "bf\n");
    stemp = self;
    self = pler;
    W_SetCurrentAmmo();
    self = stemp;
    self.model = string_null;
    self.solid = SOLID_NOT;
    
    if(deathmatch)
    {
        self.nextthink = time + 30.000;
    }
    
    self.think = SUB_regen;
    activator = other;
    SUB_UseTargets();
};

// item_spikes
// function begins at statement 4076, parm_start=3555
// OP_ADDRESS	28	171	3555
// OP_STOREP_FNC	3477	3555	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3556	7	0
// OP_CALL2	498	0	0
// OP_ADDRESS	28	468	3557
// OP_STOREP_F	856	3557	0
// OP_ADDRESS	28	157	3558
// OP_STOREP_F	619	3558	0
// OP_ADDRESS	28	179	3559
// OP_STOREP_F	677	3559	0
// OP_ADDRESS	28	205	3560
// OP_STOREP_S	3561	3560	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3562	7	0
// OP_STORE_V	3565	10	0
// OP_CALL3	499	0	0
// OP_CALL0	3473	0	0
// OP_DONE	0	0	0
void () item_spikes = 
{
    self.touch = ACammo_touch;
    setmodel(self, "progs/box1.mdl");
    self.aflag = 50.000;
    self.skin = 0.000;
    self.weapon = 1.000;
    self.netname = "nails";
    setsize(self, '-16.000 -16.000 -16.000', '16.000 16.000 16.000');
    ACStartItem();
};

// item_shells
// function begins at statement 4095, parm_start=3569
// OP_ADDRESS	28	171	3569
// OP_STOREP_FNC	3477	3569	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3556	7	0
// OP_CALL2	498	0	0
// OP_ADDRESS	28	468	3570
// OP_STOREP_F	810	3570	0
// OP_ADDRESS	28	157	3571
// OP_STOREP_F	806	3571	0
// OP_ADDRESS	28	179	3572
// OP_STOREP_F	806	3572	0
// OP_ADDRESS	28	205	3573
// OP_STOREP_S	3574	3573	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3562	7	0
// OP_STORE_V	3565	10	0
// OP_CALL3	499	0	0
// OP_CALL0	3473	0	0
// OP_DONE	0	0	0
void () item_shells = 
{
    self.touch = ACammo_touch;
    setmodel(self, "progs/box1.mdl");
    self.aflag = 8.000;
    self.skin = 2.000;
    self.weapon = 2.000;
    self.netname = "rockets";
    setsize(self, '-16.000 -16.000 -16.000', '16.000 16.000 16.000');
    ACStartItem();
};

// item_canshells
// function begins at statement 4114, parm_start=3576
// OP_ADDRESS	28	171	3576
// OP_STOREP_FNC	3477	3576	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3556	7	0
// OP_CALL2	498	0	0
// OP_ADDRESS	28	468	3577
// OP_STOREP_F	1111	3577	0
// OP_ADDRESS	28	157	3578
// OP_STOREP_F	813	3578	0
// OP_ADDRESS	28	179	3579
// OP_STOREP_F	788	3579	0
// OP_ADDRESS	28	205	3580
// OP_STOREP_S	3581	3580	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3562	7	0
// OP_STORE_V	3565	10	0
// OP_CALL3	499	0	0
// OP_CALL0	3473	0	0
// OP_DONE	0	0	0
void () item_canshells = 
{
    self.touch = ACammo_touch;
    setmodel(self, "progs/box1.mdl");
    self.aflag = 20.000;
    self.skin = 5.000;
    self.weapon = 3.000;
    self.netname = "shells";
    setsize(self, '-16.000 -16.000 -16.000', '16.000 16.000 16.000');
    ACStartItem();
};

// item_rockets
// function begins at statement 4133, parm_start=3583
// OP_ADDRESS	28	171	3583
// OP_STOREP_FNC	3477	3583	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3556	7	0
// OP_CALL2	498	0	0
// OP_ADDRESS	28	468	3584
// OP_STOREP_F	808	3584	0
// OP_ADDRESS	28	157	3585
// OP_STOREP_F	677	3585	0
// OP_ADDRESS	28	179	3586
// OP_STOREP_F	808	3586	0
// OP_ADDRESS	28	205	3587
// OP_STOREP_S	3588	3587	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3562	7	0
// OP_STORE_V	3565	10	0
// OP_CALL3	499	0	0
// OP_CALL0	3473	0	0
// OP_DONE	0	0	0
void () item_rockets = 
{
    self.touch = ACammo_touch;
    setmodel(self, "progs/box1.mdl");
    self.aflag = 4.000;
    self.skin = 1.000;
    self.weapon = 4.000;
    self.netname = "missiles";
    setsize(self, '-16.000 -16.000 -16.000', '16.000 16.000 16.000');
    ACStartItem();
};

// item_mavericks
// function begins at statement 4152, parm_start=3590
// OP_ADDRESS	28	171	3590
// OP_STOREP_FNC	3477	3590	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3591	7	0
// OP_CALL2	498	0	0
// OP_ADDRESS	28	468	3592
// OP_STOREP_F	806	3592	0
// OP_ADDRESS	28	179	3593
// OP_STOREP_F	813	3593	0
// OP_ADDRESS	28	205	3594
// OP_STOREP_S	3595	3594	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3562	7	0
// OP_STORE_V	3565	10	0
// OP_CALL3	499	0	0
// OP_ADDRESS	28	146	3596
// OP_STOREP_V	3599	3596	0
// OP_CALL0	3473	0	0
// OP_DONE	0	0	0
void () item_mavericks = 
{
    self.touch = ACammo_touch;
    setmodel(self, "progs/imaver.mdl");
    self.aflag = 2.000;
    self.weapon = 5.000;
    self.netname = "AS missiles";
    setsize(self, '-16.000 -16.000 -16.000', '16.000 16.000 16.000');
    self.avelocity = '0.000 180.000 200.000';
    ACStartItem();
};

// item_bombs
// function begins at statement 4171, parm_start=3603
// OP_ADDRESS	28	171	3603
// OP_STOREP_FNC	3477	3603	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3604	7	0
// OP_CALL2	498	0	0
// OP_ADDRESS	28	468	3605
// OP_STOREP_F	806	3605	0
// OP_ADDRESS	28	157	3606
// OP_STOREP_F	619	3606	0
// OP_ADDRESS	28	179	3607
// OP_STOREP_F	816	3607	0
// OP_ADDRESS	28	205	3608
// OP_STOREP_S	3609	3608	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3562	7	0
// OP_STORE_V	3565	10	0
// OP_CALL3	499	0	0
// OP_ADDRESS	28	146	3610
// OP_STOREP_V	3599	3610	0
// OP_CALL0	3473	0	0
// OP_DONE	0	0	0
void () item_bombs = 
{
    self.touch = ACammo_touch;
    setmodel(self, "progs/bomb.mdl");
    self.aflag = 2.000;
    self.skin = 0.000;
    self.weapon = 6.000;
    self.netname = "bombs";
    setsize(self, '-16.000 -16.000 -16.000', '16.000 16.000 16.000');
    self.avelocity = '0.000 180.000 200.000';
    ACStartItem();
};

// item_cells
// function begins at statement 4192, parm_start=3614
// OP_ADDRESS	28	171	3614
// OP_STOREP_FNC	3477	3614	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3556	7	0
// OP_CALL2	498	0	0
// OP_ADDRESS	28	468	3615
// OP_STOREP_F	1111	3615	0
// OP_ADDRESS	28	157	3616
// OP_STOREP_F	788	3616	0
// OP_ADDRESS	28	179	3617
// OP_STOREP_F	819	3617	0
// OP_ADDRESS	28	205	3618
// OP_STOREP_S	3619	3618	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3562	7	0
// OP_STORE_V	3565	10	0
// OP_CALL3	499	0	0
// OP_CALL0	3473	0	0
// OP_DONE	0	0	0
void () item_cells = 
{
    self.touch = ACammo_touch;
    setmodel(self, "progs/box1.mdl");
    self.aflag = 20.000;
    self.skin = 3.000;
    self.weapon = 7.000;
    self.netname = "cells";
    setsize(self, '-16.000 -16.000 -16.000', '16.000 16.000 16.000');
    ACStartItem();
};

// item_mines
// function begins at statement 4211, parm_start=3621
// OP_ADDRESS	28	171	3621
// OP_STOREP_FNC	3477	3621	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3622	7	0
// OP_CALL2	498	0	0
// OP_ADDRESS	28	468	3623
// OP_STOREP_F	788	3623	0
// OP_ADDRESS	28	157	3624
// OP_STOREP_F	619	3624	0
// OP_ADDRESS	28	179	3625
// OP_STOREP_F	810	3625	0
// OP_ADDRESS	28	205	3626
// OP_STOREP_S	3627	3626	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3562	7	0
// OP_STORE_V	3565	10	0
// OP_CALL3	499	0	0
// OP_ADDRESS	28	146	3628
// OP_STOREP_V	3631	3628	0
// OP_CALL0	3473	0	0
// OP_DONE	0	0	0
void () item_mines = 
{
    self.touch = ACammo_touch;
    setmodel(self, "progs/mine.mdl");
    self.aflag = 3.000;
    self.skin = 0.000;
    self.weapon = 8.000;
    self.netname = "mines";
    setsize(self, '-16.000 -16.000 -16.000', '16.000 16.000 16.000');
    self.avelocity = '100.000 100.000 100.000';
    ACStartItem();
};

// health_touch
// function begins at statement 4232, parm_start=3635
// OP_LOAD_ENT	29	226	3637
// OP_LOAD_S	3637	154	3638
// OP_NE_S	3638	766	3639
// OP_IFNOT	3639	2	0
// OP_RETURN	0	0	0
// OP_LOAD_ENT	29	226	3640
// OP_LOAD_ENT	3640	206	3641
// OP_NE_E	3641	29	3642
// OP_IFNOT	3642	2	0
// OP_RETURN	0	0	0
// OP_LOAD_F	29	177	3643
// OP_LOAD_F	29	210	3644
// OP_GE	3643	3644	3645
// OP_IFNOT	3645	2	0
// OP_RETURN	0	0	0
// OP_ADDRESS	29	177	3646
// OP_LOAD_F	29	177	3647
// OP_LOAD_F	29	210	3648
// OP_MUL_F	3648	3649	3650
// OP_STORE_V	3650	4	0
// OP_CALL1	530	0	0
// OP_ADD_F	3647	1	3651
// OP_STOREP_F	3651	3646	0
// OP_LOAD_F	29	177	3652
// OP_LOAD_F	29	210	3653
// OP_GT	3652	3653	3654
// OP_IFNOT	3654	4	0
// OP_ADDRESS	29	177	3655
// OP_LOAD_F	29	210	3656
// OP_STOREP_F	3656	3655	0
// OP_LOAD_ENT	29	226	3657
// OP_STORE_V	3657	4	0
// OP_STORE_V	3545	7	0
// OP_CALL2	518	0	0
// OP_LOAD_ENT	29	226	3658
// OP_STORE_V	3658	4	0
// OP_LOAD_S	28	205	3659
// OP_STORE_V	3659	7	0
// OP_CALL2	518	0	0
// OP_LOAD_ENT	29	226	3660
// OP_STORE_V	3660	4	0
// OP_STORE_V	2073	7	0
// OP_CALL2	518	0	0
// OP_STORE_V	29	4	0
// OP_STORE_V	372	7	0
// OP_STORE_V	3661	10	0
// OP_STORE_V	677	13	0
// OP_STORE_V	375	16	0
// OP_CALL5	502	0	0
// OP_LOAD_ENT	29	226	3662
// OP_STORE_V	3662	4	0
// OP_STORE_V	3548	7	0
// OP_CALL2	515	0	0
// OP_ADDRESS	28	155	3663
// OP_STOREP_S	392	3663	0
// OP_ADDRESS	28	129	3664
// OP_STOREP_F	291	3664	0
// OP_IFNOT	35	4	0
// OP_ADDRESS	28	175	3665
// OP_ADD_F	31	1111	3666
// OP_STOREP_F	3666	3665	0
// OP_ADDRESS	28	173	3667
// OP_STOREP_FNC	3455	3667	0
// OP_STORE_ENT	29	395	0
// OP_CALL0	567	0	0
// OP_DONE	0	0	0
void () health_touch = 
{
    local float amount;
    local string s;
    
    if(other.owner.classname != "player")
    {
        return;
    }
    
    
    if(other.owner.enemy != other)
    {
        return;
    }
    
    
    if(other.health >= other.max_health)
    {
        return;
    }
    
    other.health = other.health + (floor(other.max_health * 0.250));
    
    if(other.health > other.max_health)
    {
        other.health = other.max_health;
    }
    
    sprint(other.owner, "You got the ");
    sprint(other.owner, self.netname);
    sprint(other.owner, "\n");
    sound(other, CHAN_ITEM, "items/health1.wav", 1.000, ATTN_NORM);
    stuffcmd(other.owner, "bf\n");
    self.model = string_null;
    self.solid = SOLID_NOT;
    
    if(deathmatch)
    {
        self.nextthink = time + 20.000;
    }
    
    self.think = SUB_regen;
    activator = other;
    SUB_UseTargets();
};

// item_health
// function begins at statement 4298, parm_start=3669
// OP_ADDRESS	28	171	3669
// OP_STOREP_FNC	3634	3669	0
// OP_STORE_V	3661	4	0
// OP_CALL1	513	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3556	7	0
// OP_CALL2	498	0	0
// OP_ADDRESS	28	468	3670
// OP_STOREP_F	1145	3670	0
// OP_ADDRESS	28	157	3671
// OP_STOREP_F	808	3671	0
// OP_ADDRESS	28	205	3672
// OP_STOREP_S	3673	3672	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3562	7	0
// OP_STORE_V	3565	10	0
// OP_CALL3	499	0	0
// OP_CALL0	3473	0	0
// OP_DONE	0	0	0
void () item_health = 
{
    self.touch = health_touch;
    precache_sound("items/health1.wav");
    setmodel(self, "progs/box1.mdl");
    self.aflag = 25.000;
    self.skin = 4.000;
    self.netname = "health";
    setsize(self, '-16.000 -16.000 -16.000', '16.000 16.000 16.000');
    ACStartItem();
};

void () start_flagsoldier;
// flagcollected_think
// function begins at statement 4317, parm_start=3676
// OP_LOAD_S	28	243	3677
// OP_EQ_S	3677	102	3678
// OP_IFNOT	3678	3	0
// OP_STORE_F	315	3676	0
// OP_GOTO	2	0	0
// OP_STORE_F	316	3676	0
// OP_LOAD_ENT	28	206	3679
// OP_LOAD_F	3679	187	3680
// OP_BITAND	3680	3676	3681
// OP_NOT_F	3681	0	3682
// OP_IFNOT	3682	17	0
// OP_LOAD_S	28	243	3683
// OP_EQ_S	3683	102	3684
// OP_IFNOT	3684	4	0
// OP_STORE_V	3685	4	0
// OP_CALL1	517	0	0
// OP_GOTO	3	0	0
// OP_STORE_V	3686	4	0
// OP_CALL1	517	0	0
// OP_STORE_V	3687	4	0
// OP_CALL1	517	0	0
// OP_ADDRESS	28	173	3688
// OP_STOREP_FNC	3674	3688	0
// OP_ADDRESS	28	175	3689
// OP_ADD_F	31	655	3690
// OP_STOREP_F	3690	3689	0
// OP_RETURN	0	0	0
// OP_ADDRESS	28	173	3691
// OP_STOREP_FNC	3675	3691	0
// OP_ADDRESS	28	175	3692
// OP_ADD_F	31	655	3693
// OP_STOREP_F	3693	3692	0
// OP_DONE	0	0	0
void () flagcollected_think = 
{
    local float it1;
    if(self.ts == T1)
    {
        it1 = IT_KEY1;
    }
    else
    {
        it1 = IT_KEY2;
    }
    
    
    if(!(self.enemy.items & it1))
    {
        if(self.ts == T1)
        {
            bprint("Blue officer");
        }
        else
        {
            bprint("Red officer");
        }
        
        bprint(" has been returned to the base.\n");
        self.think = start_flagsoldier;
        self.nextthink = time + 0.100;
        return;
    }
    
    self.think = flagcollected_think;
    self.nextthink = time + 0.100;
};

// flagsoldier_touch
// function begins at statement 4350, parm_start=3695
// OP_LOAD_F	29	177	3698
// OP_LT	3698	677	3699
// OP_IFNOT	3699	2	0
// OP_RETURN	0	0	0
// OP_LOAD_ENT	29	226	3700
// OP_LOAD_S	3700	154	3701
// OP_NE_S	3701	766	3702
// OP_IFNOT	3702	2	0
// OP_RETURN	0	0	0
// OP_LOAD_ENT	29	226	3703
// OP_LOAD_ENT	3703	206	3704
// OP_NE_E	3704	29	3705
// OP_IFNOT	3705	2	0
// OP_RETURN	0	0	0
// OP_LOAD_ENT	29	226	3706
// OP_LOAD_F	3706	404	3707
// OP_NE_F	3707	816	3708
// OP_IFNOT	3708	13	0
// OP_LOAD_F	29	240	3709
// OP_NE_F	3709	619	3710
// OP_IFNOT	3710	2	0
// OP_RETURN	0	0	0
// OP_LOAD_F	29	413	3711
// OP_NE_F	3711	619	3712
// OP_LOAD_V	29	138	3713
// OP_NE_V	3713	607	3716
// OP_AND	3712	3716	3717
// OP_IFNOT	3717	2	0
// OP_RETURN	0	0	0
// OP_GOTO	8	0	0
// OP_LOAD_V	29	138	3718
// OP_STORE_V	3718	4	0
// OP_CALL1	506	0	0
// OP_STORE_F	1	3696	0
// OP_GT	3696	827	3721
// OP_IFNOT	3721	2	0
// OP_RETURN	0	0	0
// OP_LOAD_ENT	29	226	3722
// OP_STORE_ENT	3722	3695	0
// OP_LOAD_S	28	243	3723
// OP_EQ_S	3723	102	3724
// OP_IFNOT	3724	4	0
// OP_STORE_F	315	3696	0
// OP_STORE_F	316	3697	0
// OP_GOTO	3	0	0
// OP_STORE_F	316	3696	0
// OP_STORE_F	315	3697	0
// OP_LOAD_S	29	243	3725
// OP_LOAD_S	28	243	3726
// OP_EQ_S	3725	3726	3727
// OP_IFNOT	3727	21	0
// OP_LOAD_F	3695	187	3728
// OP_BITAND	3728	3697	3729
// OP_IFNOT	3729	17	0
// OP_LOAD_S	3695	205	3730
// OP_STORE_V	3730	4	0
// OP_CALL1	517	0	0
// OP_STORE_V	3731	4	0
// OP_CALL1	517	0	0
// OP_STORE_V	3695	4	0
// OP_STORE_V	30	7	0
// OP_STORE_V	813	10	0
// OP_CALL3	903	0	0
// OP_STORE_V	3695	4	0
// OP_STORE_V	813	7	0
// OP_CALL2	912	0	0
// OP_ADDRESS	3695	187	3732
// OP_LOAD_F	3695	187	3733
// OP_SUB_F	3733	3697	3734
// OP_STOREP_F	3734	3732	0
// OP_RETURN	0	0	0
// OP_LOAD_F	3695	187	3735
// OP_BITAND	3735	3696	3736
// OP_IFNOT	3736	2	0
// OP_RETURN	0	0	0
// OP_LOAD_S	3695	205	3737
// OP_STORE_V	3737	4	0
// OP_CALL1	517	0	0
// OP_STORE_V	3738	4	0
// OP_CALL1	517	0	0
// OP_LOAD_S	28	205	3739
// OP_NOT_S	3739	0	3740
// OP_IFNOT	3740	4	0
// OP_STORE_V	3741	4	0
// OP_CALL1	517	0	0
// OP_GOTO	6	0	0
// OP_LOAD_S	28	205	3742
// OP_STORE_V	3742	4	0
// OP_CALL1	517	0	0
// OP_STORE_V	2073	4	0
// OP_CALL1	517	0	0
// OP_ADDRESS	3695	187	3743
// OP_LOAD_F	3695	187	3744
// OP_ADD_F	3744	3696	3745
// OP_STOREP_F	3745	3743	0
// OP_ADDRESS	28	206	3746
// OP_STOREP_ENT	3695	3746	0
// OP_LOAD_F	28	242	3747
// OP_NOT_F	35	0	3748
// OP_AND	3747	3748	3749
// OP_IFNOT	3749	4	0
// OP_LOAD_F	28	242	3750
// OP_ADD_F	100	3750	3751
// OP_STORE_F	3751	100	0
// OP_STORE_V	28	4	0
// OP_STORE_V	621	7	0
// OP_CALL2	498	0	0
// OP_ADDRESS	28	129	3752
// OP_STOREP_F	291	3752	0
// OP_ADDRESS	28	173	3753
// OP_STOREP_FNC	3675	3753	0
// OP_ADDRESS	28	175	3754
// OP_ADD_F	31	655	3755
// OP_STOREP_F	3755	3754	0
// OP_DONE	0	0	0
void () flagsoldier_touch = 
{
    local entity e;
    local float it1;
    local float it2;
    
    if(other.health < 1.000)
    {
        return;
    }
    
    
    if(other.owner.classname != "player")
    {
        return;
    }
    
    
    if(other.owner.enemy != other)
    {
        return;
    }
    
    if(other.owner.style != 6.000)
    {
        
        if(other.thru != 0.000)
        {
            return;
        }
        
        
        if((other.speed != 0.000) && (other.velocity != '0.000 0.000 0.000'))
        {
            return;
        }
        
    }
    else
    {
        it1 = vlen(other.velocity);
        
        if(it1 > 10.000)
        {
            return;
        }
        
    }
    
    e = other.owner;
    if(self.ts == T1)
    {
        it1 = IT_KEY1;
        it2 = IT_KEY2;
    }
    else
    {
        it1 = IT_KEY2;
        it2 = IT_KEY1;
    }
    
    
    if(other.ts == self.ts)
    {
        
        if(e.items & it2)
        {
            bprint(e.netname);
            bprint(" made a capture!\n");
            givefrags(e, world, 5.000);
            giveteamfrags(e, 5.000);
            e.items = e.items - it2;
        }
        
        return;
    }
    
    
    if(e.items & it1)
    {
        return;
    }
    
    bprint(e.netname);
    bprint(" picked up ");
    if(!self.netname)
    {
        bprint("the enemy officer!\n");
    }
    else
    {
        bprint(self.netname);
        bprint("\n");
    }
    
    e.items = e.items + it1;
    self.enemy = e;
    
    if(self.value && !deathmatch)
    {
        killedvalues = killedvalues + self.value;
    }
    
    setmodel(self, "");
    self.solid = SOLID_NOT;
    self.think = flagcollected_think;
    self.nextthink = time + 0.100;
};

// start_flagsoldier
// function begins at statement 4465, parm_start=3756
// OP_IFNOT	35	21	0
// OP_EQ_F	37	619	3756
// OP_LOAD_F	28	209	3757
// OP_EQ_F	3757	619	3758
// OP_OR	3756	3758	3759
// OP_IFNOT	3759	4	0
// OP_STORE_V	28	4	0
// OP_CALL1	509	0	0
// OP_RETURN	0	0	0
// OP_LOAD_F	28	209	3760
// OP_EQ_F	3760	677	3761
// OP_IFNOT	3761	4	0
// OP_ADDRESS	28	243	3762
// OP_STOREP_S	102	3762	0
// OP_GOTO	6	0	0
// OP_LOAD_F	28	209	3763
// OP_EQ_F	3763	806	3764
// OP_IFNOT	3764	3	0
// OP_ADDRESS	28	243	3765
// OP_STOREP_S	103	3765	0
// OP_GOTO	9	0	0
// OP_LOAD_F	28	209	3766
// OP_EQ_F	3766	677	3767
// OP_IFNOT	3767	4	0
// OP_ADDRESS	28	243	3768
// OP_STOREP_S	102	3768	0
// OP_GOTO	3	0	0
// OP_ADDRESS	28	243	3769
// OP_STOREP_S	101	3769	0
// OP_ADDRESS	28	207	3770
// OP_STOREP_F	276	3770	0
// OP_STORE_V	28	4	0
// OP_LOAD_V	28	134	3771
// OP_STORE_V	3771	7	0
// OP_CALL2	497	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3774	7	0
// OP_CALL2	498	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	3775	7	0
// OP_STORE_V	3778	10	0
// OP_CALL3	499	0	0
// OP_ADDRESS	28	129	3781
// OP_STOREP_F	292	3781	0
// OP_ADDRESS	28	128	3782
// OP_STOREP_F	285	3782	0
// OP_ADDRESS	28	171	3783
// OP_STOREP_FNC	3694	3783	0
// OP_DONE	0	0	0
void () start_flagsoldier = 
{
    if(deathmatch)
    {
        
        if((teamplay == 0.000) || (self.team == 0.000))
        {
            remove(self);
            return;
        }
        
        if(self.team == 1.000)
        {
            self.ts = T1;
        }
        else
        {
            
            if(self.team == 2.000)
            {
                self.ts = T2;
            }
            
        }
        
    }
    else
    {
        if(self.team == 1.000)
        {
            self.ts = T1;
        }
        else
        {
            self.ts = T0;
        }
        
    }
    
    self.flags = FL_ITEM;
    setorigin(self, self.oldorigin);
    setmodel(self, "progs/player.mdl");
    setsize(self, '-16.000 -16.000 -1.000', '16.000 16.000 32.000');
    self.solid = SOLID_TRIGGER;
    self.movetype = MOVETYPE_TOSS;
    self.touch = flagsoldier_touch;
};

// item_flagsoldier
// function begins at statement 4514, parm_start=3785
// OP_ADDRESS	28	134	3785
// OP_LOAD_V	28	130	3788
// OP_STOREP_V	3788	3785	0
// OP_ADDRESS	28	173	3791
// OP_STOREP_FNC	3674	3791	0
// OP_ADDRESS	28	175	3792
// OP_ADD_F	31	1349	3793
// OP_STOREP_F	3793	3792	0
// OP_DONE	0	0	0
void () item_flagsoldier = 
{
    self.oldorigin = self.origin;
    self.think = start_flagsoldier;
    self.nextthink = time + 0.200;
};

// item_model
// function begins at statement 4523, parm_start=3795
// OP_STORE_V	28	4	0
// OP_LOAD_S	28	155	3795
// OP_STORE_V	3795	7	0
// OP_CALL2	498	0	0
// OP_DONE	0	0	0
void () item_model = 
{
    setmodel(self, self.model);
};

