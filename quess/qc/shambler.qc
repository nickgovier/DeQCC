// sham_stand1
// function begins at statement 13880, parm_start=8904
// OP_STATE	650	8904	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand1 = [0, sham_stand2]
{
    ai_stand();
};

// sham_stand2
// function begins at statement 13883, parm_start=8905
// OP_STATE	708	8905	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand2 = [1, sham_stand3]
{
    ai_stand();
};

// sham_stand3
// function begins at statement 13886, parm_start=8906
// OP_STATE	929	8906	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand3 = [2, sham_stand4]
{
    ai_stand();
};

// sham_stand4
// function begins at statement 13889, parm_start=8907
// OP_STATE	819	8907	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand4 = [3, sham_stand5]
{
    ai_stand();
};

// sham_stand5
// function begins at statement 13892, parm_start=8908
// OP_STATE	1835	8908	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand5 = [4, sham_stand6]
{
    ai_stand();
};

// sham_stand6
// function begins at statement 13895, parm_start=8909
// OP_STATE	1660	8909	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand6 = [5, sham_stand7]
{
    ai_stand();
};

// sham_stand7
// function begins at statement 13898, parm_start=8910
// OP_STATE	2107	8910	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand7 = [6, sham_stand8]
{
    ai_stand();
};

// sham_stand8
// function begins at statement 13901, parm_start=8911
// OP_STATE	2307	8911	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand8 = [7, sham_stand9]
{
    ai_stand();
};

// sham_stand9
// function begins at statement 13904, parm_start=8912
// OP_STATE	1502	8912	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand9 = [8, sham_stand10]
{
    ai_stand();
};

// sham_stand10
// function begins at statement 13907, parm_start=8913
// OP_STATE	3556	8913	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand10 = [9, sham_stand11]
{
    ai_stand();
};

// sham_stand11
// function begins at statement 13910, parm_start=8914
// OP_STATE	1931	8914	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand11 = [10, sham_stand12]
{
    ai_stand();
};

// sham_stand12
// function begins at statement 13913, parm_start=8915
// OP_STATE	3931	8915	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand12 = [11, sham_stand13]
{
    ai_stand();
};

// sham_stand13
// function begins at statement 13916, parm_start=8916
// OP_STATE	2532	8916	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand13 = [12, sham_stand14]
{
    ai_stand();
};

// sham_stand14
// function begins at statement 13919, parm_start=8917
// OP_STATE	8427	8917	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand14 = [13, sham_stand15]
{
    ai_stand();
};

// sham_stand15
// function begins at statement 13922, parm_start=8918
// OP_STATE	3153	8918	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand15 = [14, sham_stand16]
{
    ai_stand();
};

// sham_stand16
// function begins at statement 13925, parm_start=8919
// OP_STATE	2157	8919	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand16 = [15, sham_stand17]
{
    ai_stand();
};

// sham_stand17
// function begins at statement 13928, parm_start=8920
// OP_STATE	3273	8903	0
// OP_CALL0	1539	0	0
// OP_DONE	0	0	0
void () sham_stand17 = [16, sham_stand1]
{
    ai_stand();
};

// sham_walk1
// function begins at statement 13931, parm_start=8921
// OP_STATE	5588	8921	0
// OP_STORE_V	1931	4	0
// OP_CALL1	1442	0	0
// OP_DONE	0	0	0
void () sham_walk1 = [17, sham_walk2]
{
    ai_walk(10);
};

// sham_walk2
// function begins at statement 13935, parm_start=8922
// OP_STATE	3576	8922	0
// OP_STORE_V	3556	4	0
// OP_CALL1	1442	0	0
// OP_DONE	0	0	0
void () sham_walk2 = [18, sham_walk3]
{
    ai_walk(9);
};

// sham_walk3
// function begins at statement 13939, parm_start=8923
// OP_STATE	8435	8923	0
// OP_STORE_V	3556	4	0
// OP_CALL1	1442	0	0
// OP_DONE	0	0	0
void () sham_walk3 = [19, sham_walk4]
{
    ai_walk(9);
};

// sham_walk4
// function begins at statement 13943, parm_start=8924
// OP_STATE	1017	8924	0
// OP_STORE_V	1660	4	0
// OP_CALL1	1442	0	0
// OP_DONE	0	0	0
void () sham_walk4 = [20, sham_walk5]
{
    ai_walk(5);
};

// sham_walk5
// function begins at statement 13947, parm_start=8925
// OP_STATE	8438	8925	0
// OP_STORE_V	2107	4	0
// OP_CALL1	1442	0	0
// OP_DONE	0	0	0
void () sham_walk5 = [21, sham_walk6]
{
    ai_walk(6);
};

// sham_walk6
// function begins at statement 13951, parm_start=8926
// OP_STATE	8440	8926	0
// OP_STORE_V	2532	4	0
// OP_CALL1	1442	0	0
// OP_DONE	0	0	0
void () sham_walk6 = [22, sham_walk7]
{
    ai_walk(12);
};

// sham_walk7
// function begins at statement 13955, parm_start=8927
// OP_STATE	8442	8927	0
// OP_STORE_V	1502	4	0
// OP_CALL1	1442	0	0
// OP_DONE	0	0	0
void () sham_walk7 = [23, sham_walk8]
{
    ai_walk(8);
};

// sham_walk8
// function begins at statement 13959, parm_start=8928
// OP_STATE	4969	8928	0
// OP_STORE_V	819	4	0
// OP_CALL1	1442	0	0
// OP_DONE	0	0	0
void () sham_walk8 = [24, sham_walk9]
{
    ai_walk(3);
};

// sham_walk9
// function begins at statement 13963, parm_start=8929
// OP_STATE	2171	8929	0
// OP_STORE_V	8427	4	0
// OP_CALL1	1442	0	0
// OP_DONE	0	0	0
void () sham_walk9 = [25, sham_walk10]
{
    ai_walk(13);
};

// sham_walk10
// function begins at statement 13967, parm_start=8930
// OP_STATE	8446	8930	0
// OP_STORE_V	3556	4	0
// OP_CALL1	1442	0	0
// OP_DONE	0	0	0
void () sham_walk10 = [26, sham_walk11]
{
    ai_walk(9);
};

// sham_walk11
// function begins at statement 13971, parm_start=8931
// OP_STATE	8448	8931	0
// OP_STORE_V	2307	4	0
// OP_CALL1	1442	0	0
// OP_DONE	0	0	0
void () sham_walk11 = [27, sham_walk12]
{
    ai_walk(7);
};

// sham_walk12
// function begins at statement 13975, parm_start=8932
// OP_STATE	8450	8920	0
// OP_STORE_V	2307	4	0
// OP_CALL1	1442	0	0
// OP_CALL0	453	0	0
// OP_GT	1	2245	8932
// OP_IFNOT	8932	7	0
// OP_STORE_V	28	4	0
// OP_STORE_V	323	7	0
// OP_STORE_V	8933	10	0
// OP_STORE_V	708	13	0
// OP_STORE_V	328	16	0
// OP_CALL5	454	0	0
// OP_DONE	0	0	0
void () sham_walk12 = [28, sham_walk1]
{
    ai_walk(7);
    
    if(random() > 0.8)
    {
        sound(self, CHAN_VOICE, "shambler/sidle.wav", 1, ATTN_IDLE);
    }
    
};

// sham_run1
// function begins at statement 13988, parm_start=8935
// OP_STATE	5829	8935	0
// OP_STORE_V	1017	4	0
// OP_CALL1	1617	0	0
// OP_DONE	0	0	0
void () sham_run1 = [29, sham_run2]
{
    ai_run(20);
};

// sham_run2
// function begins at statement 13992, parm_start=8936
// OP_STATE	1004	8936	0
// OP_STORE_V	4969	4	0
// OP_CALL1	1617	0	0
// OP_DONE	0	0	0
void () sham_run2 = [30, sham_run3]
{
    ai_run(24);
};

// sham_run3
// function begins at statement 13996, parm_start=8937
// OP_STATE	3950	8937	0
// OP_STORE_V	1017	4	0
// OP_CALL1	1617	0	0
// OP_DONE	0	0	0
void () sham_run3 = [31, sham_run4]
{
    ai_run(20);
};

// sham_run4
// function begins at statement 14000, parm_start=8938
// OP_STATE	959	8938	0
// OP_STORE_V	1017	4	0
// OP_CALL1	1617	0	0
// OP_DONE	0	0	0
void () sham_run4 = [32, sham_run5]
{
    ai_run(20);
};

// sham_run5
// function begins at statement 14004, parm_start=8939
// OP_STATE	5835	8939	0
// OP_STORE_V	4969	4	0
// OP_CALL1	1617	0	0
// OP_DONE	0	0	0
void () sham_run5 = [33, sham_run6]
{
    ai_run(24);
};

// sham_run6
// function begins at statement 14008, parm_start=8940
// OP_STATE	5837	8934	0
// OP_STORE_V	1017	4	0
// OP_CALL1	1617	0	0
// OP_CALL0	453	0	0
// OP_GT	1	2245	8940
// OP_IFNOT	8940	7	0
// OP_STORE_V	28	4	0
// OP_STORE_V	323	7	0
// OP_STORE_V	8933	10	0
// OP_STORE_V	708	13	0
// OP_STORE_V	328	16	0
// OP_CALL5	454	0	0
// OP_DONE	0	0	0
void () sham_run6 = [34, sham_run1]
{
    ai_run(20);
    
    if(random() > 0.8)
    {
        sound(self, CHAN_VOICE, "shambler/sidle.wav", 1, ATTN_IDLE);
    }
    
};

// sham_smash1
// function begins at statement 14021, parm_start=8941
// OP_STATE	3325	8941	0
// OP_STORE_V	28	4	0
// OP_STORE_V	323	7	0
// OP_STORE_V	8942	10	0
// OP_STORE_V	708	13	0
// OP_STORE_V	327	16	0
// OP_CALL5	454	0	0
// OP_STORE_V	929	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_smash1 = [35, sham_smash2]
{
    sound(self, CHAN_VOICE, "shambler/melee1.wav", 1, ATTN_NORM);
    ai_charge(2);
};

// sham_smash2
// function begins at statement 14031, parm_start=8943
// OP_STATE	5820	8943	0
// OP_STORE_V	2107	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_smash2 = [36, sham_smash3]
{
    ai_charge(6);
};

// sham_smash3
// function begins at statement 14035, parm_start=8944
// OP_STATE	5822	8944	0
// OP_STORE_V	2107	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_smash3 = [37, sham_smash4]
{
    ai_charge(6);
};

// sham_smash4
// function begins at statement 14039, parm_start=8945
// OP_STATE	5824	8945	0
// OP_STORE_V	1660	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_smash4 = [38, sham_smash5]
{
    ai_charge(5);
};

// sham_smash5
// function begins at statement 14043, parm_start=8946
// OP_STATE	5826	8946	0
// OP_STORE_V	1835	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_smash5 = [39, sham_smash6]
{
    ai_charge(4);
};

// sham_smash6
// function begins at statement 14047, parm_start=8947
// OP_STATE	2007	8947	0
// OP_STORE_V	708	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_smash6 = [40, sham_smash7]
{
    ai_charge(1);
};

// sham_smash7
// function begins at statement 14051, parm_start=8948
// OP_STATE	6160	8948	0
// OP_STORE_V	650	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_smash7 = [41, sham_smash8]
{
    ai_charge(0);
};

// sham_smash8
// function begins at statement 14055, parm_start=8949
// OP_STATE	6162	8949	0
// OP_STORE_V	650	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_smash8 = [42, sham_smash9]
{
    ai_charge(0);
};

// sham_smash9
// function begins at statement 14059, parm_start=8950
// OP_STATE	6164	8950	0
// OP_STORE_V	650	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_smash9 = [43, sham_smash10]
{
    ai_charge(0);
};

// sham_smash10
// function begins at statement 14063, parm_start=8951
// OP_STATE	6166	8951	0
// OP_LOAD_ENT	28	181	8956
// OP_NOT_ENT	8956	0	8957
// OP_IFNOT	8957	2	0
// OP_RETURN	0	0	0
// OP_STORE_V	650	4	0
// OP_CALL1	944	0	0
// OP_LOAD_ENT	28	181	8958
// OP_LOAD_V	8958	105	8959
// OP_LOAD_V	28	105	8962
// OP_SUB_V	8959	8962	8965
// OP_STORE_V	8965	8952	0
// OP_STORE_V	8952	4	0
// OP_CALL1	458	0	0
// OP_GT	1	2165	8968
// OP_IFNOT	8968	2	0
// OP_RETURN	0	0	0
// OP_LOAD_ENT	28	181	8969
// OP_STORE_V	8969	4	0
// OP_STORE_V	28	7	0
// OP_CALL2	523	0	0
// OP_NOT_F	1	0	8970
// OP_IFNOT	8970	2	0
// OP_RETURN	0	0	0
// OP_CALL0	453	0	0
// OP_CALL0	453	0	0
// OP_ADD_F	1	1	8971
// OP_CALL0	453	0	0
// OP_ADD_F	8971	1	8972
// OP_MUL_F	8972	2007	8973
// OP_STORE_F	8973	8955	0
// OP_LOAD_ENT	28	181	8974
// OP_STORE_V	8974	4	0
// OP_STORE_V	28	7	0
// OP_STORE_V	28	10	0
// OP_STORE_V	8955	13	0
// OP_CALL4	521	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	323	7	0
// OP_STORE_V	8975	10	0
// OP_STORE_V	708	13	0
// OP_STORE_V	327	16	0
// OP_CALL5	454	0	0
// OP_LOAD_V	28	105	8976
// OP_MUL_VF	59	3273	8979
// OP_ADD_V	8976	8979	8982
// OP_STORE_V	8982	4	0
// OP_CALL0	2877	0	0
// OP_MUL_F	1	2165	8985
// OP_MUL_FV	8985	65	8986
// OP_STORE_V	8986	7	0
// OP_CALL2	2945	0	0
// OP_LOAD_V	28	105	8989
// OP_MUL_VF	59	3273	8992
// OP_ADD_V	8989	8992	8995
// OP_STORE_V	8995	4	0
// OP_CALL0	2877	0	0
// OP_MUL_F	1	2165	8998
// OP_MUL_FV	8998	65	8999
// OP_STORE_V	8999	7	0
// OP_CALL2	2945	0	0
// OP_DONE	0	0	0
void () sham_smash10 = [44, sham_smash11]
{
    local vector delta;
    local float ldmg;
    
    if(!self.enemy)
    {
        return;
    }
    
    ai_charge(0);
    delta = self.enemy.origin - self.origin;
    
    if(vlen(delta) > 100)
    {
        return;
    }
    
    
    if(!CanDamage(self.enemy, self))
    {
        return;
    }
    
    random();
    ldmg = ((random() + random()) + random()) * 40;
    T_Damage(self.enemy, self, self, ldmg);
    sound(self, CHAN_VOICE, "shambler/smack.wav", 1, ATTN_NORM);
    SpawnMeatSpray(self.origin + (v_forward * 16), (crandom() * 100) * v_right);
    SpawnMeatSpray(self.origin + (v_forward * 16), (crandom() * 100) * v_right);
};

// sham_smash11
// function begins at statement 14125, parm_start=9002
// OP_STATE	1572	9002	0
// OP_STORE_V	1660	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_smash11 = [45, sham_smash12]
{
    ai_charge(5);
};

// sham_smash12
// function begins at statement 14129, parm_start=9003
// OP_STATE	6169	8934	0
// OP_STORE_V	1835	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_smash12 = [46, sham_run1]
{
    ai_charge(4);
};

// ShamClaw
// function begins at statement 14133, parm_start=9004
// OP_LOAD_ENT	28	181	9009
// OP_NOT_ENT	9009	0	9010
// OP_IFNOT	9010	2	0
// OP_RETURN	0	0	0
// OP_STORE_V	1931	4	0
// OP_CALL1	944	0	0
// OP_LOAD_ENT	28	181	9011
// OP_LOAD_V	9011	105	9012
// OP_LOAD_V	28	105	9015
// OP_SUB_V	9012	9015	9018
// OP_STORE_V	9018	9005	0
// OP_STORE_V	9005	4	0
// OP_CALL1	458	0	0
// OP_GT	1	2165	9021
// OP_IFNOT	9021	2	0
// OP_RETURN	0	0	0
// OP_CALL0	453	0	0
// OP_CALL0	453	0	0
// OP_ADD_F	1	1	9022
// OP_CALL0	453	0	0
// OP_ADD_F	9022	1	9023
// OP_MUL_F	9023	1017	9024
// OP_STORE_F	9024	9008	0
// OP_LOAD_ENT	28	181	9025
// OP_STORE_V	9025	4	0
// OP_STORE_V	28	7	0
// OP_STORE_V	28	10	0
// OP_STORE_V	9008	13	0
// OP_CALL4	521	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	323	7	0
// OP_STORE_V	8975	10	0
// OP_STORE_V	708	13	0
// OP_STORE_V	327	16	0
// OP_CALL5	454	0	0
// OP_IFNOT	9004	11	0
// OP_LOAD_V	28	117	9026
// OP_STORE_V	9026	4	0
// OP_CALL1	448	0	0
// OP_LOAD_V	28	105	9029
// OP_MUL_VF	59	3273	9032
// OP_ADD_V	9029	9032	9035
// OP_STORE_V	9035	4	0
// OP_MUL_FV	9004	65	9038
// OP_STORE_V	9038	7	0
// OP_CALL2	2945	0	0
// OP_DONE	0	0	0
void (float side) ShamClaw = 
{
    local vector delta;
    local float ldmg;
    
    if(!self.enemy)
    {
        return;
    }
    
    ai_charge(10);
    delta = self.enemy.origin - self.origin;
    
    if(vlen(delta) > 100)
    {
        return;
    }
    
    random();
    ldmg = ((random() + random()) + random()) * 20;
    T_Damage(self.enemy, self, self, ldmg);
    sound(self, CHAN_VOICE, "shambler/smack.wav", 1, ATTN_NORM);
    
    if(side)
    {
        makevectors(self.angles);
        SpawnMeatSpray(self.origin + (v_forward * 16), side * v_right);
    }
    
};

// sham_swingl1
// function begins at statement 14180, parm_start=9041
// OP_STATE	6078	9041	0
// OP_STORE_V	28	4	0
// OP_STORE_V	323	7	0
// OP_STORE_V	9042	10	0
// OP_STORE_V	708	13	0
// OP_STORE_V	327	16	0
// OP_CALL5	454	0	0
// OP_STORE_V	1660	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_swingl1 = [56, sham_swingl2]
{
    sound(self, CHAN_VOICE, "shambler/melee2.wav", 1, ATTN_NORM);
    ai_charge(5);
};

// sham_swingl2
// function begins at statement 14190, parm_start=9043
// OP_STATE	6080	9043	0
// OP_STORE_V	819	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_swingl2 = [57, sham_swingl3]
{
    ai_charge(3);
};

// sham_swingl3
// function begins at statement 14194, parm_start=9044
// OP_STATE	6082	9044	0
// OP_STORE_V	2307	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_swingl3 = [58, sham_swingl4]
{
    ai_charge(7);
};

// sham_swingl4
// function begins at statement 14198, parm_start=9045
// OP_STATE	6084	9045	0
// OP_STORE_V	819	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_swingl4 = [59, sham_swingl5]
{
    ai_charge(3);
};

// sham_swingl5
// function begins at statement 14202, parm_start=9046
// OP_STATE	1035	9046	0
// OP_STORE_V	2307	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_swingl5 = [60, sham_swingl6]
{
    ai_charge(7);
};

// sham_swingl6
// function begins at statement 14206, parm_start=9047
// OP_STATE	6086	9047	0
// OP_STORE_V	3556	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_swingl6 = [61, sham_swingl7]
{
    ai_charge(9);
};

// sham_swingl7
// function begins at statement 14210, parm_start=9048
// OP_STATE	6088	9048	0
// OP_STORE_V	1660	4	0
// OP_CALL1	944	0	0
// OP_STORE_V	2140	4	0
// OP_CALL1	9003	0	0
// OP_DONE	0	0	0
void () sham_swingl7 = [62, sham_swingl8]
{
    ai_charge(5);
    ShamClaw(250);
};

// sham_swingl8
// function begins at statement 14216, parm_start=9049
// OP_STATE	4345	9049	0
// OP_STORE_V	1835	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_swingl8 = [63, sham_swingl9]
{
    ai_charge(4);
};

// sham_swingl9
// function begins at statement 14220, parm_start=9050
// OP_STATE	1684	8934	0
// OP_STORE_V	1502	4	0
// OP_CALL1	944	0	0
// OP_CALL0	453	0	0
// OP_LT	1	1727	9050
// OP_IFNOT	9050	3	0
// OP_ADDRESS	28	148	9051
// OP_STOREP_FNC	839	9051	0
// OP_DONE	0	0	0
void () sham_swingl9 = [64, sham_run1]
{
    ai_charge(8);
    
    if(random() < 0.5)
    {
        self.think = sham_swingr1;
    }
    
};

// sham_swingr1
// function begins at statement 14229, parm_start=9052
// OP_STATE	6171	9052	0
// OP_STORE_V	28	4	0
// OP_STORE_V	323	7	0
// OP_STORE_V	8942	10	0
// OP_STORE_V	708	13	0
// OP_STORE_V	327	16	0
// OP_CALL5	454	0	0
// OP_STORE_V	708	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_swingr1 = [47, sham_swingr2]
{
    sound(self, CHAN_VOICE, "shambler/melee1.wav", 1, ATTN_NORM);
    ai_charge(1);
};

// sham_swingr2
// function begins at statement 14239, parm_start=9053
// OP_STATE	6173	9053	0
// OP_STORE_V	1502	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_swingr2 = [48, sham_swingr3]
{
    ai_charge(8);
};

// sham_swingr3
// function begins at statement 14243, parm_start=9054
// OP_STATE	6175	9054	0
// OP_STORE_V	3153	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_swingr3 = [49, sham_swingr4]
{
    ai_charge(14);
};

// sham_swingr4
// function begins at statement 14247, parm_start=9055
// OP_STATE	2509	9055	0
// OP_STORE_V	2307	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_swingr4 = [50, sham_swingr5]
{
    ai_charge(7);
};

// sham_swingr5
// function begins at statement 14251, parm_start=9056
// OP_STATE	6068	9056	0
// OP_STORE_V	819	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_swingr5 = [51, sham_swingr6]
{
    ai_charge(3);
};

// sham_swingr6
// function begins at statement 14255, parm_start=9057
// OP_STATE	6070	9057	0
// OP_STORE_V	2107	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_swingr6 = [52, sham_swingr7]
{
    ai_charge(6);
};

// sham_swingr7
// function begins at statement 14259, parm_start=9058
// OP_STATE	6072	9058	0
// OP_STORE_V	2107	4	0
// OP_CALL1	944	0	0
// OP_STORE_V	9059	4	0
// OP_CALL1	9003	0	0
// OP_DONE	0	0	0
void () sham_swingr7 = [53, sham_swingr8]
{
    ai_charge(6);
    ShamClaw(-250);
};

// sham_swingr8
// function begins at statement 14265, parm_start=9060
// OP_STATE	6074	9060	0
// OP_STORE_V	819	4	0
// OP_CALL1	944	0	0
// OP_DONE	0	0	0
void () sham_swingr8 = [54, sham_swingr9]
{
    ai_charge(3);
};

// sham_swingr9
// function begins at statement 14269, parm_start=9061
// OP_STATE	6076	8934	0
// OP_STORE_V	708	4	0
// OP_CALL1	944	0	0
// OP_STORE_V	1931	4	0
// OP_CALL1	944	0	0
// OP_CALL0	453	0	0
// OP_LT	1	1727	9061
// OP_IFNOT	9061	3	0
// OP_ADDRESS	28	148	9062
// OP_STOREP_FNC	840	9062	0
// OP_DONE	0	0	0
void () sham_swingr9 = [55, sham_run1]
{
    ai_charge(1);
    ai_charge(10);
    
    if(random() < 0.5)
    {
        self.think = sham_swingl1;
    }
    
};

// sham_melee
// function begins at statement 14280, parm_start=9064
// OP_CALL0	453	0	0
// OP_STORE_F	1	9064	0
// OP_GT	9064	2240	9065
// OP_LOAD_F	28	152	9066
// OP_EQ_F	9066	3343	9067
// OP_OR	9065	9067	9068
// OP_IFNOT	9068	3	0
// OP_CALL0	838	0	0
// OP_GOTO	6	0	0
// OP_GT	9064	1104	9069
// OP_IFNOT	9069	3	0
// OP_CALL0	839	0	0
// OP_GOTO	2	0	0
// OP_CALL0	840	0	0
// OP_DONE	0	0	0
void () sham_melee = 
{
    local float chance;
    chance = random();
    if((chance > 0.6) || (self.health == 600))
    {
        sham_smash1();
    }
    else
    {
        if(chance > 0.3)
        {
            sham_swingr1();
        }
        else
        {
            sham_swingl1();
        }
        
    }
    
};

// CastLightning
// function begins at statement 14295, parm_start=9071
// OP_ADDRESS	28	133	9077
// OP_LOAD_F	28	133	9078
// OP_BITOR	9078	335	9079
// OP_STOREP_F	9079	9077	0
// OP_CALL0	844	0	0
// OP_LOAD_V	28	105	9080
// OP_ADD_V	9080	9083	9086
// OP_STORE_V	9086	9071	0
// OP_LOAD_ENT	28	181	9089
// OP_LOAD_V	9089	105	9090
// OP_ADD_V	9090	2893	9093
// OP_SUB_V	9093	9071	9096
// OP_STORE_V	9096	9074	0
// OP_STORE_V	9074	4	0
// OP_CALL1	455	0	0
// OP_STORE_V	1	9074	0
// OP_STORE_V	9071	4	0
// OP_LOAD_V	28	105	9099
// OP_MUL_VF	9074	9102	9103
// OP_ADD_V	9099	9103	9106
// OP_STORE_V	9106	7	0
// OP_STORE_V	214	10	0
// OP_STORE_V	28	13	0
// OP_CALL4	462	0	0
// OP_STORE_V	338	4	0
// OP_STORE_V	302	7	0
// OP_CALL2	494	0	0
// OP_STORE_V	338	4	0
// OP_STORE_V	314	7	0
// OP_CALL2	494	0	0
// OP_STORE_V	338	4	0
// OP_STORE_V	28	7	0
// OP_CALL2	501	0	0
// OP_STORE_V	338	4	0
// OP_STORE_V	9071	7	0
// OP_CALL2	498	0	0
// OP_STORE_V	338	4	0
// OP_STORE_V	9072	7	0
// OP_CALL2	498	0	0
// OP_STORE_V	338	4	0
// OP_STORE_V	9073	7	0
// OP_CALL2	498	0	0
// OP_STORE_V	338	4	0
// OP_STORE_V	71	7	0
// OP_CALL2	498	0	0
// OP_STORE_V	338	4	0
// OP_STORE_V	72	7	0
// OP_CALL2	498	0	0
// OP_STORE_V	338	4	0
// OP_STORE_V	73	7	0
// OP_CALL2	498	0	0
// OP_STORE_V	9071	4	0
// OP_STORE_V	71	7	0
// OP_STORE_V	28	10	0
// OP_STORE_V	1931	13	0
// OP_CALL4	3255	0	0
// OP_DONE	0	0	0
void () CastLightning = 
{
    local vector org;
    local vector dir;
    self.effects = self.effects | EF_MUZZLEFLASH;
    ai_face();
    org = self.origin + '0.000 0.000 40.000';
    dir = (self.enemy.origin + '0.000 0.000 16.000') - org;
    dir = normalize(dir);
    traceline(org, self.origin + (dir * 4000), TRUE, self);
    WriteByte(MSG_BROADCAST, SVC_TEMPENTITY);
    WriteByte(MSG_BROADCAST, TE_LIGHTNING1);
    WriteEntity(MSG_BROADCAST, self);
    WriteCoord(MSG_BROADCAST, org_x);
    WriteCoord(MSG_BROADCAST, 0);
    WriteCoord(MSG_BROADCAST, 0);
    WriteCoord(MSG_BROADCAST, trace_endpos_x);
    WriteCoord(MSG_BROADCAST, 0);
    WriteCoord(MSG_BROADCAST, 0);
    LightningDamage(org, trace_endpos, self, 10);
};

// sham_magic1
// function begins at statement 14352, parm_start=9110
// OP_STATE	6092	9110	0
// OP_CALL0	844	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	322	7	0
// OP_STORE_V	9111	10	0
// OP_STORE_V	708	13	0
// OP_STORE_V	327	16	0
// OP_CALL5	454	0	0
// OP_DONE	0	0	0
void () sham_magic1 = [65, sham_magic2]
{
    ai_face();
    sound(self, CHAN_WEAPON, "shambler/sattck1.wav", 1, ATTN_NORM);
};

// sham_magic2
// function begins at statement 14361, parm_start=9112
// OP_STATE	6094	9112	0
// OP_CALL0	844	0	0
// OP_DONE	0	0	0
void () sham_magic2 = [66, sham_magic3]
{
    ai_face();
};

// sham_magic3
// function begins at statement 14364, parm_start=9113
// OP_STATE	6096	9113	0
// OP_CALL0	844	0	0
// OP_ADDRESS	28	150	9114
// OP_LOAD_F	28	150	9115
// OP_ADD_F	9115	922	9116
// OP_STOREP_F	9116	9114	0
// OP_ADDRESS	28	133	9118
// OP_LOAD_F	28	133	9119
// OP_BITOR	9119	335	9120
// OP_STOREP_F	9120	9118	0
// OP_CALL0	844	0	0
// OP_ADDRESS	28	564	9121
// OP_CALL0	460	0	0
// OP_STOREP_ENT	1	9121	0
// OP_LOAD_ENT	28	564	9122
// OP_STORE_ENT	9122	9117	0
// OP_STORE_V	9117	4	0
// OP_STORE_V	9123	7	0
// OP_CALL2	450	0	0
// OP_STORE_V	9117	4	0
// OP_LOAD_V	28	105	9124
// OP_STORE_V	9124	7	0
// OP_CALL2	449	0	0
// OP_ADDRESS	9117	117	9127
// OP_LOAD_V	28	117	9130
// OP_STOREP_V	9130	9127	0
// OP_ADDRESS	9117	150	9133
// OP_ADD_F	31	3100	9134
// OP_STOREP_F	9134	9133	0
// OP_ADDRESS	9117	148	9135
// OP_STOREP_FNC	520	9135	0
// OP_DONE	0	0	0
void () sham_magic3 = [67, sham_magic4]
{
    local entity o;
    ai_face();
    self.nextthink = self.nextthink + 0.2;
    self.effects = self.effects | EF_MUZZLEFLASH;
    ai_face();
    self.attack_missile = spawn();
    o = self.attack_missile;
    setmodel(o, "progs/s_light.mdl");
    setorigin(o, self.origin);
    o.angles = self.angles;
    o.nextthink = time + 0.7;
    o.think = SUB_Remove;
};

// sham_magic4
// function begins at statement 14396, parm_start=9136
// OP_STATE	6098	9136	0
// OP_ADDRESS	28	133	9137
// OP_LOAD_F	28	133	9138
// OP_BITOR	9138	335	9139
// OP_STOREP_F	9139	9137	0
// OP_LOAD_ENT	28	564	9140
// OP_ADDRESS	9140	131	9141
// OP_STOREP_F	708	9141	0
// OP_DONE	0	0	0
void () sham_magic4 = [68, sham_magic5]
{
    self.effects = self.effects | EF_MUZZLEFLASH;
    self.attack_missile.frame = 1;
};

// sham_magic5
// function begins at statement 14405, parm_start=9142
// OP_STATE	6100	9142	0
// OP_ADDRESS	28	133	9143
// OP_LOAD_F	28	133	9144
// OP_BITOR	9144	335	9145
// OP_STOREP_F	9145	9143	0
// OP_LOAD_ENT	28	564	9146
// OP_ADDRESS	9146	131	9147
// OP_STOREP_F	929	9147	0
// OP_DONE	0	0	0
void () sham_magic5 = [69, sham_magic6]
{
    self.effects = self.effects | EF_MUZZLEFLASH;
    self.attack_missile.frame = 2;
};

// sham_magic6
// function begins at statement 14414, parm_start=9148
// OP_STATE	6101	9148	0
// OP_LOAD_ENT	28	564	9149
// OP_STORE_V	9149	4	0
// OP_CALL1	461	0	0
// OP_CALL0	9070	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	322	7	0
// OP_STORE_V	9150	10	0
// OP_STORE_V	708	13	0
// OP_STORE_V	327	16	0
// OP_CALL5	454	0	0
// OP_DONE	0	0	0
void () sham_magic6 = [70, sham_magic9]
{
    remove(self.attack_missile);
    CastLightning();
    sound(self, CHAN_WEAPON, "shambler/sboom.wav", 1, ATTN_NORM);
};

// sham_magic9
// function begins at statement 14426, parm_start=9151
// OP_STATE	2988	9151	0
// OP_CALL0	9070	0	0
// OP_DONE	0	0	0
void () sham_magic9 = [73, sham_magic10]
{
    CastLightning();
};

// sham_magic10
// function begins at statement 14429, parm_start=9152
// OP_STATE	6108	9152	0
// OP_CALL0	9070	0	0
// OP_DONE	0	0	0
void () sham_magic10 = [74, sham_magic11]
{
    CastLightning();
};

// sham_magic11
// function begins at statement 14432, parm_start=9153
// OP_STATE	6110	9153	0
// OP_EQ_F	350	819	9154
// OP_IFNOT	9154	2	0
// OP_CALL0	9070	0	0
// OP_DONE	0	0	0
void () sham_magic11 = [75, sham_magic12]
{
    
    if(skill == 3)
    {
        CastLightning();
    }
    
};

// sham_magic12
// function begins at statement 14437, parm_start=9155
// OP_STATE	6112	8934	0
// OP_DONE	0	0	0
void () sham_magic12 = [76, sham_run1]
{
};

// sham_pain1
// function begins at statement 14439, parm_start=9156
// OP_STATE	6114	9156	0
// OP_DONE	0	0	0
void () sham_pain1 = [77, sham_pain2]
{
};

// sham_pain2
// function begins at statement 14441, parm_start=9157
// OP_STATE	6116	9157	0
// OP_DONE	0	0	0
void () sham_pain2 = [78, sham_pain3]
{
};

// sham_pain3
// function begins at statement 14443, parm_start=9158
// OP_STATE	6118	9158	0
// OP_DONE	0	0	0
void () sham_pain3 = [79, sham_pain4]
{
};

// sham_pain4
// function begins at statement 14445, parm_start=9159
// OP_STATE	874	9159	0
// OP_DONE	0	0	0
void () sham_pain4 = [80, sham_pain5]
{
};

// sham_pain5
// function begins at statement 14447, parm_start=9160
// OP_STATE	6121	9160	0
// OP_DONE	0	0	0
void () sham_pain5 = [81, sham_pain6]
{
};

// sham_pain6
// function begins at statement 14449, parm_start=9161
// OP_STATE	6123	8934	0
// OP_DONE	0	0	0
void () sham_pain6 = [82, sham_run1]
{
};

// sham_pain
// function begins at statement 14451, parm_start=9162
// OP_STORE_V	28	4	0
// OP_STORE_V	323	7	0
// OP_STORE_V	9164	10	0
// OP_STORE_V	708	13	0
// OP_STORE_V	327	16	0
// OP_CALL5	454	0	0
// OP_LOAD_F	28	152	9165
// OP_LE	9165	650	9166
// OP_IFNOT	9166	2	0
// OP_RETURN	0	0	0
// OP_NOT_F	539	0	9167
// OP_CALL0	453	0	0
// OP_MUL_F	1	3289	9168
// OP_GT	9168	9163	9169
// OP_AND	9167	9169	9170
// OP_IFNOT	9170	2	0
// OP_RETURN	0	0	0
// OP_LOAD_F	28	375	9171
// OP_GT	9171	31	9172
// OP_IFNOT	9172	2	0
// OP_RETURN	0	0	0
// OP_ADDRESS	28	375	9173
// OP_ADD_F	31	929	9174
// OP_STOREP_F	9174	9173	0
// OP_CALL0	9155	0	0
// OP_DONE	0	0	0
void (entity attacker, float damage) sham_pain = 
{
    sound(self, CHAN_VOICE, "shambler/shurt2.wav", 1, ATTN_NORM);
    
    if(self.health <= 0)
    {
        return;
    }
    
    
    if(!king_dead && ((random() * 400) > damage))
    {
        return;
    }
    
    
    if(self.pain_finished > time)
    {
        return;
    }
    
    self.pain_finished = time + 2;
    sham_pain1();
};

// sham_death1
// function begins at statement 14477, parm_start=9176
// OP_STATE	6125	9176	0
// OP_DONE	0	0	0
void () sham_death1 = [83, sham_death2]
{
};

// sham_death2
// function begins at statement 14479, parm_start=9177
// OP_STATE	6127	9177	0
// OP_DONE	0	0	0
void () sham_death2 = [84, sham_death3]
{
};

// sham_death3
// function begins at statement 14481, parm_start=9178
// OP_STATE	6128	9178	0
// OP_ADDRESS	28	104	9179
// OP_STOREP_F	238	9179	0
// OP_DONE	0	0	0
void () sham_death3 = [85, sham_death4]
{
    self.solid = SOLID_NOT;
};

// sham_death4
// function begins at statement 14485, parm_start=9180
// OP_STATE	6130	9180	0
// OP_DONE	0	0	0
void () sham_death4 = [86, sham_death5]
{
};

// sham_death5
// function begins at statement 14487, parm_start=9181
// OP_STATE	6132	9181	0
// OP_DONE	0	0	0
void () sham_death5 = [87, sham_death6]
{
};

// sham_death6
// function begins at statement 14489, parm_start=9182
// OP_STATE	6134	9182	0
// OP_DONE	0	0	0
void () sham_death6 = [88, sham_death7]
{
};

// sham_death7
// function begins at statement 14491, parm_start=9183
// OP_STATE	6136	9183	0
// OP_DONE	0	0	0
void () sham_death7 = [89, sham_death8]
{
};

// sham_death8
// function begins at statement 14493, parm_start=9184
// OP_STATE	1608	9184	0
// OP_DONE	0	0	0
void () sham_death8 = [90, sham_death9]
{
};

// sham_death9
// function begins at statement 14495, parm_start=9185
// OP_STATE	6139	9185	0
// OP_DONE	0	0	0
void () sham_death9 = [91, sham_death10]
{
};

// sham_death10
// function begins at statement 14497, parm_start=9186
// OP_STATE	6141	9186	0
// OP_DONE	0	0	0
void () sham_death10 = [92, sham_death11]
{
};

// sham_death11
// function begins at statement 14499, parm_start=9187
// OP_STATE	6143	9186	0
// OP_CALL0	520	0	0
// OP_DONE	0	0	0
void () sham_death11 = [93, sham_death11]
{
    SUB_Remove();
};

// sham_die
// function begins at statement 14502, parm_start=9188
// OP_LOAD_F	28	152	9188
// OP_LT	9188	9189	9190
// OP_IFNOT	9190	24	0
// OP_STORE_V	28	4	0
// OP_STORE_V	323	7	0
// OP_STORE_V	4265	10	0
// OP_STORE_V	708	13	0
// OP_STORE_V	327	16	0
// OP_CALL5	454	0	0
// OP_STORE_V	9191	4	0
// OP_LOAD_F	28	152	9192
// OP_STORE_V	9192	7	0
// OP_CALL2	5968	0	0
// OP_STORE_V	4324	4	0
// OP_LOAD_F	28	152	9193
// OP_STORE_V	9193	7	0
// OP_CALL2	5939	0	0
// OP_STORE_V	4325	4	0
// OP_LOAD_F	28	152	9194
// OP_STORE_V	9194	7	0
// OP_CALL2	5939	0	0
// OP_STORE_V	4326	4	0
// OP_LOAD_F	28	152	9195
// OP_STORE_V	9195	7	0
// OP_CALL2	5939	0	0
// OP_RETURN	0	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	323	7	0
// OP_STORE_V	9196	10	0
// OP_STORE_V	708	13	0
// OP_STORE_V	327	16	0
// OP_CALL5	454	0	0
// OP_CALL0	9175	0	0
// OP_DONE	0	0	0
void () sham_die = 
{
    
    if(self.health < -60)
    {
        sound(self, CHAN_VOICE, "player/udeath.wav", 1, ATTN_NORM);
        ThrowHead("progs/h_shams.mdl", self.health);
        ThrowGib("progs/gib1.mdl", self.health);
        ThrowGib("progs/gib2.mdl", self.health);
        ThrowGib("progs/gib3.mdl", self.health);
        return;
    }
    
    sound(self, CHAN_VOICE, "shambler/sdeath.wav", 1, ATTN_NORM);
    sham_death1();
};

// monster_shambler
// function begins at statement 14536, parm_start=9198
// OP_IFNOT	35	4	0
// OP_STORE_V	28	4	0
// OP_CALL1	461	0	0
// OP_RETURN	0	0	0
// OP_LOAD_F	526	549	9198
// OP_BITAND	9198	571	9199
// OP_NOT_F	9199	0	9200
// OP_IFNOT	9200	27	0
// OP_STORE_V	9201	4	0
// OP_CALL1	466	0	0
// OP_STORE_V	9123	4	0
// OP_CALL1	466	0	0
// OP_STORE_V	9191	4	0
// OP_CALL1	466	0	0
// OP_STORE_V	4327	4	0
// OP_CALL1	466	0	0
// OP_STORE_V	9111	4	0
// OP_CALL1	465	0	0
// OP_STORE_V	9150	4	0
// OP_CALL1	465	0	0
// OP_STORE_V	9196	4	0
// OP_CALL1	465	0	0
// OP_STORE_V	9164	4	0
// OP_CALL1	465	0	0
// OP_STORE_V	8933	4	0
// OP_CALL1	465	0	0
// OP_STORE_V	1336	4	0
// OP_CALL1	465	0	0
// OP_STORE_V	8942	4	0
// OP_CALL1	465	0	0
// OP_STORE_V	9042	4	0
// OP_CALL1	465	0	0
// OP_STORE_V	8975	4	0
// OP_CALL1	465	0	0
// OP_ADDRESS	28	104	9202
// OP_STOREP_F	241	9202	0
// OP_ADDRESS	28	103	9203
// OP_STOREP_F	230	9203	0
// OP_STORE_V	28	4	0
// OP_STORE_V	9201	7	0
// OP_CALL2	450	0	0
// OP_STORE_V	28	4	0
// OP_STORE_V	296	7	0
// OP_STORE_V	299	10	0
// OP_CALL3	451	0	0
// OP_ADDRESS	28	152	9204
// OP_STOREP_F	3343	9204	0
// OP_ADDRESS	28	357	9205
// OP_STOREP_FNC	8903	9205	0
// OP_ADDRESS	28	358	9206
// OP_STOREP_FNC	8920	9206	0
// OP_ADDRESS	28	359	9207
// OP_STOREP_FNC	8934	9207	0
// OP_ADDRESS	28	363	9208
// OP_STOREP_FNC	9187	9208	0
// OP_ADDRESS	28	361	9209
// OP_STOREP_FNC	9063	9209	0
// OP_ADDRESS	28	360	9210
// OP_STOREP_FNC	9109	9210	0
// OP_ADDRESS	28	362	9211
// OP_STOREP_FNC	9161	9211	0
// OP_CALL0	6238	0	0
// OP_DONE	0	0	0
void () monster_shambler = 
{
    
    if(deathmatch)
    {
        remove(self);
        return;
    }
    
    
    if(!(current_selected.chess_flags & CF_HAS_MOVED))
    {
        precache_model("progs/shambler.mdl");
        precache_model("progs/s_light.mdl");
        precache_model("progs/h_shams.mdl");
        precache_model("progs/bolt.mdl");
        precache_sound("shambler/sattck1.wav");
        precache_sound("shambler/sboom.wav");
        precache_sound("shambler/sdeath.wav");
        precache_sound("shambler/shurt2.wav");
        precache_sound("shambler/sidle.wav");
        precache_sound("shambler/ssight.wav");
        precache_sound("shambler/melee1.wav");
        precache_sound("shambler/melee2.wav");
        precache_sound("shambler/smack.wav");
    }
    
    self.solid = SOLID_SLIDEBOX;
    self.movetype = MOVETYPE_STEP;
    setmodel(self, "progs/shambler.mdl");
    setsize(self, VEC_HULL2_MIN, VEC_HULL2_MAX);
    self.health = 600;
    self.th_stand = sham_stand1;
    self.th_walk = sham_walk1;
    self.th_run = sham_run1;
    self.th_die = sham_die;
    self.th_melee = sham_melee;
    self.th_missile = sham_magic1;
    self.th_pain = sham_pain;
    walkmonster_start();
};

